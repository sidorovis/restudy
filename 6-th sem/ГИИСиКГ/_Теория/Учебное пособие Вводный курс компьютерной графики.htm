<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0040)http://ermak.cs.nstu.ru/kg_rivs/kg01.htm -->
<HTML><HEAD><TITLE>Учебное пособие "Вводный курс компьютерной графики"</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META content="MSHTML 5.00.2014.210" name=GENERATOR></HEAD>
<BODY aLink=#ff0000 
background="Учебное пособие Вводный курс компьютерной графики_files/mainback.gif" 
bgColor=#ffffff bgProperties=fixed link=#0000ff text=#000000 vLink=#008000>
<TABLE align=center width="100%">
  <TBODY>
  <TR>
    <TD align=middle vAlign=top><IMG alt="Логотип НГТУ" border=0 height=100 
      hspace=10 
      src="Учебное пособие Вводный курс компьютерной графики_files/logo.gif" 
      title=НГТУ width=135></TD>
    <TD align=left vAlign=center><A name=top title="Ваше учебное заведение">
      <H3>Новосибирский Государственный Технический Университет.<BR>Факультет 
      автоматики и вычислительной техники<BR>Кафедра вычислительной техники 
      (специальность 220100).</H3></A>
      <HR align=center SIZE=5 width="100%">
    </TD></TR></TBODY></TABLE>
<DIV align=center>
<H2><FONT color=#ff0000 face="">Учебное пособие "Вводный курс компьютерной 
графики"</FONT></H2></DIV>
<P align=center title=""><B>МАШИННАЯ ГРАФИКА<BR>(Учебное пособие в 3-х 
книгах)<BR>Книга 1<BR><BR>П.В.Вельтмандер</B> </P>
<P>
<P><BR>В вводном курсе дается общее введение в машинную графику - история, 
предмет, области приложений, затем рассмотрены зрительный аппарат человека, 
модели цветов в машинной графике, устройство и параметры технических средств 
документирования, архитектура векторных и растровых дисплеев, дисплеи на 
альтернативных принципах, устройства ввода, аппаратная реализация некоторых 
базовых алгоритмов. Курс ориентирован на две основные категории будущих 
специалистов: 
<UL type=square>
  <LI>разработчики программно-технических средств машинной графики, 
  <LI>разработчики прикладных пакетов, приближенные к техническим средствам. 
  </LI></UL>
<P><BR>Курс разбит на три части, выпущенные в виде отдельных книг:<BR>
<OL>
  <LI><A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm" 
  title='Учебное пособие "Вводный курс".'>Вводный курс.</A> 
  <LI><A href="http://ermak.cs.nstu.ru/kg_rivs/kg02.htm" 
  title='Учебное пособие "Алгоритмы компьютерной графики ".'>Алгоритмы 
  компьютерной графики.</A> 
  <LI><A href="http://ermak.cs.nstu.ru/kg_rivs/kg03.htm" 
  title='Учебное пособие "Архитектуры графических систем"'>Архитектуры 
  графических систем.</A> </LI></OL>
<P>
<CENTER>Рецензент<BR>канд. физ.-мат. наук, С.И.&nbsp;Упольников </CENTER>
<P align=right>ISBN&nbsp;&nbsp;ISBN 5-230-13583-2<BR>© Новосибирский 
государственный университет, 1997 
<P>
<H3>Оглавление </H3><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_ved">ВВЕДЕНИЕ</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.1">0.1&nbsp; История, 
предмет, приложения компьютерной графики</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.1.1">0.1.1&nbsp; 
Классификация устройств вывода</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.1.2">0.1.2&nbsp; История 
компьютерной графики</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.1.3">0.1.3&nbsp; 
Направления компьютерной графики</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.1.4">0.1.4&nbsp; 
Приложения компьютерной графики</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.2">0.2&nbsp; Зрительный 
аппарат человека</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.2.1">0.2.1&nbsp; 
Устройство глаза</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.2.2">0.2.2&nbsp; 
Чувствительность глаза</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.3">0.3&nbsp; Физические 
принципы формирования оттенков</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.4">0.4&nbsp; Цветовые 
модели</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.4.1">0.4.1&nbsp; Задание 
цветов</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.4.2">0.4.2&nbsp; 
Интерполяция цветов</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5">0.5&nbsp; Печатающие 
устройства</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5.1">0.5.1&nbsp; 
Разрешение устройств</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5.2">0.5.2&nbsp; 
Матричный принтер</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5.3">0.5.3&nbsp; 
Струйная печать</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5.4">0.5.4&nbsp; 
Лазерный принтер</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.5.5">0.5.5&nbsp; 
Принтеры на твердых красителях</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.6">0.6&nbsp; 
Графопостроители</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.6.1">0.6.1&nbsp; 
Планшетные графопостроители</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.6.2">0.6.2&nbsp; 
Графопостроители с перемещающимся носителем</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.6.3">0.6.3&nbsp; 
Электростатические графопостроители</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7">0.7&nbsp; 
Электронно-лучевые трубки</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7.1">0.7.1&nbsp; 
Черно-белые кинескопы</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7.2">0.7.2&nbsp; Цветные 
кинескопы</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7.3">0.7.3&nbsp; 
Разрешение мониторов</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7.4">0.7.4&nbsp; 
Люминофоры</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.7.5">0.7.5&nbsp; 
Гамма-коррекция</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8">0.8&nbsp; Дисплеи с 
произвольным сканированием луча (каллиграфические или векторные 
дисплеи)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8.1">0.8.1&nbsp; 
Дисплейный генератор</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8.2">0.8.2&nbsp; 
Преобразования</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8.3">0.8.3&nbsp; 
Дисплейный контроллер</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8.4">0.8.4&nbsp; 
Варианты архитектуры графических систем</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.8.5">0.8.5&nbsp; Области 
применения векторных дисплеев</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.9">0.9&nbsp; Растровые 
дисплеи</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.9.1">0.9.1&nbsp; 
Видеоконтроллер</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.9.2">0.9.2&nbsp; 
Создание изображения</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.9.3">0.9.3&nbsp; 
Видеопамять</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10">0.10&nbsp; Другие 
типы дисплеев</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10.1">0.10.1&nbsp; 
Дисплеи на запоминающей трубке</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10.2">0.10.2&nbsp; 
Дисплеи с плазменный панелью</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10.3">0.10.3&nbsp; 
Дисплеи с жидкокристаллическим индикатором</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10.4">0.10.4&nbsp; 
Дисплеи с электролюминисцентным индикатором</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.10.5">0.10.5&nbsp; 
Дисплеи с эмиссией полем</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11">0.11&nbsp; 
Дисплейные подсистемы IBM&nbsp;PC</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.1">0.11.1&nbsp; 
Видеоадаптеры</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.2">0.11.2&nbsp; 
Мониторы</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.3">0.11.3&nbsp; 
Замечание об адресации в IBM&nbsp;PC</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.4">0.11.4&nbsp; 
Архитектура видеоадаптеров</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.5">0.11.5&nbsp; 
Видеоадаптер CGA</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.11.6">0.11.6&nbsp; 
Видеоадаптеры EGA/VGA</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12">0.12&nbsp; 
Устройства ввода</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.1">0.12.1&nbsp; 
Клавиатуры (Keyboards)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.2">0.12.2&nbsp; 
Кнопки (Buttons)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.3">0.12.3&nbsp; 
Световое перо (Lightpen)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.4">0.12.4&nbsp; 
Планшеты (Tabletts)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.5">0.12.5&nbsp; 
"Мышь" (Mouse), трекбол (Treckball), джойстик 
(Joystick)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.6">0.12.6&nbsp; 
Потенциометр</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.7">0.12.7&nbsp; 
Растровый сканер</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.12.8">0.12.8&nbsp; 
Кодировщик</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.13">0.13&nbsp; 
Нетрадиционные устройства</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.13.1">0.13.1&nbsp; 
Сенсорная панель (Touch Screen)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.13.2">0.13.2&nbsp; 
Речевой диалог</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.13.3">0.13.3&nbsp; 
Средства диалога для систем виртуальной реальности</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_bib">&nbsp;СПИСОК 
ЛИТЕРАТУРЫ</A><BR><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14">0.14&nbsp; 
Приложение 1. Преобразование моделей цветов</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.1">0.14.1&nbsp; 
V_HSVRGB - перевод из HSV в RGB</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.2">0.14.2&nbsp; 
V_RGBHSV - перевод из RGB в HSV</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.3">0.14.3&nbsp; Тест 
процедур V_HSVRGB и V_RGBHSV</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.4">0.14.4&nbsp; 
V_HLSRGB - перевод из HLS в RGB</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.5">0.14.5&nbsp; 
V_RGBHLS - перевод из RGB в HLS</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_sEc0.14.6">0.14.6&nbsp; Тест 
процедур V_HLSRGB и V_RGBHLS</A><BR>
<P>
<H3>Список таблиц </H3>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.7.1">0.7.1&nbsp; 
Параметры некоторых люминофоров</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.7.2">0.7.2&nbsp; 
Зависимость моделей цветов от системной гаммы</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.9.1">0.9.1&nbsp; 
Характерные времена для некоторых мониторов</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.9.2">0.9.2&nbsp; 
Параметры некоторых микросхем памяти</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.10.1">0.10.1&nbsp; 
Параметры дисплеев с плазменной панелью</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tth_tAb0.11.1">0.11.1&nbsp; 
Характеристики видеоадаптеров IBM PC</A><BR>
<P>
<CENTER>
<H3><A name=tth_ved>ВВЕДЕНИЕ</A></H3></CENTER>В данной, первой части курса 
лекций дается общее введение в компьютерную графику. Основное внимание при этом 
уделяется техническим средствам. 
<P>В первом разделе рассмотрены история, основные направления и некоторые 
приложения компьютерной графики. 
<P>В втором разделе рассмотрены зрительный аппарат человека и 
психофизиологические особенности восприятия цветов, которые необходимо учитывать 
при построении систем компьютерной графики. 
<P>В третьем разделе рассмотрены физические принципы формирования оттенков - 
аддитивный, используемый для самосветящихся объектов, и субтрактивный, 
используемый для несамосветящихся объектов. 
<P>В четвертом разделе рассмотрены основные цветовые модели, используемые в 
компьютерной графике: аппаратно-ориентированные модели - RGB, CMY, YIQ и 
ориентированные на человека - HSV, HLS. 
<P>В пятом разделе рассмотрены классификация методов печати, принципы работы 
основных принтеров - матричных, струйных, лазерных, на твердых красителях и 
протоколы их работы. 
<P>В шестом разделе приведена классификация графопостроителей и дано описание 
работы основных их типов - планшетных, с перемещающимся носителем (рулонных, с 
абразивной головкой, барабанных) и электростатических. 
<P>В седьмом разделе рассмотрены основные устройства отображения в компьютерной 
графике - электроннолучевые трубки, их основные типы, люминофор и соотношения, 
определяющие качество отображения. 
<P>В восьмом разделе рассмотрены дисплеи с произвольным сканированием луча 
(векторные или каллиграфические дисплеи), дисплеи с растровым сканированием луча 
(растровые дисплеи), их архитектура и работа основных компонент. 
<P>В девятом разделе рассмотрены дисплеи, использующие другие типы индикаторов, 
- запоминающую трубку, плазменную панель, жидкокристаллический индикатор и 
электролюминесцентную панель. 
<P>В десятом разделе рассмотрены архитектуры дисплейных подсистем IBM&nbsp;PC. 
<P>В одиннадцатом разделе рассмотрены устройства ввода, используемые в 
компьютерной графике. 
<P>В двенадцатом, заключительном разделе рассмотрены нетрадиционные устройства 
(сенсорная панель, речевой диалог, а также устройства, используемые в системах 
виртуальной реальности). 
<P>В приложении приведены алгоритмы перехода от одной цветовой модели к другой. 
<P>
<CENTER>
<H3><A name=tth_sEc0.1>0.1</A>&nbsp;&nbsp;История, предмет, приложения 
компьютерной графики</H3></CENTER>
<P>В данном разделе: 
<P><FONT face=symbol>·</FONT> рассмотрена история развития компьютерной графики, 
начиная от ее появления в 1950 г;<BR>
<P><FONT face=symbol>·</FONT> пояснены основные направления компьютерной 
графики: 
<P>- изобразительная компьютерная графика, 
<P>- обработка и анализ изображений, 
<P>- анализ сцен (перцептивная компьютерная графика), 
<P>- компьютерная графика для научных абстракций (когнитивная компьютерная 
графика - способствующая познанию);<BR>
<P><FONT face=symbol>·</FONT> дано общее описание некоторых важных приложений 
компьютерной графики, подробно рассматривается приложение для компьютерного 
моделирования, как нового инструмента исследований, и направление "виртуальная 
реальность", возникшее в последние годы.<BR>
<P>
<CENTER>
<H3><A name=tth_sEc0.1.1>0.1.1</A>&nbsp;&nbsp;Классификация устройств 
вывода</H3><A name=OutKlass></A></CENTER>
<P>Устройства вывода можно классифицировать следующим образом: 
<P>1. По принципам записи (обновления) изображения: 
<P><FONT face=symbol>·</FONT> с произвольным сканированием луча, при котором 
изображение формируется при перемещении луча по экрану в соответствии с 
координатами строящихся элементов изображения (каллиграфические, штриховые 
устройства);<BR>
<P><FONT face=symbol>·</FONT> с растровым сканированием луча, при котором 
изображение представляется в виде матрицы точек. Изображение на экране 
формируется при перемещении луча в соответствии с разверткой слева-направо по 
строке и сверху-вниз по строкам с подсветкой требуемых точек. 
<P>2. По принципам отображения: 
<P><FONT face=symbol>·</FONT> периодическая регенерация информации на экране из 
неотображающей памяти; 
<P><FONT face=symbol>·</FONT> использование отображающего устройства сохранения 
изображения. 
<P>3. По технологическим способам вывода (свечение люминофора, вычерчивание 
пишущим узлом, перенос красителя и т.п.). 
<P>
<CENTER>
<H3><A name=tth_sEc0.1.2>0.1.2</A>&nbsp;&nbsp;История компьютерной 
графики</H3></CENTER>
<P>Развитие компьютерной графики, особенно на ее начальных этапах, в первую 
очередь связано с развитием технических средств и в особенности дисплеев. 
Рассмотрение начнем с истории развития технологий вывода (векторные, растровые и 
иные дисплеи), затем приведем краткую хронологию становления дисплейной техники 
у нас в стране и в заключение рассмотрим этапы развития методов и приложений. 
<P>
<CENTER>
<H4>История технологий вывода</H4></CENTER>
<P><B>Произвольное сканирование луча.</B> Дисплейная графика появилась как 
попытка использовать электроннолучевые трубки (ЭЛТ) с произвольным сканированием 
луча для вывода изображения из ЭВМ. Как пишет Ньюмен [<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#mbib1" name=CITEmbib1>1</A>] 
"по-видимому, первой машиной, где ЭЛТ использовалась в качестве устройства 
вывода была ЭВМ Whirlwind-I (Ураган-I), изготовленная в 1950&nbsp;г." в 
Массачусетском технологическом институте. С этого эксперимента начался этап 
развития векторных дисплеев (дисплеев с произвольным сканированием луча, 
каллиграфических дисплеев). На профессиональном жаргоне вектором называется 
отрезок прямой. Отсюда и происходит название "векторный дисплей". 
<P>При перемещении луча по экрану в точке, на которую попал луч, возбуждается 
свечение люминофора экрана. Это свечение достаточно быстро прекращается при 
перемещении луча в другую позицию (обычное время послесвечения - менее 
0.1&nbsp;с). Поэтому, для того чтобы изображение было постоянно видимым, 
приходится его перевыдавать (регенерировать изображение) 50 или 25 раз в 
секунду. Необходимость перевыдачи изображения требует сохранения его описания в 
специально выделенной памяти, называемой памятью регенерации. Само описание 
изображения называется дисплейным файлом. Понятно, что такой дисплей требует 
достаточно быстрого процессора для обработки дисплейного файла и управления 
перемещением луча по экрану. 
<P>Обычно серийные векторные дисплеи успевали 50 раз в секунду строить только 
около 3000-4000 отрезков. При большем числе отрезков изображение начинает 
мерцать, так как отрезки, построенные в начале очередного цикла, полностью 
погасают к тому моменту, когда будут строиться последние. 
<P>Другим недостатком векторных дисплеев является малое число градаций по 
яркости (обычно 2-4). Были разработаны, но не нашли широкого применения 
двух-трехцветные ЭЛТ, также обеспечивавшие несколько градаций яркости. 
<P>В векторных дисплеях легко стереть любой элемент изображения - достаточно при 
очередном цикле построения удалить стираемый элемент из дисплейного файла. 
<P>Текстовый диалог поддерживается с помощью алфавитно-цифровой клавиатуры. 
Косвенный графический диалог, как и во всех остальных дисплеях, осуществляется 
перемещением перекрестия (курсора) по экрану с помощью тех или иных средств 
управления перекрестием - координатных колес, управляющего рычага (джойстика), 
трекбола (шаровой рукоятки), планшета и т.д. Отличительной чертой векторных 
дисплеев является возможность непосредственного графического диалога, 
заключающаяся в простом указании с помощью светового пера объектов на экране 
(линий, символов и т.д.). Для этого достаточно с помощью фотодиода определить 
момент прорисовки (и следовательно начала свечения люминофора) любой части 
требуемого элемента. 
<P>Векторные дисплеи обычно подключаются к ЭВМ высокоскоростными каналами связи. 

<P>Первые серийные векторные дисплеи за рубежом появились в конце 60-х годов. В 
1963 г. был разработан прототип дисплейной станции IBM 2250 (до осени 1964 г. 
работы были засекречены). 
<P>Подробному рассмотрению векторных дисплев посвящен разд.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#V_Displ">0.8</A>. 
<P><B>Растровое сканирование луча.</B> Прогресс в технологии микроэлектроники 
привел к тому, с середины 70-х годов подавляющее распространение получили 
дисплеи с растровым сканированием луча. Подробному рассмотрению этих дисплеев 
посвящен разд.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#R_Displ">0.9</A>. 
<P><B>Запоминающие трубки.</B> В конце 60-х годов появилась запоминающая ЭЛТ, 
которая способна достаточно длительное время (до часа) прямо на экране хранить 
построенное изображение. Следовательно, не обязательна память регенерации и не 
нужен быстрый процессор для выполнения регенерации изображения. Стирание на 
таком дисплее возможно только для всей картинки в целом. Сложность изображения 
практически не ограничена. Разрешение, достигнутое на дисплеях на запоминающей 
трубке, такое же как и на векторных или выше - до 4096 точек. 
<P>Текстовый диалог поддерживается с помощью алфавитно-цифровой клавиатуры, 
косвенный графический диалог осуществляется перемещением перекрестия по экрану 
обычно с помощью координатных колес. 
<P>Такие дисплеи подключаются к ЭВМ низкоскоростными каналами связи (типа 
телефонных). 
<P>Появление таких дисплеев с одной стороны способствовало широкому 
распространению компьютерной графики, с другой стороны представляло собой 
определенный регресс, так как распространялась сравнительно низкокачественная и 
низкоскоростная, не слишком интерактивная графика. Более подробно о таких 
дисплеях см. в п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#StorageTube">0.10.1</A>. 
<P><B>Плазменная панель.</B> В 1966&nbsp;г. была изобретена плазменная панель, 
которую упрощенно можно представить как матрицу из маленьких разноцветных 
неоновых лампочек, каждая из которых включается независимо и может светиться с 
регулируемой яркостью. Ясно, что системы отклонения не нужно, не обязательна 
также и память регенерации, так как по напряжению на лампочке можно всегда 
определить горит она ли нет, т.е. есть или нет изображение в данной точке. В 
определенном смысле эти дисплеи объединяют в себе многие полезные свойства 
векторных и растровых устройств. К недостаткам следует отнести большую 
стоимость, недостаточно высокое разрешение и большое напряжение питания. В целом 
эти дисплеи не нашли широкого распространения. Более подробно о них см. 
п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#PlasmaPanel">0.10.2</A>. 
<P><B>Жидкокристаллические индикаторы.</B> Дисплеи на жидкокристаллических 
индикаторах работают аналогично индикаторам в электронных часах, но, конечно, 
изображение состоит не из нескольких сегментов, а из большого числа отдельно 
управляемых точек. Эти дисплеи имеют наименьшие габариты и энергопотребление, 
поэтому широко используются в портативных компьютерах несмотря на меньшее 
разрешение, меньшую контрастность и заметно большую цену, чем для растровых 
дисплеев на ЭЛТ. Более подробно о дисплеях на жидкокристаллических индикаторах 
см. п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#LiquidCrystal">0.10.3</A>. 
<P><B>Электролюминисцентные индикаторы.</B> Наиболее высокие яркость, 
контрастность, рабочий температурный диапазон и прочность имеют дисплеи на 
электролюминисцентных индикаторах. Благодаря достижениям в технологии они стали 
доступны для применения не долько в дорогих высококлассных системах, но и в 
общепромышленных системах. Работа таких дисплеев основана на свечении люминофора 
под воздействим относительно высокого переменного напряжения, прикладываемого к 
взаимноперпендикулярным наборам электродов, между которыми находится люминофор. 
Более подробно о таких дисплеях см. п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#ElectroLuminisc">0.10.4</A>. 
<P><B>Дисплеи с эмиссией полем.</B> Дисплеи на электронно-лучевых трубках, 
несмотря на их относительную дешевизну и широкое распространение, механически 
непрочны, требуют высокого напряжения питания, потребляют большую мощность, 
имеют большие габариты и ограниченный срок службы, связанный с потерей эмиссии 
катодами. Одним из методов устранения указанных недостатков, является создание 
плоских дисплеев с эмиссией полем с холодных катодов в виде сильно заостренных 
микроигл. Более подробно о таких дисплеях см. п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#FieldEmission">0.10.5</A>. 
<P>
<CENTER>
<H4>Хронология некоторых отечественных разработок</H4></CENTER>
<P>В следующем ниже перечислении приведены далеко не все проведенные в стране 
разработки. К сожалению по многим из них у меня не было точной информации. Могу 
лишь упомянуть, что дисплеи разрабатывались в Новосибирске, Протвино, 
Ленинграде, Москве, Зеленограде, Воронеже, Львове, Виннице, Минске (ИТК АН 
БССР), Киеве и, конечно, во многих других. Одним из первых векторных дисплеев 
был дисплей УПГИ, серийно выпускавшийся для комплектации АРМ машиностроительного 
направления. Для автоматизации проектирования печатных плат и простого цветного 
вывода использовался дисплей ЦРД (цветной растровый дисплей). Вероятно первой 
законченной конструкторской проработкой векторного дисплея был "экран 
динамического вывода", выполненный в начале 60-х годов. 
<P><FONT face=symbol>·</FONT> 1968, ВЦ АН СССР, машина БЭСМ-6, вероятно, первый 
отечественный растровый дисплей, видеопамять на магнитном барабане весом 400 
кГ;<BR>
<P><FONT face=symbol>·</FONT> 1972, Институт автоматики и электрометрии (ИАиЭ), 
векторный дисплей Символ;<BR>
<P><FONT face=symbol>·</FONT> 1973, ИАиЭ, векторный дисплей Дельта. Малая серия 
- 1974 Институт прикладной физики (ИПФ), Новосибирск. Серия - 1975, завод "Луч", 
Новосибирск; 
<P><FONT face=symbol>·</FONT> 1977, ИАиЭ, векторный дисплей ЭПГ-400. Серия <FONT 
face=symbol>~ </FONT>1979; 
<P><FONT face=symbol>·</FONT> 1979, ИПФ, цветной полутоновый растровый дисплей 
Гамма-1 - 256&times;256&times;6 бит;<BR>
<P><FONT face=symbol>·</FONT> 1981-1982, векторные дисплеи ЭПГ-СМ (ИАиЭ), 
ЭПГ-2СМ. Серия Серия <FONT face=symbol>~ </FONT>1983;<BR>
<P><FONT face=symbol>·</FONT> 1982, Киев, НИИ периферийного оборудования, 
векторный дисплей СМ-7316 (4000-6000 векторов, 4096 символов, разрешение 
2048&times;2048);<BR>
<P><FONT face=symbol>·</FONT> 1982, ИПФ, растровый цветной полутоновый дисплей 
Гамма-2. 512&times;512&times;8 бит, таблица цветности, поддержка окон;<BR>
<P><FONT face=symbol>·</FONT> 1983, ИПФ, растровая цветная полутоновая 
дисплейная станция Гамма-4. 1024&times;768&times;8 бит, таблица цветности, поддержка окон, 
видеопамять 4 Мбайта, прокрутка изображения, плавное, переменное мастабирование. 
Серия <FONT face=symbol>~ </FONT>1985-1986;<BR>
<P><FONT face=symbol>·</FONT> 1984, ИПФ, растровое расширение символьных 
терминалов Гамма-5. 512&times;256&times;1 бит, прокрутка изображения. Серия 1984;<BR>
<P>Итак, стартовав в 1950&nbsp;г., компьютерная графика к настоящему времени 
прошла путь от экзотических экспериментов до одного из важнейших, всепроникающих 
инструментов современной цивилизации, начиная от научных исследований, 
автоматизации проектирования и изготовления, бизнеса, медицины, экологии, 
средств массовой информации, досуга и кончая бытовым оборудованием. Можно 
выделить следующие этапы развития: 
<P><FONT face=symbol>·</FONT> 60-70-е годы - научная дисциплина. Бурное развитие 
методов, алгоритмов - отсечение, генерация примитивных графических элементов, 
закраска узорами, реалистическое представление сцен (удаление невидимых линий и 
граней, трассировка лучей, излучающие поверхности);<BR>
<P><FONT face=symbol>·</FONT> 80-е годы - прикладная наука. Отработка методов, 
средств, аппаратуры в различных сферах приложений;<BR>
<P><FONT face=symbol>·</FONT> <FONT face=symbol>·</FONT>&nbsp;90-е годы - 
основное средство общения человека с ЭВМ. 
<P>
<CENTER>
<H3><A name=tth_sEc0.1.3>0.1.3</A>&nbsp;&nbsp;Направления компьютерной 
графики</H3></CENTER>
<P>В нынешнем, устоявшемся состоянии принято разделять компьютерную графику на 
следующие направления:<BR><FONT face=symbol>·</FONT>&nbsp;изобразительная 
компьютерная графика,<BR><FONT face=symbol>·</FONT>&nbsp;обработка и анализ 
изображений,<BR><FONT face=symbol>·</FONT>&nbsp;анализ сцен (перцептивная 
компьютерная графика), 
<P><FONT face=symbol>·</FONT> компьютерная графика для научных абстракций 
(когнитивная компьютерная графика - графика, способствующая познанию).<BR>
<P>
<CENTER>
<H4>Изобразительная компьютерная графика</H4></CENTER>
<P>Объекты: синтезированные изображения. Задачи:<BR><FONT 
face=symbol>·</FONT>&nbsp;построение модели объекта и генерация 
изображения,<BR><FONT face=symbol>·</FONT>&nbsp;преобразование модели и 
изображения,<BR><FONT face=symbol>·</FONT>&nbsp;идентификация объекта и 
получение требуемой информации. 
<P>
<CENTER>
<H4>Обработка и анализ изображений</H4></CENTER>
<P>Объекты: дискретное, числовое представление фотографий. Задачи:<BR><FONT 
face=symbol>·</FONT>&nbsp;повышение качества изображения, 
<P><FONT face=symbol>·</FONT> оценка изображения - определение формы, 
местоположения, размеров и других параметров требуемых объектов,<BR>
<P><FONT face=symbol>·</FONT> распознавание образов - выделение и классификация 
свойств объектов (обработка аэрокосмических снимков, ввод чертежей, системы 
навигации, обнаружения и наведения).<BR>
<P>Итак, в основе обработки и анализа изображений лежат методы представления, 
обработки и анализа изображений плюс, естественно, изобразительная компьютерная 
графика хотя бы для того, чтобы представить результаты. 
<P>
<CENTER>
<H4>Анализ сцен</H4></CENTER>
<P>Предмет: исследование абстрактных моделей графических объектов и взаимосвязей 
между ними. Объекты могут быть как синтезированными, так и выделенными на 
фотоснимках. 
<P>Первый шаг в анализе сцены - выделение характерных особенностей, формирующих 
графический объект(ы). 
<P>Примеры: машинное зрение (роботы), анализ рентгеновских снимков с выделением 
и отслеживанием интересующего объекта, например, сердца. 
<P>Итак, в основе анализа сцен (перцептивной компьютерной графики) находятся 
изобразительная графика + анализ изображений + специализированные средства. 
<P>
<CENTER>
<H4>Когнитивная компьютерная графика</H4></CENTER>
<P>Только формирующееся новое направление, пока недостаточно четко очерченное. 
<P>Это компьютерная графика для научных абстракций, способствующая рождению 
нового научного знания. База - мощные ЭВМ и высокопроизводительные средства 
визуализации. 
<P>Общая последовательность познания заключается в, возможно циклическом, 
продвижении от гипотезы к модели (объекта, явления) и решению, результатом 
которого является знание (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#r01_01">0.1.1</A>). 
<P>
<P><A name=tth_fIg0.1></A><A name=r01_01>
<CENTER><BR><IMG alt="Рисунок 1" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0101.gif">
<P></CENTER>
<CENTER>Рис. 0.1.1: Последовательность процесса познания</CENTER></A>
<P>
<P>Человеческое познание использует два основных механизма мышления, за каждым 
из которых закреплена половина мозга: 
<P><FONT face=symbol>·</FONT> осознанное, логико-вербальное, манипулирует 
абстрактными последовательностями символов (объектов) + семантика символов + 
прагматические представления, связанные с символами. Возраст этого механизма, 
связанного с наличием речи, - до 100 тыс. лет:<BR>
<P><FONT face=symbol>·</FONT> неосознанное, интуитивное, образное, работает с 
чувственными образами и представлениями о них. Возраст этого механизма - время 
существования на Земле животного мира.<BR>
<P>Первоначально ЭВМ имели малую производительность процессоров и средств 
компьютерной графики, т.е. по сути дела имели возможность работы только с 
символами (некоторый упрощенный аналог логического мышления). 
<P>С появлением супер-ЭВМ, производительностью в миллиард и более операций в 
секунду и графических супер-станций, производительностью до сотен миллионов 
операций в секунду, появилась возможность достаточно эффективного 
манипулирования образами (картинами). 
<P>Важно отметить, что мозг не только умеет работать с двумя способами 
представления информации, причем с образами он работает иначе и эффективнее чем 
ЭВМ, но и умеет соотносить эти два способа и совершать (каким-то образом) 
переходы от одного представления к другому. 
<P>В этом контексте основная проблема и задача когнитивной компьютерной графики 
- создание таких моделей представления знаний, в которых можно было бы 
однообразно представлять как объекты, характерные для логического 
(символического, алгебраического) мышления, так и объекты, характерные для 
образного мышления. 
<P>Другие важнейшие задачи: 
<P><FONT face=symbol>·</FONT> визуализация тех знаний, для которых не существует 
(пока ?) символических описаний,<BR>
<P><FONT face=symbol>·</FONT> поиск путей перехода от образа к формулировке 
гипотезы о механизмах и процессах, представленных этими (динамическими) образами 
на экране дисплея.<BR>
<P>Появление когнитивной компьютерной графики - сигнал о переходе от эры 
экстенсивного развития естественного интеллекта к эре интенсивного развития, 
характеризующегося глубоко проникающей компьютеризацией, рождающей 
человеко-машинную технологию познания, важным моментом которой является 
непосредственное, целенаправленное, активирующее воздействие на подсознательные 
интуитивные механизмы образного мышления. 
<P>Одним из ярких и наиболее ранних примеров приложения когнитивной компьютерной 
графики является работа Ч.&nbsp;Страуса "Неожиданное применение ЭВМ в чистой 
математике" (ТИИЭР, т. 62, N 4, 1974, с. 96 - 99). В ней показано как для 
анализа сложных алгебраических кривых используется "n-мерная" доска на основе 
графического терминала. Пользуясь устройствами ввода математик может легко 
получать геометрические изображения результатов направленного изменения 
параметров исследуемой зависимости. Он может также легко управлять текущими 
значениями параметров, "углубляя тем самым свое понимание роли вариаций этих 
параметров". В результате получено "несколько новых теорем и определены 
направления дальнейших исследований". 
<P>
<CENTER>
<H3><A name=tth_sEc0.1.4>0.1.4</A>&nbsp;&nbsp;Приложения компьютерной 
графики</H3></CENTER>
<P>Как уже отмечалось, компьютерная графика стала основным средством 
взаимодействия человека с ЭВМ. Важнейшими сформировавшимися областями приложений 
являются: 
<P><FONT face=symbol>·</FONT> компьютерное моделирование, которое явилось 
исторически первым широким приложением компьютерной графики, 
<P><FONT face=symbol>·</FONT> системы автоматизации научных исследований, 
системы автоматизации проектирования, системы автоматизации конструирования, 
системы автоматизации производства, автоматизированные системы управления 
технологическими процессами,<BR>
<P><FONT face=symbol>·</FONT> бизнес, 
<P><FONT face=symbol>·</FONT> искусство, 
<P><FONT face=symbol>·</FONT> средства массовой информации, 
<P><FONT face=symbol>·</FONT> досуг. 
<P>В настоящее время появилось новое, очень интересное приложение компьютерной 
графики - виртуальная реальность. 
<P>По телевидению часто можно видеть передачи иллюстрирующие приложения 
компьютерной графики в автоматизации проектирования (были передачи об 
автоматизированном проектировании самолетов, автомобилей), много передач об 
автоматизации производства с различными робототехническими системами. 
<P>Передачи о мире бизнеса практически не обходятся без показа различной 
дисплейной техники и ее использования. 
<P>Что касается искусства, то достаточно упомянуть, что один из самых крупных 
первых суперкомпьютерных центров мира находился на студии Уолта Диснея и 
использовался для подготовки мультфильмов. Всем известно, что многие "жутики" и 
боевики также готовились с широким использованием средств компьютерной графики 
для подготовки высокореалистичных сцен. 
<P>Применение компьютерной графики в средствах массовой информации мы видим 
ежедневно, как в виде различных заставок и телеэффектов на экране, так и в виде 
газет, при подготовке многих из которых используется электронная верстка на 
компьютере. 
<P>С компьютерными играми, отнимающими не только время досуга, конечно же знаком 
каждый. 
<P>Поэтому здесь мы рассмотрим, в основном, приложения компьютерной графики в 
компьютерном моделировании, а также немного познакомимся с самым новым 
приложением - системами виртуальной реальности. 
<P>
<CENTER>
<H4>Компьютерная графика в интегрированной САПР</H4><A name=IntCAD></A></CENTER>
<P>Общий цикл разработки какого-либо промышленного изделия, будь то радиатор 
батареи центрального отопления или же самолет можно представить в виде схемы, 
показанной на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#r01_02">0.1.2</A>. 
<P>
<P><A name=tth_fIg0.2></A><A name=r01_02>
<CENTER><BR><IMG alt="Рисунок 2" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0102.gif">
<P></CENTER>
<CENTER>Рис. 0.1.2: Общий цикл разработки изделия</CENTER></A>
<P>
<P>Естественно, что могут выполняться возвраты на повторное выполнение общего 
цикла, начиная с некоторого этапа.<BR>
<P>
<CENTER>
<H4>Компьютерная графика в компьтерном моделировании</H4></CENTER>
<P>Ясно, что в настоящее время на всех этапах разработки в той или иной мере 
используются ЭВМ и, следовательно, компьютерная графика. На этапе исследований 
важную роль, кроме натурных экспериментов, играет компьютерное моделирование 
работы изделия и/или его компонент. Рассмотрим в качестве примера задачи 
моделирования быстропротекающих процессов механики сплошной среды. К таким 
задачам относятся задачи сварки и упрочнения взрывом, задачи расчета синтеза 
алмазов взрывом, задачи расчета защиты космических аппаратов от метеоритов и 
микрометеоритов и т.д. 
<P>Следует отметить что реальный физический процесс развивается за единицы или 
десятки микросекунд, поэтому натурный эксперимент не только дорогостоящ, но и 
дает мало информации. Обычно это один или несколько рентгеновских снимков, 
прямые измерения, как правило, или затруднены, или датчики вносят заметные 
изменения в процесс. 
<P>В этой связи опыт специалистами в этой области набирается довольно долго - 
порядка десятка и более лет и зачастую носит интуитивный характер. Поэтому одна 
из важнейших функций компьютерного моделирования - быстрое получение опыта. Ведь 
по сути дела комплекс компьютерного моделирования при адекватности моделей, 
заложенных в него, представляет собой уникальную экспериментальную установку, на 
которой можно измерить (выдать на дисплей) любую величину, что угодно изменить, 
даже приостановить процесс для подробного анализа и пустить дальше. Попробуйте 
это сделать со взрывом! 
<P>Другая важная функция комплекса компьютерного моделирования, особенно при 
оснащении его средствами коллективного, управляемого просмотра машинных фильмов, 
показывающих процесс не отдельными картинками, а в динамике - унификация 
представлений о процессе у заинтересованных специалистов - исследователей, 
конструкторов, технологов, испытателей. Так как обычно, при использовании только 
числовой информации и без образного ее представления у разных специалистов 
формируются собственные представления (не обязательно у всех одинаковые и 
правильные). 
<P>В настоящее время широко используются двумерные задачи моделирования, когда 
важны две пространственных координаты. Это достаточно широкий круг реальных 
процессов, но в ряде случаев обязательно использование трехмерных задач, которые 
считаются много дольше. Основные проблемы, стоящие на пути широкого 
распространения трехмерных задач, состоят в том, что, во-первых, при 
существующих численных методах объем вычислений растет быстрее чем четвертая 
степень требуемой точности, во-вторых, визуализация результатов существенно 
усложняется и замедляется. В дальнейшем рассмотрении речь идет о двумерных 
задачах. 
<P>В качестве иллюстрации некоторых явлений, которые необходимо моделировать, на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#kapsula">0.1.3</A> 
показан один из этапов решения осесимметричной задачи обжатия капсулы с газом с 
помощью взрыва. 
<P>
<P><A name=tth_fIg0.3></A>
<CENTER><A name=kapsula><BR><IMG alt="Рисунок 3" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0103.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.1.3: Обжатие капсулы с газом.</CENTER></A>
<P>
<P>Рассчитываемая область разбивается сеткой с общим числом узлов до 1-2 тысячи. 
Количество независимых переменных, рассчитываемых для узла, от 8 до 12 (скорость 
вдоль осей X и Y, давление, плотность, температура и т.д.). 
<P>
<CENTER>
<H4>Количественные параметры задач</H4></CENTER>
<P>Расчет ведется небольшими шагами по времени. Вначале на одном шаге по времени 
для всех узлов рассчитываются все величины. Затем время увеличивается и расчет 
повторяется. 
<P>Время расчета одного шага от 3-4&nbsp;с до 3-7&nbsp; мин. в зависимости от 
используемого процессора и задачи. Т.е. время расчета 2048 шагов - от 1.2-1.7 
часа до 102-287 часов, т.е. до 4-12 суток непрерывной работы процессора. (Для 
сравнения отметим, что по известным литературных данным процессорное время при 
моделирования на ЭВМ поляны цветов - около 18 часов, а ядерного устройства - до 
года. Так что рассматриваемые нами задачи не очень длительные). 
<P>Объем данных, перерабатываемых на одном шаге по времени - от 163_840 чисел 
(маленькая задача с расчетной сеткой 256&times;128 и 5 рассчитываемыми параметрами) до 
3_932_160 чисел (большая задача с расчетной сеткой 1024&times;256 и 15 рассчитываемыми 
параметрами). При использовании 32-х разрядных вещественных чисел это 
соответствует объему данных на шаге от 640&nbsp;Кбайт до 15&nbsp;Мбайт. (Для 
многих расчетов необходима 64-х разрядная арифметика, что приводит к удвоению 
объемов данных.) 
<P>Суммарный объем перерабатываемых данных при 2048 шагах по времени - от 1.28 
до 30&nbsp;Гбайт. 
<P>Представим себе что все эти гигабайты мы напечатали бы на листах стандартной 
писчей бумаги размером 210&times;297&nbsp;мм толщиной порядка 0.1&nbsp;мм через 1.5 
интервала, т.е. 40 строк по 62 символа в каждой. На изображение одного 32-х 
разрядного вещественного числа надо 12 символов: <FONT 
face=symbol>±</FONT>.ХХХХХХХ<FONT face=symbol>±</FONT>ХХ. 
<P>На маленькую задачу потребовалось бы: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD align=middle noWrap>256·128·5·2048·12
            <HR noShade>
             40·62<BR></TD>
          <TD align=middle noWrap><FONT face=symbol>@</FONT> 
            1&nbsp;623&nbsp;602листа 
</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Если сложить эти листы, то<BR>высота стопки составила бы 1 623 
602&times;0.1&nbsp;мм <FONT face=symbol>@</FONT> 162 метра,<BR>длина полосы составила 
бы 1 623 602&times;297&nbsp;мм <FONT face=symbol>@</FONT> 482 километра. 
<P>На большую задачу потребовалось бы: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD align=middle noWrap>1024·256·15·2048·12
            <HR noShade>
             40·62<BR></TD>
          <TD align=middle noWrap><FONT face=symbol>@</FONT> 
            38&nbsp;966&nbsp;437&nbsp;листов. 
</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Если сложить эти листы, то<BR>высота стопки составила бы 38 966 
437&times;0.1&nbsp;мм <FONT face=symbol>~ </FONT>3&nbsp;897&nbsp;м,<BR>длина полосы 
составила бы 38 966 437&times;297&nbsp;мм <FONT face=symbol>~ 
</FONT>11&nbsp;573&nbsp;километра. 
<P>Очевидно, что выдача результатов задачи в числовом виде, когда длина выдачи 
была бы больше, чем расстояние от Москвы до Владивостока (оно равно <FONT 
face=symbol>@</FONT> 11 тысяч километров), совершенно лишена смысла. 
<P>ЭВМ настолько много и быстро продуцирует результатов, что без новой 
технологии их обработки моделирование становится просто бессмысленным. Можно 
предложить два способа представления результатов в форме удобной для восприятия 
и анализа человеком: 
<UL>
  <P>
  <LI>ЭВМ изыскивает простую, физически оправданную аппроксимацию результатов в 
  виде аналитических формул. Этот подход ориентирован на логическое мышление и, 
  вообще говоря, для рассматриваемых задач трудно реализуем за исключением быть 
  может каких-то специальных, модельных постановок; 
  <LI>ЭВМ в процессе счета формирует машинные фильмы, показывающие изменение 
  расчетных величин в процессе счета. Так как за один шаг по времени изменение, 
  вообще говоря, мало, то вывод делается через некоторое количество шагов, 
  например, 10. Таким образом, при 2048 шагах счета для одной величины надо 
  запомнить около 200 кадров. Для вывода распределений скалярных величин, 
  например, давлений, плотностей и т.д. удобно использовать растровые дисплеи. 
  При этом одному узлу расчетной сетки соответствует 1 точка изображения, а цвет 
  и яркость точки характеризуют значение рассчитываемой величины. При одном 
  байте на точку изображения и с учетом того, что эти синтезированные 
  изображения достаточно легко сжимаются простыми и быстрыми алгоритмами в 
  среднем в 30 раз, получаем, что объем данных для фильма, показывающего 
  изменение одной величины (для большой задачи) равен: 
  <P>
  <CENTER>
  <TABLE align=center border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE align=left>
          <TBODY>
          <TR>
            <TD align=middle noWrap></TD>
            <TD align=middle noWrap>3 1024·256·2048
              <HR noShade>
               10·30<BR></TD>
            <TD align=middle noWrap><FONT face=symbol>@</FONT> 1.7&nbsp;Мбайт 
            </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
  <P>что, вообще говоря, поменьше, чем 30 Гбайт/12 = 2.5 Гбайта </P></LI></UL>
<P>В последнем случае, правда, возникает другая проблема. Она состоит в том, что 
числовая информация утрачивается и остаются только визуальные образы, а для 
разработки конструкций конечно же нужна числовая информация. Здесь используются 
два подхода: 
<UL>
  <P>
  <LI>просмотр и анализ фильма, выяснение интересующих мест и повторный пересчет 
  с требуемого места, 
  <LI>сброс всей числовой информации на большую внешнюю память, формирование и 
  просмотр фильмов выполняются с использованием результатов из внешней памяти. 
  Повторный пересчет с занятием дорогостоящего времени суперкомпьютера не 
  требуется. </LI></UL>
<P>На существующем уровне технологии дисковых накопителей реально сохранять 
решение не более чем одной задачи, поэтому практически возможно использование 
только подхода с пересчетом. Кроме этого, обычно расчеты выполняются в режиме 
диалога с оперативным изменением параметров задачи, поэтому технологических 
проблем с возвратами не возникает. Конечно, вычислитель используется 
недостаточно эффективно. 
<P>
<CENTER>
<H4>Виртуальная реальность</H4></CENTER>
<P>Виртуальная реальность - новейшее направление приложений компьютерной 
графики, позволяющее имитировать окружающую действительность с новым уровнем 
взаимодействия человек-ЭВМ. Основа систем виртуальной реальности - 
высокопроизводительная графическая рабочая станция, обладающая достаточным 
быстродействием и изобразительными возможностями для формирования 
высокореалистичных цветных полутоновых изображений. Устройства отображения в 
различных системах могут быть самыми различными - от обычных мониторов высокого 
разрешения до экранов во всю стену, используемых в имитаторах боевых действий, 
или же стереоскопических систем отображения, в том числе и в виде специальных 
очков, вмонтированных в шлем, надеваемый на голову. 
<P>Одно из важнейших отличий систем виртуальной реальности от других систем 
отображения - наличие средств воздействия не только на зрение, но и на другие 
органы чувств. В первую очередь это системы стереозвука, имитирующие требуемое 
распределение и интенсивности источников звука в пространстве. Наиболее дорогие 
системы обеспечивают воздействие и на осязание за счет использования специальных 
шлемов, перчаток и костюмов, которые за счет встроенных в них устройств не 
только определяют положение головы, направление взгляда, положение рук, пальцев, 
тела, но и имитируют прикосновения, сопротивление или "податливость" ручек и 
т.д. Можно почувствовать прикосновение к объекту существующему лишь в памяти 
компьютера! Осталось сымитировать запахи. 
<P>В настоящее время системы виртуальной реальности очень дороги. Самые дешевые 
стоят около 20 тыс долларов, более совершенные системы - около 100 тысяч 
долларов. Профессиональная перчатка для систем виртуальной реальности 
"дейта-глав", оборудованная датчиками положения, стоит $&nbsp;8800, ее 
упрощенный вариант для видеоигр - "пауэр-глав" стоит $&nbsp;99 и позволяет 
играющим действовать без мышки и клавиш - просто мановением руки. 
<P>Из-за большой сложности и дороговизны разработка систем виртуальной 
реальности во всем мире финансируется, в основном, по военным программам. Первые 
шаги в этом направлении были сделаны еще в 60-е годы при разработке компьютерных 
тренажеров для летчиков. Но в них обеспечивалось воздействие только на зрение. К 
таким системам, например, принадлежат системы "Аксай" и "Альбатрос", 
разработанные Институтом Автоматики и электрометрии. Известны также и т.н. 
полунатурные системы моделирования, имитирующие вибрации, тряску и эволюции 
самолета и работу бортового оборудования. Обучаемый при этом находится в кабине 
самолета, укрепленной на системе перемещающихся направляющих. Конечно, тренажеры 
очень дороги, так только один специальный шлем в тренажерах для военных летчиков 
стоит около 1 млн долларов. 
<P>На Западе сейчас появилось множество игр, использующих принципы систем 
виртуальной реальности. В 1992&nbsp;г. в Чикаго (США) открылся центр виртуальных 
видеоигр, где клиент, заняв место в модели одноместной кабины космического 
корабля, играет в звездные войны. Цена билета - 7 долларов. За первые три месяца 
было продано 300 тысяч билетов! 
<P>Сейчас работы по виртуальной реальности на Западе рассматриваются как главное 
направление развития компьютерной отрасли в будущем, которое окажет важное 
влияние на конкурентоспособность стран. В целом пик развития этого направления 
ожидается в начале грядущего тысячелетия. 
<P>
<CENTER>
<H3><A name=tth_sEc0.2>0.2</A>&nbsp;&nbsp;Зрительный аппарат 
человека</H3></CENTER>
<P>Системы отображения графической информации воздействуют на зрительный аппарат 
человека, поэтому с необходимостью должны учитывать как физические, так и 
психофизиологические особенности зрения. 
<P>
<CENTER>
<H3><A name=tth_sEc0.2.1>0.2.1</A>&nbsp;&nbsp;Устройство глаза</H3></CENTER>
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#auge_1">0.2.1</A> показан 
поперечный размер глазного яблока человека. Свет попадает в глаз через роговицу 
и фокусируется хрусталиком на внутренний слой глаза, называемый сетчаткой. 
Сетчатка преобразует свет в импульсы в нервных волокнах и состоит из трех слоев 
клеток. Удивительно то, что светочувствительные клетки, известные как колбочки и 
палочки, формируют слой клеток в задней части сетчатки. Таким образом, свет 
должен вначале пройти два слоя клеток, прежде чем он воздействует на колбочки и 
палочки. Причины для такого обратного устройства сетчатки не полностью поняты, 
но одно из объяснений состоит в том, что расположение светочувствительных клеток 
в задней части сетчатки позволяет любому паразитному непоглощенному свету 
попасть на клетки находящиеся непосредственно позади сетчатки, которые содержат 
черный пигмент - меланин. Клетки, содержащие меланин, также помогают химически 
восстанавливать светочувствительный визуальный пигмент в колбочках и палочках 
после того, как они были отбелены на свету. 
<P>Интересно отметить, что природа создала целый ряд конструкций глаза. При этом 
глаза у всех позвоночных похожи на глаза человека, а глаза у беспозвоночных либо 
сложные (фасеточные) как у насекомых, либо недоразвитые в виде 
световувствительного пятна. Только у осьминогов глаза устроены как у 
позвоночных, но светочувствительные клетки находятся непосредственно на 
внутренней поверхности глазного яблока, а не как у нас позади других слоев, 
занимающихся предварительной обработкой изображения. Поэтому, возможно, особого 
смысла в обратном расположении клеток в сетчатке нет. А это просто один из 
экспериментов природы. 
<P>Итак, внутренний слой сетчатки глаза содержит два типа светочувствительных 
рецепторов, занимающих область с раствором около 170<SUP><FONT 
face=symbol>°</FONT></SUP> относительно зрительной оси: 
<DL compact>
  <P>
  <DT><B></B>
  <DD><FONT face=symbol>@</FONT> 100 млн. палочек (длинные и тонкие рецепторы 
  ночного зрения), 
  <DT><B></B>
  <DD><FONT face=symbol>@</FONT> 6.5 млн. колбочек (короткие и толстые рецепторы 
  дневного зрения). </DD></DL>
<P>
<P><A name=tth_fIg0.1></A><A name=auge_1>
<CENTER><BR><IMG alt="Рисунок 4" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0104.gif">
<P></CENTER>
<CENTER>Рис. 0.2.1: Поперечный разрез глаза</CENTER></A>
<P>
<P>Информация от рецепторов передается в мозг по зрительному нерву, содержащему 
около 800 тысяч волокон. 
<P>Колбочки и палочки содержат зрительные пигменты. Зрительные пигменты очень 
похожи на любые другие пигменты, в том, что они поглощают свет и степень 
поглощения зависит от длины волны. Важное свойство зрительных пигментов состоит 
в том, что когда зрительный пигмент поглощает фотон света, то изменяется форма 
молекулы и в то же самое время происходит переизлучение света. Пигмент при этом 
изменился, измененная молекула поглощает свет менее хорошо чем прежде, т.е. как 
часто говорят, "отбеливается". Изменение формы молекулы и переизлучение энергии 
некоторым, пока еще не вполне ясным образом, инициируют светочувствительную 
клетку к выдаче сигнала. 
<P>Информация от светочувствительных рецепторов (колбочек и палочек) передается 
другим типам клеток, которые соединены между собой. Специальные клетки передают 
информацию в зрительный нерв. Таким образом волокно зрительного нерва 
обслуживает несколько светочувствительных рецепторов, т.е. некоторая 
предварительная обработка изображения выполняется непосредственно в глазу, 
который по сути представляет собой выдвинутую вперед часть мозга. 
<P>Область сетчатки, в которой волокна зрительного нерва собираются вместе и 
выходят из глаза, лишена светочувствительных рецепторов и называется слепым 
пятном. 
<P>Радужная оболочка (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#auge_1">0.2.1</A>) действует как 
диафрагма, изменяя количество света, проходящего в глаз. Диаметр зрачка меняется 
от <FONT face=symbol>~ </FONT>2 мм (при ярком свете) до <FONT face=symbol>~ 
</FONT>8 мм (при малой освещенности). 
<P>За сетчаткой находится сосудистая оболочка, которая содержит капилляры, 
снабжающие глаз кровью. 
<P>Наружняя оболочка глаза - склера, состоит их плотных волокон. 
<P>
<CENTER>
<H3><A name=tth_sEc0.2.2>0.2.2</A>&nbsp;&nbsp;Чувствительность 
глаза</H3></CENTER>
<P>При ярком свете чувствительность палочек мала, но при низких уровнях 
освещенности их чувствительность возрастает и обеспечивает нашу способность 
видеть при тусклом свете. Палочки содержат пигмент с максимальной 
чувствительностью на длине волны около 510 нм (точечная линия на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#spektr">0.2.2</A>), в зеленой 
части спектра. Пигмент палочек часто называется зрительным пурпуром из-за его 
цвета. Максимальная плотность палочек приходится на область с раствором около 
20<SUP><FONT face=symbol>°</FONT></SUP> относительно оси. 
<P>
<P><A name=tth_fIg0.2></A><A name=spektr>
<CENTER><BR><IMG alt="Рисунок 5" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0105.gif">
<P></CENTER>
<CENTER>Рис. 0.2.2: Спектральная чувствительность глаза</CENTER></A>
<P>
<P>Колбочек существует три типа отличающихся фоточувствительным пигментом. 
Колбочки обычно называют "синими", "зелеными" и "красными" в соответствии с 
наименованием цвета, для которого они оптимально чувствительны. Упомянутые три 
пигмента имеют максимальные поглощения приблизительно на 430, 530 и 560 нм. Этим 
длинам волн соответствует не синий, зеленый и красный цвета, а фиолетовый, 
сине-зеленый и желто-зеленый. Более логичным было бы использование терминологиии 
корото-, средне -, длинноволновые колбочки. 
<P>Максимальная плотность колбочек достигается в области с раствором порядка 
8<SUP><FONT face=symbol>°</FONT></SUP>&times;6<SUP><FONT face=symbol>°</FONT></SUP> 
относительно оси, называемой желтым пятном. В центре этой области (ямке) к 
каждой колбочке подходит отдельное волокно зрительного нерва. Это область 
максимальной остроты зрения. 
<P>Суммарная кривая спектральной чувствительности глаза для случая яркого 
освещения, т.е. цветного зрения, показана на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#spektr">0.2.2</A> сплошной 
линией. 
<P>Из этих графиков видно почему "ночью все кошки серы". В самом деле, например, 
отклик на красный цвет (<FONT face=symbol>l</FONT> = 700 мкм) при низких уровнях 
освещения (точечная кривая на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#spektr">0.2.2</A>) практически 
равен нулю. Поэтому красный цвет ночью будет выглядеть черным. 
<P>В силу того, что коэффициент преломления в радужке и хрусталике растет с 
увеличением частоты света, глаз не избавлен от хроматической аберрации. Т.е. 
если изображение сфокусировано для одной из частот, то на других частотах 
изображение расфокуировано. Хрусталик оптимально фокусирует на сетчатке свет с 
длиной волны около 560 нм. Так как пики чувствительности средне- длинноволновых 
колбочек (530 и 560 нм, соответственно) близки к друг к другу, поэтому 
изображения для этих колбочек могут быть одновременно сфокусированными. 
Изображение же для коротковолновых палочек будет размытым. Так степень 
фокусировки разная, то не требуется одинаковой разрешаютей способности глаза для 
разных типов колбочек. В глазу человека на одну коротковолновую колбочку 
приходится 20 средне- и 40 длинноволновых. В этой связи понятно, почему ширина 
полосы пропускания для "холодных", коротковолновых цветов в телевидении может 
быть выбрана существенно меньшей без субъективно заметной потери верности 
воспроизведения. 
<P>
<CENTER>
<H3><A name=tth_sEc0.3>0.3</A>&nbsp;&nbsp;Физические принципы формирования 
оттенков</H3></CENTER>
<P>В компьютерной графике имеется два типа цветных объектов - самосветящиеся, 
излучающие объекты, такие как экраны ЭЛТ, плазменные панели, матрицы светодиодов 
и т.п. и несамосветящиеся объекты, отражающие или преломляющие падающий на них 
свет, такие как, например, оттиски на бумаге, светофильтры и т.п. 
<P>Для самосветящихся объектов используется аддитивное формирование оттенков, 
когда требуемый цвет формируется за счет смешения трех основных оттенков цветов. 
В этом случае удобно использование модели смешения RGB (Red, Green, Blue - 
красный, зеленый, синий). 
<P>Для несамосветящихся объектов используется субтрактивное формирование 
оттенков, основанное на вычитании из падающего света определенных длин волн. В 
этом случае удобно использование модели смешения CMY (Cyan, Magenta, Yellow - 
голубой, пурпурный, желтый). 
<P>Эти модели смешения показаны на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p3.1">0.3.1</A>. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p3.1">0.3.1</A>а показаны 
результаты смешения цветов в аддитивной модели для трех самосветящихся площадок 
чистых цветов (красного, зеленого и синего) и результаты их смешения - площадки 
1-4. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p3.1">0.3.1</A>б показаны 
результаты смешения цветов в субтрактивной модели для трех несамосветящихся 
площадок чистых цветов (голубого, пурпурного и желтого) и результаты их смешения 
- площадки 5-8. 
<P>
<P><A name=tth_fIg0.1></A><A name=p3.1>
<CENTER><BR><IMG alt="Рисунок 6" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0106.gif">
<P></CENTER>
<CENTER>Рис. 0.3.1: Модели смешения цветов</CENTER></A>
<P>
<P>Цвета одной модели являются дополнительными к цветам другой модели. 
Дополнительный цвет - цвет, дополняющий данный до белого. Дополнительный для 
красного - голубой (зеленый+синий), дополнительный для зеленого - пурпурный 
(красный+синий), дополнительный для синего - желтый (красный+зеленый) и т.д. 
<P>Пример субтрактивного формирования оттенков показан на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p3.2">0.3.2</A>. При освещении 
падающим белым светом в слое голубой краски из спектра белого цвета поглощается 
красная часть, затем из оставшегося света в слое пурпурной краски поглощается 
зеленая часть спектра, отраженный от поверхности бумаги свет еще раз 
подвергается поглощению и в результате мы видим синий цвет. 
<P>
<P><A name=tth_fIg0.2></A><A name=p3.2>
<CENTER><BR><IMG alt="Рисунок 7" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0107.gif">
<P></CENTER>
<CENTER>Рис. 0.3.2: Цвет несамосветящегося объекта</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.4>0.4</A>&nbsp;&nbsp;Цветовые модели</H3><A 
name=color-mod></A></CENTER>
<P>Назначение цветовой модели - дать средства описания цвета в пределах 
некоторого цветового охвата, в том числе и для выполнения интерполяции цветов. 
Наиболее часто в компьютерной графике используются модели RGB, CMY, YIQ, HSV и 
HLS. 
<P>RGB (Red, Green, Blue - красный, зеленый, синий) - аппаратно-ориентированная 
модель, используемая в дисплеях для аддитивного формирования оттенков 
самосветящихся объектов (пикселов экрана). Система координат RGB - куб с началом 
отсчета (0,0,0), соответствующим черному цвету (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p04_01">0.4.1</A>). Максимальное 
значение RGB - (1,1,1) соответствует белому цвету. 
<P>
<P><A name=tth_fIg0.1></A><A name=p04_01>
<CENTER><BR><IMG alt="Рисунок 8" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0108.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.4.1: Цветовой куб модели RGB</CENTER></A>
<P>
<P>CMY (Cyan, Magenta, Yellow - голубой, пурпурный, желтый) - 
аппаратно-ориентированная модель, используемая в полиграфии для субтрактивного 
формирования оттенков, основанного на вычитании слоем краски части падающего 
светового потока. Цвета модели CMY являются дополнительными к цветам модели RGB, 
т.е. дополняющими их до белого. Таким образом система координат CMY - тот же 
куб, что и для RGB, но с началом отсчета в точке с RGB координатами (1,1,1), 
соответствующей белому цвету. Цветовой куб модели CMY показан на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p04_02">0.4.2</A>. 
<P><A name=p04_02>
<CENTER><BR><IMG alt="Рисунок 9" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0109.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.4.2: Цветовой куб модели CMY</CENTER></A>
<P>
<P>Преобразования между пространствами RGB и CMY определяются следующим образом: 

<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>[&nbsp;R&nbsp;G&nbsp;B&nbsp;]&nbsp;&nbsp; = 
            &nbsp;&nbsp;[&nbsp;1&nbsp;1&nbsp;1&nbsp;]&nbsp;&nbsp;-&nbsp;&nbsp;[&nbsp;C&nbsp;M&nbsp;Y&nbsp;]</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Причем единичный вектор-строка в модели RGB - представление белого цвета, а в 
модели CMY - черного. 
<P>YIQ - аппаратно-ориентированная модель, используемая в телевидении и служащая 
для сокращения передаваемой полосы частот за счет использования 
психофизиологических особенностей зрения. Преобразования между пространствами 
RGB и YIQ определяются соотношениями (<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#f1_1">0.4.1</A>) и (<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#f1_2">0.4.2</A>). 
<P><A name=f1_1></A>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>Y</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>I</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                noWrap>Q</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle>= </TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.299 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.587 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.114</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.596 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-0.274 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-0.322</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.211 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-0.522 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                  noWrap>0.311</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>R</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>G</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                noWrap>B</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD></TR></TBODY></TABLE></TD>
    <TD align=right width=100>(0.4.1)</TD></TR></TBODY></TABLE></CENTER>
<P><A name=f1_2></A>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>R</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>G</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                noWrap>B</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle>= </TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>&nbsp;&nbsp;1.0 
                  </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.956 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>0.623</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>&nbsp;&nbsp;1.0 
                  </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-0.272 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-0.648</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>&nbsp;&nbsp;1.0 
                  </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>-1.105 </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                  noWrap>0.705</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>Y</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>I</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                noWrap>Q</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>щ<BR>ъ<BR>ъ<BR>ъ<BR>ъ<BR>ы 
          </FONT></TD>
          <TD align=middle></TD></TR></TBODY></TABLE></TD>
    <TD align=right width=100>(0.4.2)</TD></TR></TBODY></TABLE></CENTER>
<P>HSV (Hue, Saturation, Value - цветовой тон, насыщенность, количество света 
или светлота) - модель, ориентированная на человека и обеспечивающая возможность 
явного задания требуемого оттенка цвета (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p04_03">0.4.3</A>). 
Подпространство, определяемое данной моделью - перевернутый шестигранный конус. 
<P>По вертикальной оси конуса задается V - светлота, меняющаяся от 0 до 1. 
Значению V = 0 соответствует вершина конуса, значению V = 1 - основание конуса; 
цвета при этом наиболее интенсивны. 
<P>Цветовой тон H задается углом, отсчитываемым вокруг вертикальной оси. В 
частности, 0<SUP><FONT face=symbol>°</FONT></SUP> - красный, 60<SUP><FONT 
face=symbol>°</FONT></SUP> - желтый, 120<SUP><FONT face=symbol>°</FONT></SUP> - 
зеленый, 180<SUP><FONT face=symbol>°</FONT></SUP> - голубой, 240<SUP><FONT 
face=symbol>°</FONT></SUP> - синий, 300<SUP><FONT face=symbol>°</FONT></SUP> - 
пурпурный, т.е. дополнительные цвета расположены друг против друга (отличаются 
на 180<SUP><FONT face=symbol>°</FONT></SUP>). 
<P>Насыщенность S определяет насколько близок цвет к "чистому" пигменту и 
меняется от 0 на вертикальной оси V до 1 на боковых гранях шестигранного конуса. 

<P>Точка V = 0, в которой находится вершина конуса, соответствует черному цвету. 
Значение S при этом может быть любым в диапазоне 0-1. Точка с координатами V = 
1, S = 0 - центр основания конуса соответствует белому цвету. Промежуточные 
значения координаты V при S=0, т.е. на оси конуса, соответствуют серым цветам. 
Если S = 0, то значение оттенка H считается неопределенным. 
<P>Подпрограммы перехода от RGB к HSV и обратно приведены в Приложении 1. 
<P>
<P><A name=tth_fIg0.3></A><A name=p04_03>
<CENTER><BR><IMG alt="Рисунок 10" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0110.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.4.3: Цветовая модель HSV</CENTER></A>
<P>
<P>HLS (Hue, Lightness, Saturation - цветовой тон, светлота, насыщенность) - 
модель ориентированная на человека и обеспечивающая возможность явного задания 
требуемого оттенка цвета (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p04_04">0.4.4</A>). Эта модель 
образует подпространство, представляющее собой двойной конус, в котором черный 
цвет задается вершиной нижнего конуса и соответствует значению L = 0, белый цвет 
максимальной интенсивности задается вершиной верхнего конуса и соответствует 
значению L = 1. Максимально интенсивные цветовые тона соответствуют основанию 
конусов с L = 0.5, что не совсем удобно. 
<P>Цветовой тон H, аналогично системе HSV, задается углом поворота. 
<P>Насыщенность S меняется в пределах от 0 до 1 и задается расстоянием от 
вертикальной оси L до боковой поверхности конуса. Т.е. максимально насыщенные 
цветовые цвета располагаются при L=0.5, S=1. 
<P>В общем, систему HLS можно представить как полученную из HSV "вытягиванием" 
точки V=1, S=0, задающей белый цвет, вверх для образования верхнего конуса. 
<P>Подпрограммы перехода от RGB к HLS и обратно приведены в Приложении 1. 
<P>
<P><A name=tth_fIg0.4></A><A name=p04_04>
<CENTER><BR><IMG alt="Рисунок 11" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0111.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.4.4: Цветовая модель HLS</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.4.1>0.4.1</A>&nbsp;&nbsp;Задание цветов</H3></CENTER>
<P>Растровые дисплеи, как правило, используют аппаратно-ориентированную модель 
цветов RGB. 
<P>В наиболее распространенных растровых дисплеях - дисплеях с таблицей 
цветности значения кодов пикселов, заносимые в видеопамять, представляют собой 
индексы элементов таблицы цветности. При необходимости отображения некоторого 
пиксела на экран по его значению выбирается элемент таблицы цветности, 
содержащий тройку значений - RGB. Эта тройка и передается на монитор для задания 
цвета пиксела на экране. 
<P>В полноцветных дисплеях для каждого пиксела в видеопамять заносится тройка 
значений RGB. В этом случае при необходимости отображения пиксела из видеопамяти 
непосредственно выбирается тройка значений RGB, которая и передается на монитор 
(но может и передаваться в таблицу цветности). 
<P>В модели RGB легко задавать яркости для одного из основных цветов, но по 
крайней мере затруднительно задать оттенок с требуемым цветовым тоном и 
насыщенностью. В различного рода графических редакторах эта задача обычно 
решается с помощью интерактивного выбора из палитры цветов и формированием 
цветов в палитре путем подбора значений RGB до получения требуемого визуального 
результата. Более удобно в этом случае использовать модели HVS или HLS, 
позволяющие непосредственно задать требуемый оттенок. Конечно, при занесении 
данных в таблицу цветности или для полноцветных дисплеев - в видеопамять 
требуется перевод в значений в систему RGB. 
<P>
<CENTER>
<H3><A name=tth_sEc0.4.2>0.4.2</A>&nbsp;&nbsp;Интерполяция цветов</H3></CENTER>
<P>Интерполяция цветов требуется во многих случаях для создания эффектов 
реалистичности изображения, например, при наложении цветов в технике акварели, 
т.е. при наложении одного прозрачного цвета на другой, при создании эффектов 
постепенного изменения цвета в последовательности картин, при построчном 
заполнении многоугольника методом Гуро и т.д. 
<P>Если требуется интерполировать между двумя цветами обладающими одним и тем же 
цветовым тоном (насыщенностью), так чтобы получаемые цвета имели тот же самый 
цветовой тон (насыщенность), то необходимо использовать модель или HVS или HLS. 
<P>В остальных случаях более удобно пользоваться аппаратно-ориентированной 
моделью RGB. 
<P>
<CENTER>
<H3><A name=tth_sEc0.5>0.5</A>&nbsp;&nbsp;Печатающие устройства</H3></CENTER>
<P>Обычное печатающее устройство помещает отдельные символы друг возле друга на 
бумагу, как, например, пишущая машинка. Зачастую поэтому говорят также 
последовательной (посимвольной) печати. В отличие от этого печатающее устройство 
типографского типа во время процесса печати выдает на бумагу по определенному 
правилу всю строку (или даже лист) целиком и поэтому может называться 
параллельным печатающим устройством. Такое устройство требует средств 
промежуточного хранения для накопления полной строки (листа). В частности, при 
печати офсетным методом таким средством промежуточного хранения является так 
называемая фотоформа - алюминиевый лист с вытравленным образом печатаемого 
листа. 
<P>С точки зрения процесса переноса цветов на бумагу устройства печати можно 
разделить на механические и немеханические. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.1">0.5.1</A>-<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.2">0.5.2</A> приведена 
классификация механических и немеханических методов документирования. На 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.3">0.5.3</A> 
приведена классификация, детализирующая различные методы отображения текстов. 
<P>
<P><A name=tth_fIg0.1></A><A name=p5.1>
<CENTER><BR><IMG alt="Рисунок 12" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0112.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.1: Классификация механических методов печати</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.2></A><A name=p5.2>
<CENTER><BR><IMG alt="Рисунок 13" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0113.gif">
<P></CENTER>
<CENTER>Рис. 0.5.2: Классификация немеханических методов печати</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.3></A><A name=p5.3>
<CENTER><BR><IMG alt="Рисунок 14" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0114.gif">
<P></CENTER>
<CENTER>Рис. 0.5.3: Классификация методов печати текстов</CENTER></A>
<P>
<P>Посимвольно-ориентированные методы гарантируют высокое качество текста, но 
для графического представления они вряд ли применимы. Растрово-ориентированные 
методы подходят также и для графического вывода. 
<P>
<CENTER>
<H3><A name=tth_sEc0.5.1>0.5.1</A>&nbsp;&nbsp;Разрешение устройств</H3></CENTER>
<P>Важнейшей характеристикой растровых устройств, формирующих изображение из 
отдельных точек, является пространственное разрешение. Оно в первую очередь 
определяется размером элементарного пятна, а также возможностями размещения 
пятен. Так как обычно растровое пятно представляет собой некоторую область с 
убыванием интенсивности от центра к краям, то для различимости отдельных пятен 
необходимо не слишком большое их перекрытие. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#resolut">0.5.4</A> показаны 
случаи различимости и неразличимости отдельных пятен. Если пересечение пятен 
ниже уровня <FONT face=symbol>»</FONT> 0.6 от максимальной интенсивности, то 
пятна различимы (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#resolut">0.5.4</A>а). Если же 
пересечение пятен выше уровня 0.6, то пятна неразличимы (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#resolut">0.5.4</A>б). Это 
обстоятельство используется для повышения качества печати (степени гладкости) на 
растровых принтерах за счет частичного наложения пятен. 
<P>
<P><A name=tth_fIg0.4></A><A name=resolut>
<CENTER><BR><IMG alt="Рисунок 15" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0115.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.4: Физическое разрешение растровой печати</CENTER></A>
<P>
<P>Другими факторами, определяющими разрешающую способность, являются:<BR><FONT 
face=symbol>·</FONT>&nbsp;форма пятна (круглое, эллипсоидальное или 
иное);<BR><FONT face=symbol>·</FONT>&nbsp;распределение яркости по пятну (по 
гауссу или иное). 
<P>Кроме пространственного разрешения существенной характеристикой устройств 
документирования является адресное разрешение, т.е. точность с которой может 
задаваться позиция. Как правило, адресное разрешение превышает пространственное 
или во всяком случае не меньше последнего. 
<P>Адресное разрешение определяет размер памяти, требуемый для хранения 
отображаемого растрового образа, а также возможности по устранению ступенчатости 
изображения. 
<P>
<CENTER>
<H3><A name=tth_sEc0.5.2>0.5.2</A>&nbsp;&nbsp;Матричный принтер</H3></CENTER>
<P>Широко распространенным устройством является матричный принтер. Он позволяет 
довольно качественно выводить текст и формировать графические изображения в 
основном для вспомогательных целей. 
<P>Основной элемент матричного принтера - печатающая головка, содержащая от 7 до 
48 вертикально расположенных штырьков (игл), с шишечкой, выталкиваемых 
электромагнитами до соударения с красящей лентой. Принцип работы одной иголки 
матричного принтера показан на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p05.04">0.5.5</A>а). Наиболее 
распространены 9 и 24-х игольчатые принтеры. Важной характеристикой принтера 
является разрешение, определяемое диаметром иглы. Обычные значения - десятые 
доли миллиметра (до 3-5 точек/мм, т.е. 85-127 точек/дюйм). Адресное разрешение 
по оси Y определяется расстоянием между иглами (<FONT face=symbol>D</FONT>h на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p05.04">0.5.5</A>б)) 
и составляет до 170 точек/дюйм. Наиболее современные 48-игольчатые матричные 
принтеры имеют разрешение приближающееся в 300 точкам/дюйм. 
<P>
<P><A name=tth_fIg0.5></A><A name=p05.04>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=middle><BR><IMG alt="Рисунок 16" 
      src="Учебное пособие Вводный курс компьютерной графики_files/kg0116.gif">
      <P>
      <P></P></TD>
    <TD align=middle><BR><IMG alt="Рисунок 17" 
      src="Учебное пособие Вводный курс компьютерной графики_files/kg0117.gif">
      <P>
      <P></P></TD></TR></TBODY></TABLE>
<CENTER>Рис. 0.5.5: Схема устройства печатающей головки матричного 
принтера</CENTER></A>
<P>
<P>В одноцветных принтерах красящая лента свернута в кольцо Мебиуса, так что 
обеспечивается использование ленты с двух сторон. Цветные принтеры, в 
зависимости от используемой бумаги, работают в один или несколько проходов. Если 
возможно использование обычной бумаги, то все цвета печатаются в каждой строке, 
прежде чем произойдет перемещение к следующей. Цвет переключается механически 
вертикальным смещением красящей ленты. В более скоростных (и дорогостоящих) 
цветных принтерах, использующих специальную толстую перфорированную бумагу, 
лента состоит из трех частей: красной, желто-зеленой и синей. Печать происходит 
постранично в три прохода. 
<P>Забота о неналожении точек различных цветов друг на друга возлагается на 
пользователя. При повторной печати точки другим цветом краситель с бумаги 
частично переносится на ленту, поэтому ленты быстро мажутся, особенно, светлых 
оттенков. 
<P>Обычно принтеры имеют несколько комплектов внутренних шрифтов и память для 
загрузки шрифтов, созданных пользователем. В хороших принтерах оба хода головки 
рабочие и слева-направо и справа-налево. 
<P>Как правило, принтеры имеют встроенную память для накопления распечатываемого 
текста (до нескольких десятков страниц). 
<P>Обычно имеется два режима работы - символьный и графический. В символьном 
режиме принтер, используя внутреннее растровое описание шрифтов, сам управляет 
печатью строк. В графическом режиме пользователь должен сам подготовить 
поточечное описание строк. 
<P>Скорости печати в символьном режиме порядка первых сотен символов в секунду 
(120, 120-200, более 200). Скорости печати строк в минуту также первые сотни (до 
200, 200-400, более 400). 
<P>Лидеры на рынке матричных принтеров - фирмы Epson и NEC (Nippon Electric 
Company). 
<P>В наименовании высококачественных принтеров обычно имеются буквы, 
определяющие наивысшее качество печати: 
<DL compact>
  <P>
  <DT><B></B>
  <DD>NLQ - Near Letter Quality - качество, близкое к качеству пишущей машинки; 
  <DT><B></B>
  <DD>LQ - Letter Quality - качество пишущей машинки. В 9-ти игольчатых 
  принтерах обычно реализуется NLQ, а в 24-х игольчатых - LQ. </DD></DL>
<P>
<CENTER>
<H4>Протокол матричного принтера</H4></CENTER>
<P>Стандартами де-факто для знакосинтезирующих принтеров стали три системы 
команд: 
<P><FONT face=symbol>·</FONT> система команд фирмы Epson; 
<P><FONT face=symbol>·</FONT> система команд фирмы IBM для семейства принтеров 
Proprinter; 
<P><FONT face=symbol>·</FONT> система команд фирмы IBM для графического принтера 
(IBM Graphics printer). 
<P>
<CENTER>
<H3><A name=tth_sEc0.5.3>0.5.3</A>&nbsp;&nbsp;Струйная печать</H3></CENTER>
<P>Цветная струйная печать хорошо подходит для использования в деловой графике. 
Набор сопел для чернил размещается в головке печати, с, по крайней, мере одним 
соплом на один субтрактивный цвет. Нынешние модели базируются на технологиях: 
"капля по запросу", "пузырьковой технологии струйной печати" и "Micro Piezo, 
Micro Dot, Micro Wave". 
<P>Принцип действия струйной печати пояснен на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.5">0.5.6</A>. Цилиндрический 
пьезоэлектрический кристалл плотно надет на резиновую трубку, заканчивающуюся 
соплом. При подаче напряжения на кристалл трубка обжимается и выбрасывает каплю 
чернил в сопло. Дроссель служит для того, чтобы при обжатии трубки чернила 
выбрасывались только в сопло, а не в резервуар с чернилами. Частота работы сопел 
составляет до 900 герц. 
<P>
<P><A name=tth_fIg0.6></A><A name=p5.5>
<CENTER><BR><IMG alt="Рисунок 18" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0118.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.6: Схема устройства отдельного сопла в струйном 
принтере</CENTER></A>
<P>
<P>Количество сопел одного цвета, требуемое разрешением и скоростью печати, 
вертикально размещается в печатающей головке. Для цветной печати обычно 
используется три цвета - желтый, голубой, малиновый. Часто добавляется 
дополнительный черный цвет. 
<P>Обычная разрешающая способность по горизонтали до 150 точек на дюйм (6 
точек/мм) по горизонтали и до 100 точек на дюйм по вертикали (4 точки/мм). 
Достижения современной технологии изготовления головок позволяют разместить до 
50 сопел на 1/6 дюйма, чем обеспечивается вертикальное разрешение до 300 точек 
на дюйм (12 точек/мм). 
<P>Суммарная скорость печати в целом невысока - от 20 до 50 символов в секунду и 
порядка 90 секунд на лист формата А4 в графическом режиме. 
<P>Достоинством устройств струйной печати является малое энергопотребление и 
практически бесшумная работа. 
<P>В струйных черно/белых принтерах фирмы HP используется и другой способ 
формирования капелек, показанный на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.6">0.5.7</A>. На изолирующую 
подложку нанесены токоподводящие проводники. На небольшом расстоянии от подложки 
находится пленка с отверстиями сопел. Напротив каждого сопла в разрыве 
токоподводящего проводника размещена высокоомная площадка. Между подложкой и 
пленкой с соплами образован капилляр для подвода специальных чернил. При 
пропускании импульса тока около 1&nbsp;А высокоомная площадка быстро 
разогревается, под действием теплового удара формируется волна, выбрасывающая 
капельку чернил из сопла. 
<P>
<P><A name=tth_fIg0.7></A><A name=p5.6>
<CENTER><BR><IMG alt="Рисунок 19" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0119.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.7: Схема образования капель в струйном принтере фирмы 
HP</CENTER></A>
<P>
<P>Фирма Seiko Epson Corporation разработала новую технологию струйной печати 
(Micro Piezo, Micro Dot и Micro Wave), отличтительным свойством которой является 
управление мениском чернил в сопле. Технология позволяет управлять размером и 
формой чернильных пятен, повысить скорость выстреливания капель, увеличить 
количество оттенков до шести, включая полутона, и устранить зернистость. 
Технология позволяет получить разрешение до 1440 точек на дюйм ( <FONT 
face=symbol>»</FONT> 57 точек на мм). Принцип работы струйных принтеров, 
использующих новую технологию, представлен на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#styl_jet">0.5.8</A>. На 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#styl_img">0.5.9</A> 
показаны результаты печати по технологиям Micro Dot и традиционной. 
<P>
<P><A name=tth_fIg0.8></A><A name=styl_jet>
<CENTER><BR><IMG alt="Рисунок 20" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0120.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.8: Управление формой и полетом капель в новых принтерах 
Stylus</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.9></A><A name=styl_img>
<CENTER><BR><IMG alt="Рисунок 21" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0121.gif">
<P></CENTER>
<CENTER>Рис. 0.5.9: Струйная печать по технологиям Micro Dot и 
традиционной</CENTER></A>
<P>
<P>
<CENTER>
<H4>Протокол устройств струйной печати</H4></CENTER>
<P>Стандартом де-факто для струйных принтеров является протокол принтеров фирмы 
Epson, ряд принтеров эмулирует язык HPGL, разработанный фирмой Хьюлетт-Паккрад 
для графопостроителей. 
<P>
<CENTER>
<H3><A name=tth_sEc0.5.4>0.5.4</A>&nbsp;&nbsp;Лазерный принтер</H3></CENTER>
<P>Лазерные принтеры используют ксерографический (электрофотографический) метод 
печати, который также применяется в большинстве аппаратов копирования. В целом 
лазерный принтер - монохромное устройство. В настоящее время имеются и цветные 
лазерные принтеры, по сути представляющие собой конструктивное объединение 
нескольких лазерных принтеров. 
<P>
<CENTER>
<H4>Черно-белый лазерный принтер</H4></CENTER>
<P>Схема устройства монохромного лазерного принтера показана на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p5.7">0.5.10</A>. Слой 
фоточувствительного селена, нанесенный на алюминиевый барабан, в темном боксе 
аппарата получает равномерный положительный поверхностный заряд с помощью 
коронного разряда. Этот фоточувствительный слой является изолятором в темноте и 
полупроводником при освещении. Заряженный слой облучается источником света с 
целью создания на нем скрытого изображения в виде распределения заряда. Скрытое 
изображение делается видимым с помощью мелкодисперсного порошка положительного 
тонера. Синхронно с вращением барабана перемещается обычная бумага. Частички 
тонера под действием электростатического поля переносятся на бумагу. Полученное 
изображение фиксируется термическим способом. Перед следующим заряжанием 
фоточувствительный слой очищается от оставшихся частиц тонера и разряжается. 
<P>
<P><A name=tth_fIg0.10></A><A name=p5.7>
<CENTER><BR><IMG alt="Рисунок 22" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0122.gif">
<P></CENTER>
<CENTER>Рис. 0.5.10: Схема устройства черно-белого лазерного 
принтера</CENTER></A>
<P>
<P>Картинка формируется лазерным лучом на фоточувствительном слое в виде узора 
точек. Типовая разрешающая способность современных лазерных принтеров 600 
точек/дюйм (24 точки/мм, точнее 23.6 точек/мм). Это обеспечивает очень высокое 
качество для текста и любой графики. Трудности возникают лишь при выводе больших 
черных поверхностей. В современных принтерах плотность печати доведена до 1200 
точек/дюйм, что превышает качество типографской печати. Органичение в 
разрешающей способности в обычных лазерных принтерах с одним отклоняющимся лучом 
связано с различной формой пятна в центре барабана (круг) и на краях (эллипс) 
(рис&nbsp;.<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lj_res">0.5.11</A>). 
<P>
<P><A name=tth_fIg0.11></A><A name=lj_res>
<CENTER><BR><IMG alt="Рисунок 23" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0123.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.11: Изменение формы пятна в лазерном принтере</CENTER></A>
<P>
<P>Лазерный принтер - постраничное устройство. Максимальная скорость составляет 
порядка 150 страниц в минуту. 
<P>
<CENTER>
<H4>Цветной лазерный принтер</H4></CENTER>
<P>Схема устройства цветного лазерного принтера показана на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lj_color">0.5.12</A>. Как видно 
из рисунка цветной лазерный принтер подобен черно-белому. 
<P>Для печати за один проход по бумаге используются гибкая светочувствительная 
лента, покрытая слоем селена, и лента переноса, на которой формируются 
изображения для всех четырех цветов. 
<P>Изображение, сформированное на ленте переноса, переносится на бумагу и затем 
закрепляется нагреванием. 
<P>
<P><A name=tth_fIg0.12></A><A name=lj_color>
<CENTER><BR><IMG alt="Рисунок 24" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0124.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.12: Схема устройства цветного лазерного принтера</CENTER></A>
<P>
<P>
<CENTER>
<H4>Протоколы лазерных принтеров</H4></CENTER>
<P>Стандартом де-факто для лазерных принтеров является система команд PCL (язык 
команд принтера) лазерных принтеров HP LaserJet Plus фирмы Hewlett Paccard. 
<P>Широкое распространение получают различные языки описания страниц (PDL - Page 
Description Language). Каждый язык описания страниц - это "настоящий" язык 
программирования, с переменными, подпрограммами, операторами, управляющими 
структурами. Языки включают графические операции, обеспечивающие создание 
изображений, и каждый имеет возможности по работе со шрифтами. Наиболее 
развитыми PDL являются Interpress фирмы Xerox, DDL фирмы Imagen, PostScript 
фирмы Adobe. Хотя эти языки и очень похожи, стандартом де-факто стал язык 
PostScript. 
<P>Основные отличия, с точки зрения подготовки шрифтов, между PCL и PostScript 
состоят в том, что шрифты в PCL готовятся в виде битовой карты, поэтому для 
разных масштабов нужны различные версии одного и того же шрифта. В языке же 
PostScript описание шрифта - схема его символов, изменяемая программным путем, 
поэтому легко реализуются не только различные масштабы, но печать по различным 
направлениям, например, вдоль контура фигуры, изменение наклона букв и т.д. 
<P>Многие лазерные принтеры имеют как систему команд PCL, так и аппаратные 
интерпретаторы PostScript. В целом данные для печати в PCL во много раз короче, 
чем данные, представленные в PostScript, соответственно несравненно меньше и 
время передачи данных на принтер. Особенно эти проблемы заметны при программной 
обработке, например, на принтер, поддерживающий только PostScript, выдаются 
данные из системы TeX для авторской подготовки статей. Зачастую при этом менее 
10 Кбайт текста преобразуется более чем в 100 Кбайт данных на языке PostScript. 
<P>Основная область использования PostScript - настольные издательские системы. 
Такого сорта системы, без его использования требуют подготовки нескольких сотен 
шрифтов. 
<P>
<CENTER>
<H3><A name=tth_sEc0.5.5>0.5.5</A>&nbsp;&nbsp;Принтеры на твердых 
красителях</H3></CENTER>
<P>Цветной лазерный принтер по сути представляет собой конструктивно 
объединенные четыре монохромных принтера, работающие последовательно. Для 
большинства цветных лазерных принтеров скорость черно-белой (монохромной) печати 
в четыре раза превышает скорость цветной печати. 
<P>В отличие от цветных лазерных принтеров, принтеры на твердых красителях 
(solid ink printers) исходно разрабатывались как цветные устройства. Перед 
началом работы твердые красители расплавляются нагревательным элементом и готовы 
к работе в течение рабочего дня (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#SolidInk">0.5.13</A>). 
<P>
<P><A name=tth_fIg0.13></A><A name=SolidInk>
<CENTER><BR><IMG alt="Рисунок 25" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0125.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.13: Схема устройства принтера на твердых 
красителях</CENTER></A>
<P>
<P>Расплавленные красители поступают в печатающую головку, обеспечивающую 
плотность печати 1200 точек/дюйм (47 точек/мм) по горизонтали и 600 точек/дюйм 
(24 точки/мм) по вертикали. Скорость печати - 6 страниц/мин в обычном режиме, до 
10 страниц/мин в быстром режиме и 5 страниц/мин при печати прозрачных слайдов. 
Важно отметить, что время начала печати первой страницы составляет менее 0.1 с 
против <FONT face=symbol>»</FONT> 1 c для цветных лазерных принтеров. Это 
связано с тем, что в лазерном принтере должен нагреваться ролик для закрепления 
изображения. 
<P>Существенными преимуществами принтеров на твердых красителях являются 
простота смены красителей - стержни красителей добавляются по мере надобности, 
малое количество (две) типов расходуемых компонент, против 5-12 для цветных 
лазерных принтеров и возможность работы с высоким качеством цветопередачи на 
самых различных носителях, в том числе и на обычных слайдах для 
слайд-проекторов. 
<P>В лаборатории фирмы Тектроникс, разработавшей эти принтеры, достигнута 
скорость печати до 100 страниц/мин. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p840">0.5.14</A> показан внешний 
вид принтера Phaser 840, выпускаемого фирмой Тектроникс. 
<P>
<P><A name=tth_fIg0.14></A><A name=p840>
<CENTER><BR><IMG alt="Рисунок 26" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0126.gif">
<P></CENTER>
<CENTER>Рис. 0.5.14: Принтер Phaser 840 на твердых красителях</CENTER></A>
<P>
<P>
<CENTER>
<H4>Протоколы принтеров на твердых красителях</H4></CENTER>
<P>Рассмотренными принтерами поддерживаются языки описания страниц Adobe 
Postscript Level 2, HPGL, HCL-5. 
<P>
<CENTER>
<H3><A name=tth_sEc0.6>0.6</A>&nbsp;&nbsp;Графопостроители</H3></CENTER>
<P>Назначение графопостроителей - высококачественное документирование 
чертежно-графической информации. 
<P>В разделе рассмотрены назначение, классификация, принципы действия и 
устройство графопостроителей. 
<P>Графопостроители можно классифицировать следующим образом: 
<P><FONT face=symbol>·</FONT> по способу формирования чертежа - с произвольным 
сканированием и растровые; 
<P><FONT face=symbol>·</FONT> по способу перемещения носителя - планшетные, 
барабанные и смешанные (фрикционные, с абразивной головкой). 
<P><FONT face=symbol>·</FONT> по используемому инструменту (типу чертежной 
головки) - перьевые, фотопостроители, со скрайбирующей головкой, с фрезерной 
головкой.<BR>
<P>Результат работы графопостроителей состоит в установлении головки в требуемую 
позицию, маркировании позиций и/или их соединение линиями. 
<P>Требуемые координаты задаются в 2D координатной системе, большей частью это 
XY-система. 
<P>
<CENTER>
<H3><A name=tth_sEc0.6.1>0.6.1</A>&nbsp;&nbsp;Планшетные 
графопостроители</H3></CENTER>
<P>В планшетных графопостроителях (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p6.1">0.6.1</A>) носитель 
неподвижно закреплен на плоском столе. Закрепление либо электростатическое, либо 
вакуумное, либо механическое за счет притягивания, прижимающих бумагу пластинок, 
к (электро)магнитам, вмонтированным в поверхность стола. При документировании на 
бумаге специальной бумаги не требуется. Головка перемещается по двум 
перпендикулярным направлениям. Размер носителя ограничен размером планшета. 
<P>
<P><A name=tth_fIg0.1></A><A name=p6.1>
<CENTER><BR><IMG alt="Рисунок 27" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0127.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.6.1: Схема планшетного графопостроителя</CENTER></A>
<P>
<P>В некоторых устройствах небольших размеров головка закреплена неподвижно, а 
перемещается стол с закрепленным на нем носителем, как это сделано во фрезерных 
станках с числовым программным управлением. 
<P>
<CENTER>
<H3><A name=tth_sEc0.6.2>0.6.2</A>&nbsp;&nbsp;Графопостроители с перемещающимся 
носителем</H3></CENTER>
<P>Имеются три разновидности графопостроителей с перемещающимся носителем: 
<P><FONT face=symbol>·</FONT> барабанные графопостроители, в которых носитель 
фиксированного размера укреплен на вращающемся барабане;<BR>
<P><FONT face=symbol>·</FONT> фрикционные графопостроители, в которых носитель 
перемещается с помощью фрикционных роликов. Эти графопостроители (при равных 
размерах чертежа) много меньших габаритов, чем барабанные. Одна из новых 
разновидностей фрикционного графопостроителя, появившаяся благодаря 
технологическим достижениям в металлообработке, - графопостроитель с т.н. 
абразивной головкой, в которых валики привода бумаги - стальные со специальной 
насечкой, не забивающейся волокнами бумаги; 
<P><FONT face=symbol>·</FONT> рулонные графопостроители, которые подобны 
фрикционным, но используют специальный носитель с краевой перфорацией.<BR>
<P>Общая схема графопостроителя с перемещающимся носителем приведена на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p6.2">0.6.2</A>. 
<P>
<P><A name=tth_fIg0.2></A><A name=p6.2>
<CENTER><BR><IMG alt="Рисунок 28" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0128.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.6.2: Схема графопостроителя с перемещающимся 
носителем</CENTER></A>
<P>
<P>Вне зависимости от способа перемещения носителя, система привода 
графопостроителей с произвольным сканированием использует либо шаговые 
двигатели, поворачивающиеся на фиксированный угол при подаче одного импульса, 
либо исполнительную систему с обратной связью, содержащую двигатели привода и 
датчики положения. 
<P>Перемещения с шаговыми двигателями обычно выполняются на 1 шаг по одному из 8 
направлений (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p6.3">0.6.3</A>). 
<P>
<P><A name=tth_fIg0.3></A><A name=p6.3>
<CENTER><BR><IMG alt="Рисунок 29" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0129.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.6.3: Возможные направления перемещения при использовании шаговых 
двигателей</CENTER></A>
<P>
<P>Поэтому требуется аппроксимация вычерчиваемой кривой штрихами основных 
направлений. Повышение точности аппроксимации достигается как уменьшением шага, 
так и путем увеличения числа направлений перемещения за счет использования 
дополнительных пар моторов или за счет изменения передаточного числа. 
<P>
<CENTER>
<H3><A name=tth_sEc0.6.3>0.6.3</A>&nbsp;&nbsp;Электростатические 
графопостроители</H3></CENTER>
<P>Электростатические графопостроители работают на безударном электрографическом 
растровом принципе (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p6.4">0.6.4</A>). Специальная 
диэлектрическая бумага перемещается под электростатической головкой, содержащей 
иголки с плотностью 40-100 на 1&nbsp;см. К иголкам прикладывается отрицательное 
напряжение в результате чего диэлектрическая бумага заряжается и на ней 
создается скрытое изображение. Затем бумага проходит через бокс, в котором над 
ней распыляется положительно заряженный тонер. Заряженные области притягивают 
частицы тонера. В цветных системах этот процесс повторяется для каждого их 
основных субтрактивных цветов - голубого, пурпурного и желтого, а также черного. 

<P>
<P><A name=tth_fIg0.4></A><A name=p6.4>
<CENTER><BR><IMG alt="Рисунок 30" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0130.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.6.4: Схема электростатического графопостроителя</CENTER></A>
<P>
<P>Электростатические графопостроители быстрее перьевых графопостроителей, но 
медленнее лазерных печатающих устройств. Их скорость составляет от 500 до 1000 
линий, наносимых на бумагу в 1 мин. Они работают с разрешением 200-400 точек на 
дюйм. Электростатические графопостроители необходимы, если требуется 
высококачественный цветной вывод для CAD-системы. Такой графопостроитель в 10-20 
раз быстрее перьевого. Среди лидеров на рынке этих устройств фирмы Versatec, 
Calcomp и Benson. Эти графопостроители весьма дорогие их цена 30-150 тысяч 
долларов.<BR>
<P>
<CENTER>Основные параметры графопостроителей 
<P>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD></TD>
    <TD align=middle>Планшетные </TD>
    <TD align=middle>Барабанные </TD>
  <TR>
    <TD>Формат </TD>
    <TD align=middle>Ширина 210 - 840 мм</TD>
    <TD align=middle>Ширина 210 - 1140 мм </TD>
  <TR>
    <TD>черчения </TD>
    <TD align=middle>Длина 297 - 1188мм</TD>
    <TD align=middle>Длина 297мм - не ограничена </TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD>Скорость </TD>
    <TD align=middle>80 - 1140 мм/с </TD>
    <TD align=middle>30-300 мм/с </TD>
  <TR>
    <TD>черчения </TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD>Точность </TD>
    <TD align=middle>0.8 - 0.0025 мм </TD>
    <TD align=middle>0.7-0.0025 мм</TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD>Разрешение</TD>
    <TD align=middle>0.4 - 0.0025 мм </TD>
    <TD align=middle>0.1-0.0025 мм</TD></TD></TR></TBODY></TABLE></CENTER>
<P>Точность определяется минимально возможным значением приращения координаты. 
Обычные значения десятки микрометров. 
<P>Разрешение определяется фактическими возможностями исполнительной системы и 
чертежной головки. Для перьевых графопостроителей обычные значения - доли 
миллиметра. Для фотопостроителей - менее 10 микрометров. 
<P>Уникальные высокоточные графопостроители имеют зачастую и уникальные 
протоколы управления. 
<P>Графопостроители широкого распространения, как правило, поддерживают протокол 
графопостроителей фирмы Хьюлетт-Паккард HPGL (Hewlett Packard Graphics 
Language). Он содержит небольшое количество графических функций, легко читается 
и интерпретируется. 
<P>Некоторые графопостроители интерпретируют протокол REGIS, разработанный для 
терминалов VT 240 (и более мощных). 
<P>
<CENTER>
<H3><A name=tth_sEc0.7>0.7</A>&nbsp;&nbsp;Электронно-лучевые 
трубки</H3></CENTER>
<P>В разделе рассмотрены электронно-лучевые трубки, наиболее широко используемые 
для отображения в компьютерной графике - черно-белые и цветные 
электронно-лучевые трубки (кинескопы). 
<P>
<CENTER>
<H3><A name=tth_sEc0.7.1>0.7.1</A>&nbsp;&nbsp;Черно-белые 
кинескопы</H3></CENTER>
<P>Наиболее просто устроена черно-белая электронно-лучевая трубка (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.01">0.7.1</A>а). Нагретый 
катод испускает электроны, которые проходят через модулятор, управляющий 
яркостью и фокусируются фокусирующими электродами, так, чтобы пятно на экране 
было порядка 0.1 - 0.3&nbsp;мм. Далее электронный пучок отклоняется отклоняющей 
системой. Для черно-белых трубок дисплеев обычно используется электромагнитное 
отклонение с помощью катушек, надетых на горловину кинескопа, но используется и 
электростатическое отклонение с помощью отклоняющих пластин, как это показано на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.01">0.7.1</A>б. 
Отклоненный пучок попадает на внутреннюю поверхность колбы, покрытую сплошным 
слоем люминофора, и вызывает его свечение. Ускоряющее напряжение для таких 
кинескопов <FONT face=symbol>»</FONT> 10 Кв, ток пучка <FONT 
face=symbol>»</FONT> 10 мка. При диаметре пятна <FONT face=symbol>»</FONT> 
0.25&nbsp;мм выделяемая мощность <FONT face=symbol>»</FONT> 150 
Вт/см<SUP>2</SUP> (электроплитка <FONT face=symbol>»</FONT> 7 
Вт/см<SUP>2</SUP>). 
<P>Пространственное разрешение таких ЭЛТ определяется диаметром пятна и 
составляет 3-10 точек/мм (85-250 точек/дюйм). 
<P>Адресное разрешение определяется уже схемотехническими решениями 
разработчиков дисплея и составляет для пользователей обычно 1024 пиксела по 
горизонтали (10 разрядов). Для уменьшения эффектов ступенчатости внутри цифровых 
систем разверток векторных дисплеев используется 11 или 12 разрядов. 
<P>
<P><A name=tth_fIg0.1></A><A name=p07.01>
<CENTER><BR><IMG alt="Рисунок 31" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0131.gif">
<P>
<CENTER><BR><IMG alt="Рисунок 32" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0132.gif">
<P></CENTER>
<CENTER>б) Электростатическая отклоняющая система</CENTER><BR>
<P></CENTER>
<CENTER>Рис. 0.7.1: Устройство черно-белого кинескопа</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.7.2>0.7.2</A>&nbsp;&nbsp;Цветные кинескопы</H3></CENTER>
<P>Устройство цветных кинескопов подобно устройству черно-белых с тем отличием, 
что обязательно имеется три типа люминофора для красного, зеленого и синего 
цветов, а также средств для формирования и управления тремя отдельными 
электронными лучами (в некоторых, скорее экспериментальных цветных кинескопах 
используется единственный электронный луч). 
<P>Первый цветной масочный кинескоп с тремя отдельными электронными пушками, 
установленными друг относительно друга под 120<SUP><FONT 
face=symbol>°</FONT></SUP> был разработан в США в 1950&nbsp;г (кинескоп с 
дельта-образным расположением пушек). На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.02">0.7.2</A>-<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.05">0.7.5</A> иллюстрируется 
устройство такого кинескопа. 
<P>Основные параметры таких кинескопов следующие: U<SUB>анода</SUB> <FONT 
face=symbol>»</FONT> 20<FONT face=symbol>ё</FONT>25 Кв, I<SUB><FONT 
face=symbol>S</FONT></SUB> <FONT face=symbol>»</FONT> 1.5<FONT 
face=symbol>ё</FONT>2 ма диаметр пятна <FONT face=symbol>»</FONT> 0.25 мм P 
<FONT face=symbol>»</FONT> 2000 Вт/см<SUP>2</SUP>. 
<P>
<P><A name=tth_fIg0.2></A><A name=p07.02>
<CENTER><BR><IMG alt="Рисунок 33" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0133.gif">
<P></CENTER>
<CENTER>Рис. 0.7.2: Общая схема цветного кинескопа</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.3></A><A name=p07.03>
<CENTER><BR><IMG alt="Рисунок 34" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0134.gif">
<P></CENTER>
<CENTER>Рис. 0.7.3: Устройство цветного кинескопа</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.4></A><A name=p07.04>
<CENTER><BR><IMG alt="Рисунок 35" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0135.gif">
<P></CENTER>
<CENTER>Рис. 0.7.4: Электронно-оптическая система цветного 
кинескопа</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.5></A><A name=p07.05>
<CENTER><BR><IMG alt="Рисунок 36" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0136.gif">
<P></CENTER>
<CENTER>Рис. 0.7.5: Схема формирования отдельных цветов в масочном 
кинескопе</CENTER></A>
<P>
<P>
<CENTER>
<H4>Проблемы цветных масочных кинескопов</H4></CENTER>
<P>Основными проблемами цветных масочных кинескопов, определившими необходимость 
разработки альтернативных конструкций кинескопов, являются следующие: 
<P><FONT face=symbol>·</FONT> большие напряжения и токи, 
<P><FONT face=symbol>·</FONT> малая яркость (на экран из-за маски попадает <FONT 
face=symbol>~ </FONT>20% электронов), 
<P><FONT face=symbol>·</FONT> малый срок службы, 
<P><FONT face=symbol>·</FONT> недостаточно высокая чистота цвета - однородность 
свечения экрана по каждому цвету в отдельности,<BR>
<P><FONT face=symbol>·</FONT> статическое сведение лучей, 
<P><FONT face=symbol>·</FONT> динамическое сведение лучей, 
<P><FONT face=symbol>·</FONT> статический и динамический балансы белого. 
<P>
<CENTER>
<H4>Кинескопы с планарным расположением пушек</H4></CENTER>
<P>В настоящее время наиболее массовым типом цветного кинескопа является т.н. 
планарный кинескоп (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.06">0.7.6</A>), называемый 
также кинескопом со штриховым люминофором, или кинескопом с щелевой маской (PIL 
- Precision In Line). У таких кинескопов все электроды электронно-оптической 
системы кроме катодов - общие. Требуется прецизионное изготовление и сборка всех 
узлов трубки. 
<P>
<P><A name=tth_fIg0.6></A><A name=p07.06>
<CENTER><BR><IMG alt="Рисунок 37" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0137.gif">
<P></CENTER>
<CENTER>Рис. 0.7.6: Структура экрана и маски планарного кинескопа</CENTER></A>
<P>
<P><U>Достоинства планарных кинескопов:</U><BR><FONT 
face=symbol>·</FONT>&nbsp;б\'ольшая прозрачность маски,<BR><FONT 
face=symbol>·</FONT>&nbsp;б\'ольшее заполнение экрана люминофором,<BR><FONT 
face=symbol>·</FONT>&nbsp;б\'ольшая яркость и меньшее 
энергопотребление,<BR><FONT face=symbol>·</FONT>&nbsp;до углов отклонения в 
90<SUP><FONT face=symbol>°</FONT></SUP> не нужно динамическое сведение лучей. 
<P>
<CENTER>
<H4>Трехлучевой тринитрон</H4></CENTER>
<P>Подобен планарному кинескопу (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.07">0.7.7</A>), но имеется 
один, а не три катода. Отдельные лучи формируются диафрагмами. Используется 
цилиндрическая щелевая маска. Применяется в малогабаритных устройствах. 
Характерная особенность изображений на тринитронах - тонкий горизонтальный штрих 
на примерно 1/3 высоты экрана, вызванный конструктивными особенностями. 
<P>
<P><A name=tth_fIg0.7></A><A name=p07.07>
<CENTER><BR><IMG alt="Рисунок 38" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0138.gif">
<P></CENTER>
<CENTER>Рис. 0.7.7: Структура экрана и маски трехлучевого 
тринитрона</CENTER></A>
<P>
<P>
<CENTER>
<H4>Трехлучевой хроматрон - США, 1951 г.</H4></CENTER>
<P>Основные проблемы любого масочного кинескопа - потеря части электронов на 
маске в результате чего понижается яркость свечения. Этот недостаток практически 
полностью устранен в трех- и однолучевых хроматронах и индексных кинескопах. В 
трехлучевом хроматроне (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.08">0.7.8</A>) лучи 
отклоняются тонкой фокусирующей сеткой. 
<P>
<P><A name=tth_fIg0.8></A><A name=p07.08>
<CENTER><BR><IMG alt="Рисунок 39" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0139.gif">
<P></CENTER>
<CENTER>Рис. 0.7.8: Принцип работы трехлучевого хроматрона</CENTER></A>
<P>
<P>Одной триаде из RGB полосок люминофора соответствует одна проволока 
фокусирующей сетки. 
<P>Для поддержания высокой чистоты цвета требуется пять электромагнитных 
катушек:<BR><FONT face=symbol>·</FONT>&nbsp;один охватывает весь экран,<BR><FONT 
face=symbol>·</FONT>&nbsp;четыре - по углам экрана. 
<P>Яркость хроматрона выше чем у любого масочного кинескопа. 
<P>Недостатки: сложная система поддержания чистоты цвета, меньшее разрешение, 
требуется высокая стабилизация питания. 
<P>
<CENTER>
<H4>Однолучевой хроматрон</H4></CENTER>
<P>Несколько более простую конструкцию по сравнению с трехлучевым хроматроном 
имеет однолучевой хроматрон (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.09">0.7.9</A>). Но как видно 
из рисунка требуется втрое более скоростная система управления отклоняющими 
напряжениями на сетке. 
<P>
<P><A name=tth_fIg0.9></A><A name=p07.09>
<CENTER><BR><IMG alt="Рисунок 40" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0140.gif">
<P></CENTER>
<CENTER>Рис. 0.7.9: Принцип работы однолучевого хроматрона</CENTER></A>
<P>
<P>Все остальные конструктивные особенности, достоинства и недостатки у 
однолучевого хроматрона соответствуют таковым для трехлучевого. 
<P>
<CENTER>
<H4>Индексный кинескоп</H4></CENTER>
<P>Наиболее точное управление лучом обеспечивается в индексном кинескопе 
(рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.10">0.7.10</A>). 
<P>
<P><A name=tth_fIg0.10></A><A name=p07.10>
<CENTER><BR><IMG alt="Рисунок 41" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0141.gif">
<P></CENTER>
<CENTER>Рис. 0.7.10: Принцип работы индексного кинескопа</CENTER></A>
<P>
<P>На внутреннюю поверхность экрана колбы (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.10">0.7.10</A>) нанесены 
вертикальные полоски триад люминофора, разделенные индексными полосками, 
излучающими в ультрафиолетовом диапазоне внутрь колбы. Излучение принимается 
датчиком. Таким образом точно известно положение луча по горизонтали. 
<P>В зависимости от положения луча его ток модулируется напряжением для 
красного, зеленого или синего цветов (U<SUB>R</SUB>, U<SUB>G</SUB> или 
U<SUB>B</SUB>). 
<P>Недостатки индексного кинескопа следующие:<BR><FONT 
face=symbol>·</FONT>&nbsp;сложность поэлементной коммутации цветов,<BR><FONT 
face=symbol>·</FONT>&nbsp;высокая линейность строчной развертки,<BR><FONT 
face=symbol>·</FONT>&nbsp;более низкие яркость, контрастность, четкость. 
<P>
<CENTER>
<H3><A name=tth_sEc0.7.3>0.7.3</A>&nbsp;&nbsp;Разрешение мониторов</H3></CENTER>
<P>Число строк на мониторе с растровым сканированием зависит от расстояния 
наблюдения и остроты зрения человека. Для получения хорошего качества и меньшего 
утомления глаза человека число строк должно быть таким, чтобы при наблюдении с 
выбранного расстояния отдельные строки не были различимы. 
<P>Пусть с расстояния L две смежных строки видны под углом <FONT 
face=symbol>f</FONT> (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07_11">0.7.11</A>), в этом 
случае выполняется соотношение: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>tan(</TD>
          <TD align=middle noWrap><FONT face=symbol>f</FONT>
            <HR noShade>
             2<BR></TD>
          <TD align=middle noWrap>) = </TD>
          <TD align=middle noWrap>h/2
            <HR noShade>
             L<BR></TD>
          <TD align=middle noWrap>= </TD>
          <TD align=middle noWrap>(H/N)/2
            <HR noShade>
             L<BR></TD>
          <TD align=middle 
noWrap>,</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>где 
<TABLE>
  <TBODY>
  <TR>
    <TD>h </TD>
    <TD align=middle>-</TD>
    <TD>расстояние между строками,</TD>
  <TR>
    <TD>L </TD>
    <TD align=middle>-</TD>
    <TD>расстояние от глаза до экрана,</TD>
  <TR>
    <TD>H </TD>
    <TD align=middle>-</TD>
    <TD>высота экрана,</TD>
  <TR>
    <TD>N </TD>
    <TD align=middle>-</TD>
    <TD>число строк разложения.</TD></TD></TR></TBODY></TABLE>
<P>Так как угол <FONT face=symbol>f</FONT> очень мал, то tan([(<FONT 
face=symbol>f</FONT>)/ 2]) <FONT face=symbol>@</FONT> [(<FONT 
face=symbol>f</FONT>)/ 2], отсюда следует: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>N = </TD>
          <TD align=middle noWrap>1
            <HR noShade>
             <FONT face=symbol>f</FONT><BR></TD>
          <TD align=middle noWrap>·</TD>
          <TD align=middle noWrap>H
            <HR noShade>
             L<BR></TD>
          <TD align=middle 
noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Для неразличимости двух строк угловое расстояние между ними должно составлять 
величину порядка 1 (на самом деле это значение варьируется возле 4/10000 радиана 
<FONT face=symbol>@</FONT> 1.38). 
<P>Отсюда получаем: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>N = 2500 ·</TD>
          <TD align=middle noWrap>H
            <HR noShade>
             L<BR></TD>
          <TD align=middle 
noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Важным параметром в определении числа строк является отношение высоты экрана 
H к расстоянию до глаза L. Имеется оптимальное отношение. Если расстояние мало, 
глаз не видит весь объект. Напротив, при большом расстоянии становятся 
неразличимыми детали. При формате кадра 4:3<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tthFtNtAAB" 
name=tthFrefAAB><SUP>1</SUP></A> оптимальное расстояние наблюдения составляет 
4...6 высот экрана. Таким образом получаем, что оптимальное число строк 
составляет от 416 до 625. 
<P>
<P><A name=tth_fIg0.11></A><A name=p07_11>
<CENTER><BR><IMG alt="Рисунок 42" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0142.gif">
<P></CENTER>
<CENTER>Рис. 0.7.11: Определение количества строк разложения</CENTER></A>
<P>
<P>Кроме психофизиологических условий разрешение мониторов определяется 
технологией изготовления. Для цветного кинескопа разрешение определяется 
расстоянием h между пятнами люминофора одного и того же цвета (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#triads">0.7.12</A>). Для 
современных кинескопов это расстояние равно 0.26 мм. 
<P>
<P><A name=tth_fIg0.12></A><A name=triads>
<CENTER><BR><IMG alt="Рисунок 43" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0143.gif">
<P></CENTER>
<CENTER>Рис. 0.7.12: Разрешение цветного кинескопа</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.7.4>0.7.4</A>&nbsp;&nbsp;Люминофоры</H3></CENTER>
<P>
<P><A name=tth_fIg0.13></A><A name=p07.12>
<CENTER><BR><IMG alt="Рисунок 44" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0144.gif">
<P></CENTER>
<CENTER>Рис. 0.7.13: Зависимость световой эмиссии люминофора от 
времени</CENTER></A>
<P>
<P>Экран электронно-лучевых трубок покрывается изнутри люминофором, который 
излучает свет при падении на него электронного луча (флуоресценция). После 
выключения луча излучение продолжается еще некоторое время (фосфоресценция) 
(рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p07.12">0.7.13</A>). Время этого 
послесвечения является одним из важных параметров трубки, так как определяет как 
часто будет требоваться регенерация изображения, т.е. его повторный вывод для 
того чтобы пользователь видел немерцающую картину. Параметры некоторых 
люминофоров приведены в таблице <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lum_tbl">0.7.1</A>. 
<P>
<P><A name=tth_tAb0.7.1>
<CENTER>Таблица 0.7.1: Параметры некоторых люминофоров</CENTER></A><A 
name=lum_tbl>
<CENTER>
<P>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD>Тип </TD>
    <TD>Состав </TD>
    <TD align=middle>Длина </TD>
    <TD align=middle>Цвет</TD>
    <TD align=middle>После-</TD>
    <TD>Приме-</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle>волны </TD>
    <TD align=middle></TD>
    <TD align=middle>свеч. </TD>
    <TD>нение </TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle>(нм) </TD>
    <TD align=middle></TD>
    <TD align=middle>10% </TD>
    <TD></TD>
  <TR>
    <TD>P1 </TD>
    <TD>Zn<SUB>2</SUB>SiO<SUB>4</SUB>:Mn </TD>
    <TD align=middle>525 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>24 </TD>
    <TD>Радар,</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>осцилл.</TD>
  <TR>
    <TD>P2 </TD>
    <TD>ZnS:Cu </TD>
    <TD align=middle>543 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>35-100</TD>
    <TD>Осцилл.</TD>
  <TR>
    <TD>P4 </TD>
    <TD>ZnS-CdS:Ag </TD>
    <TD align=middle>460/560</TD>
    <TD align=middle>W </TD>
    <TD align=middle>25/60 </TD>
    <TD>TV </TD>
  <TR>
    <TD>P7 </TD>
    <TD>ZnS-CdS:Cu </TD>
    <TD align=middle>440/560</TD>
    <TD align=middle>B/YG</TD>
    <TD align=middle>.05/300 </TD>
    <TD>Радар,</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>осцилл.</TD>
  <TR>
    <TD>P11 </TD>
    <TD>ZnS:Ag </TD>
    <TD align=middle>460 </TD>
    <TD align=middle>B </TD>
    <TD align=middle>.025/.08</TD>
    <TD>Фотозап.</TD>
  <TR>
    <TD>P12 </TD>
    <TD></TD>
    <TD align=middle>Оранж. </TD>
    <TD align=middle>Or </TD>
    <TD align=middle>210 </TD>
    <TD></TD>
  <TR>
    <TD>P13 </TD>
    <TD></TD>
    <TD align=middle>Зелен. </TD>
    <TD align=middle>G </TD>
    <TD align=middle>0.038 </TD>
    <TD></TD>
  <TR>
    <TD>P16 </TD>
    <TD>Ca<SUB>2</SUB>Mg<SUB>2</SUB>Si<SUB>2</SUB>O<SUB>7</SUB>:Ge </TD>
    <TD align=middle>385 </TD>
    <TD align=middle>UV </TD>
    <TD align=middle>0.12 мкс</TD>
    <TD>Фотозап.,</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>скан.</TD>
  <TR>
    <TD>P18 </TD>
    <TD></TD>
    <TD align=middle>YG </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>600 </TD>
    <TD></TD>
  <TR>
    <TD>P20 </TD>
    <TD>ZnS-CdS:Ag </TD>
    <TD align=middle>560 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>0.05-2 </TD>
    <TD></TD>
  <TR>
    <TD>P22-B</TD>
    <TD>ZnS:Ag </TD>
    <TD align=middle>440 </TD>
    <TD align=middle>B </TD>
    <TD align=middle>22мкс </TD>
    <TD>TV </TD>
  <TR>
    <TD>P22-G</TD>
    <TD>ZnS-CdS:Ag </TD>
    <TD align=middle>535 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>60мкс </TD>
    <TD>TV </TD>
  <TR>
    <TD>P22-R</TD>
    <TD>Y<SUB>2</SUB>O<SUB>2</SUB>S:Eu </TD>
    <TD align=middle>635 </TD>
    <TD align=middle>R </TD>
    <TD align=middle>1 </TD>
    <TD>TV </TD>
  <TR>
    <TD>P22-G<SUB>LP</SUB></TD>
    <TD>Zn<SUB>2</SUB>SiO<SUB>4</SUB>:Mn:As</TD>
    <TD align=middle>525 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>150 </TD>
    <TD>Дисплеи </TD>
  <TR>
    <TD>P31 </TD>
    <TD>ZnS:Cu </TD>
    <TD align=middle>522 </TD>
    <TD align=middle>G </TD>
    <TD align=middle>40мкс </TD>
    <TD>Осцилл. </TD>
  <TR>
    <TD>P39 </TD>
    <TD>Zn<SUB>2</SUB>SiO<SUB>4</SUB>:Mn:As </TD>
    <TD align=middle>525 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>150 </TD>
    <TD>Больш. </TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>послесв.</TD>
  <TR>
    <TD>P42 </TD>
    <TD>Zn<SUB>2</SUB>SiO<SUB>4</SUB>:Mn:As </TD>
    <TD align=middle>520 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>10 </TD>
    <TD>Высок.</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>яркость</TD>
  <TR>
    <TD>P43 </TD>
    <TD>Cd<SUB>2</SUB>O<SUB>2</SUB>S:Tb </TD>
    <TD align=middle>544 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>1 </TD>
    <TD>Дисплеи</TD>
  <TR>
    <TD>P44 </TD>
    <TD>La<SUB>2</SUB>O<SUB>2</SUB>S:Tb </TD>
    <TD align=middle>540 </TD>
    <TD align=middle>YG </TD>
    <TD align=middle>1 </TD>
    <TD>Дисплеи</TD>
  <TR>
    <TD>P45 </TD>
    <TD>Y<SUB>2</SUB>O<SUB>2</SUB>S:Tb </TD>
    <TD align=middle>420/540</TD>
    <TD align=middle>W </TD>
    <TD align=middle>2 </TD>
    <TD>Дисплеи</TD>
  <TR>
    <TD>P49 </TD>
    <TD>Zn<SUB>2</SUB>SiO<SUB>4</SUB>:Mn </TD>
    <TD align=middle>525/615</TD>
    <TD align=middle>YG/R</TD>
    <TD align=middle>30/1.2 </TD>
    <TD>Дисплеи</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>на пене-</TD>
  <TR>
    <TD></TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD>тронах</TD></TD></TR></TBODY></TABLE></A></CENTER>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.7.5>0.7.5</A>&nbsp;&nbsp;Гамма-коррекция</H3><A 
name=pgam_cor></A></CENTER>
<P>Электронно-лучевые трубки мониторов обладают нелинейной зависимостью 
интенсивности свечения люминофора I от числа электронов в луче N. Упрощенно эта 
зависимость имеет вид: 
<P><A name=gamcor01></A>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>I = a&times;N<SUP><FONT 
          face=symbol>g</FONT></SUP>,</TD></TR></TBODY></TABLE></TD>
    <TD align=right width=100>(0.7.1)</TD></TR></TBODY></TABLE></CENTER>
<P>где a и <FONT face=symbol>g</FONT> - константы. Число электронов 
пропорционально напряжению U на управляющей сетке монитора, определяемому 
значением кода пиксела V, поэтому соотношение <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#gamcor01">0.7.1</A> может быть 
переписано в виде: 
<P><A name=gamcor02></A>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>I = k&times;U<SUP><FONT face=symbol>g</FONT></SUP> 
            &nbsp;&nbsp; = &nbsp;&nbsp;c&times;V<SUP><FONT 
          face=symbol>g</FONT></SUP>,</TD></TR></TBODY></TABLE></TD>
    <TD align=right width=100>(0.7.2)</TD></TR></TBODY></TABLE></CENTER>
<P>Более точно это соотношение имеет вид: <A name=gamcor03></A>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>I = k&times;U<SUP><FONT 
            face=symbol>g</FONT>(U)</SUP> 
        &nbsp;+&nbsp;I<SUB>0</SUB>,</TD></TR></TBODY></TABLE></TD>
    <TD align=right width=100>(0.7.3)</TD></TR></TBODY></TABLE></CENTER>
<P>где k - константа, <FONT face=symbol>g</FONT> зависит от U, I<SUB>0</SUB> - 
паразитная засветка. Для упрощения полагают I<SUB>0</SUB> = 0, а <FONT 
face=symbol>g</FONT> - константой. У различных типов мониторов <FONT 
face=symbol>g</FONT> меняется от 1.4 до 3.0. Для компьютерных мониторов значение 
<FONT face=symbol>g</FONT> обычно принимают равным 2.5. Таким образом, если мы 
имеем соотношение между яркостями двух вычисленных пикселов V<SUB>1</SUB> / 
V<SUB>2</SUB> = 0.5, то на мониторе соотношение их яркостей будет равно 0.177. 
<P>Чтобы избежать искажений, используется гамма-коррекция входного сигнала. Для 
этого входное значение возводится в степень 1/<FONT face=symbol>g</FONT> и затем 
передается монитору. 
<P>На самом деле зависимости более сложные. Необходимо учитывать уровень 
освещения в комнате, где находится компьютер, яркость и контрастность, 
установленные на мониторе, и наконец субъективное восприятие пользователя. 
<P>
<CENTER>
<H4>Встроенные гамма-коррекции</H4></CENTER>
<P>Некоторые графические системы имеют встроенную аппаратную гамма-коррекцию, 
которая может регулироваться. Как правило, встроенная гамма-коррекция отличается 
от усредненного значения гаммы мониторов, равного 2.5 и близка к минимальному 
значению гаммы мониторов (см. выше). Дополнительная гамма-коррекция, требуемая 
для обеспечения верности воспроизведения, называется "системной". 
<P>Файл изображения может иметь свою собственную гамму, равную величине 
гамма-коррекции, использованной при формировании файла. Эта гамма-коррекция 
называется "файловой". Большинство растровых графических файлов, за исключением 
файлов TGA и PNG, не предусматривают сохранения "файловой гаммы", поэтому при 
воспроизведении может потребоваться ее подбор. 
<P>IBM&nbsp;PC и графические станции фирмы SUN не имеют встроенной 
гамма-коррекции, т.е. их системная гамма примерно равна 2.5. Поэтому для верного 
воспроизведения сигнал (значение кода пиксела) следует возводить в степень 
1/2.5. 
<P>Графические станции фирмы Silicon Graphics имеют встроенную аппаратную 
гамма-коррекцию, равную 1.7, т.е. при посылке пиксела в буфер кадра его значение 
возводится в степень 1/1.7. Таким образом программное обеспечение должно само 
вначале отрегулировать сигнал возведением в степень 1/1.5 (2.5/1.7 
&nbsp;&nbsp;<FONT face=symbol> ~ </FONT>&nbsp;&nbsp;1.5). Т.е. системная гамма 
для этих станций составляет 1.5. 
<P>Графические станции Макинтош имеют встроенную аппаратную гамма-коррекцию, 
равную 1.4. Таким образом для полной гамма-коррекции программное обеспечение 
должно само вначале отрегулировать сигнал возведением в степень 1/1.8 (2.5/1.4 
&nbsp;&nbsp;<FONT face=symbol> ~ </FONT>&nbsp;&nbsp;1.8). Т.е. системная гамма 
для этих станций составляет 1.8. 
<P>
<CENTER>
<H4>Влияние гамма-коррекции на передачу цветов</H4></CENTER>
<P>Значения гаммы для различных мониторов могут быть различны для красного, 
зеленого и синего каналов. Кроме этого мониторы могут отличаться и по 
спектральным характеристикам люминофоров. Поэтому для обеспечения верности 
воспроизведения изображения, построенного на другом мониторе, может 
потребоваться подбор гаммы. Обычно это делается после оценки гаммы монитора с 
помощью калибровочных тестовых изображений. 
<P>Влияние значения гаммы на цветопередачу очевидно. Пусть, например мы имеем 
изображение цветного квадрата, построенного с использованием модели RGB (см. 
раздел&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#color-mod">0.4</A>) и вычисленным 
соотношением яркостей цветов равным 8:2:2. После воспроизведения на графической 
системе без гамма-коррекции мы получим соотношение, равное 32:1:1. 
<P>Все цветовые модели можно разделить на два типа - зависящие и не зависящие от 
системной гаммы. В таблице&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#gamcor_tbl">0.7.2</A> приведена 
классификация некоторых из моделей цветов. 
<P>
<P><A name=tth_tAb0.7.2>
<CENTER>Таблица 0.7.2: Зависимость моделей цветов от системной 
гаммы</CENTER></A>
<CENTER>
<P><A name=gamcor_tbl>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle>Зависимые от </TD>
    <TD align=middle>Независимые от</TD>
  <TR>
    <TD align=middle>системной гаммы</TD>
    <TD align=middle>системной гаммы</TD>
  <TR>
    <TD align=middle>RGB </TD>
    <TD align=middle>CIE XYZ</TD>
  <TR>
    <TD align=middle>CMY </TD>
    <TD align=middle>CIE xyY</TD>
  <TR>
    <TD align=middle>CMYK</TD>
    <TD align=middle>Lab</TD>
  <TR>
    <TD align=middle>HSV</TD>
    <TD align=middle>Luv</TD>
  <TR>
    <TD align=middle>HLS</TD>
    <TD align=middle>Munsell</TD></TD></TR></TBODY></TABLE></CENTER></A>
<P><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#tthFrefAAB"><SUP>1</SUP></A> 
Формат кадра 4:3 выбран из тех соображений, что зона действия желтого пятна 
глаза составляет 8по горизонтали и 6 по вертикали. Объект, попадающий на желтое 
пятно, виден наиболее ясно и целиком, т.е. соотношение его сторон также должно 
быть порядка 4:3. 
<CENTER>
<H3><A name=tth_sEc0.8>0.8</A>&nbsp;&nbsp;Дисплеи с произвольным сканированием 
луча (каллиграфические или векторные дисплеи)</H3><A name=V_Displ></A></CENTER>
<P>В данном разделе рассматривается архитектура дисплеев с произвольным и 
растровым сканированием луча, использующих ЭЛТ в качетве устройства отображения. 

<P>Вводятся понятия дисплейного файла, линейного дисплейного файла и 
структурированного дисплейного файла, дисплейного процессора. 
<P>Показывается, что дисплейный процессор состоит из дисплейного контроллера, 
блока преобразований и дисплейного генератора. 
<P>Рассматриваются два алгоритма работы генератора векторов - цифрового 
дифференциального анализатора и Брезенхема. 
<P>Анализируется процесс преобразования модели объекта в изображение, 
рассматриваются целесообразные границы разделения функций между центральным 
процессором и графической системой, описываются альтернативные архитектуры 
дисплеев.<BR>
<P>В настоящее время подавляющее распространение получили растровые дисплеи. 
Рассмотрение векторных дисплеев производится, в основном, из-за того что 
построение изображения на них осуществляется с использованием привычных понятий 
позиционирования и вычерчивания. На примере таких устройств формулируются общие 
понятия и выделяются принципиальные компоненты любой графической системы, 
назначением которой является представление модели объекта в изображение. 
<P>В векторных дисплеях изображение строится в виде совокупности отдельно и 
достаточно точно выдаваемых отрезков. Основная проблема большинства дисплеев, в 
частности дисплеев на обычных электронно-лучевых трубках состоит в том, что если 
линия прочерчивается один раз, то за время послесвечения она пропадет с экрана. 
Решение этой проблемы заключается в том, что построение изображения циклически 
повторяется (регенерируется) с требуемой частотой (обычно с частотой сети - 50 
Гц). Для такой регенерации используется дисплейный файл, представляющий собой 
описание изображения.<BR>
<P>
<CENTER>
<H4>Дисплейный файл</H4></CENTER>
<P>Дисплейный файл - набор команд дисплейного процессора. В очередном цикле 
регенерации команды последовательно выбираются из дисплейного файла и 
исполняются дисплейным процессором. Наряду с командами позиционирования луча и 
построения отрезков, обычно имеются команды построения символов, команды задания 
атрибутов построений таких как тип линии (сплошная, штриховая и т.п.), яркость 
подсветки, мерцание. 
<P>
<CENTER>
<H4>Линейный и сегментированный дисплейные файлы</H4></CENTER>
<P>Линейный дисплейный файл - линейная последовательность команд описания 
изображения, может быть содержащая команды перехода для повторения процесса 
отображения файла. Линейный дисплейный файл может быть разбит на отдельные, 
независимо модифицируемые части. С использованием сегментов модификации 
изображения могут заключаться в изменении только требуемых частей. Такого сорта 
линейный дисплейный файл называется сегментированным. 
<P>
<CENTER>
<H4>Структурированный дисплейный файл</H4></CENTER>
<P>Для сокращения объема дисплейного файла в составе команд дисплейного 
процессора могут предусматриваться не только графические команды формирования 
изображений и перехода, но и команды организации циклов и обращения к 
подпрограммам. Если описание изображения построено с использованием вложенных 
вызовов подпрограмм, то такого сорта дисплейный файл называется 
структурированным. 
<P>Легко видеть, что наличие механизма вложенных вызовов подпрограмм, в общем 
случае, требует наличия у дисплейного процессора средств геометрических 
преобразований и отсечения частей изображения, выходящих за пределы экрана. 
(Представьте себе изображение в перспективе улицы из типовых домов. Можно 
обойтись одной подпрограммой для построения дома, но каждый дом должен 
подвергаться индивидуальному преобразованию, а для некоторых домов потребуется 
отсечение). 
<P>
<CENTER>
<H4>Архитектура</H4></CENTER>
<P>Первые графические векторные дисплеи с регенерацией появились на зарубежном 
рынке в конце 60-х годов. В нашей стране серийные векторные дисплеи появились в 
середине 70-х годов. 
<P>Практически с самого начала векторные дисплеи имели разрешение 1024&times;1024 
точки и могли без мерцания отображать от 1500 до 3000 векторов. Векторы могли 
быть нескольких типов (сплошные, штриховые, точечные, пунктирные и т.д.) с 
несколькими градациями яркости. Встроенные средства генерации символов обычно 
имели возможность строить символы двух фиксированных размеров нескольких 
ориентаций. В качестве средства диалога использовались буквенно-цифровая и 
символьная клавиатуры и световое перо. 
<P>Рассмотрим архитектуру простой графической системы. Далее будет 
использоваться понятие "дисплейный процессор" широко распространенное в 
литературе, но не имеющее точного определения. Здесь под ним мы будем понимать 
(рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.1">0.8.1</A>) 
аппаратную часть графической системы, которая:<BR><FONT 
face=symbol>·</FONT>&nbsp;формирует изображение на дисплее из описания 
картины;<BR><FONT face=symbol>·</FONT>&nbsp;обрабатывает графический ввод от 
пользователя. 
<P>
<P><A name=tth_fIg0.1></A><A name=p8.1>
<CENTER><BR><IMG alt="Рисунок 45" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0145.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.1.1: Общая архитектура простой графической системы</CENTER></A>
<P>
<P>Обе задачи весьма специальны и вычислительно интенсивны и могли бы 
значительно затруднить обычную работу ЦП. 
<P>В зависимости от требований приложений и используемых приборов вывода 
дисплейные процессоры имеют различную сложность и работают на различных 
принципах. По принципу формирования изображения различаются два основных класса 
дисплейных процессоров (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.1">0.8.1</A>): 
<P><FONT face=symbol>·</FONT> каллиграфические или векторные устройства, 
называемые еще устройствами с произвольным сканированием луча;<BR>
<P><FONT face=symbol>·</FONT> растровые устройства. 
<P>Дисплейный процессор обязательно состоит из дисплейного контроллера и 
дисплейного генератора. Более мощные дисплейные процессоры оснащаются и 
собственными средствами преобразования и сохранения геометрических данных. 
<P>Рассмотрим назначение модулей дисплейного процессора справа-налево: 
дисплейный генератор, преобразования, дисплейный контроллер. 
<P>
<CENTER>
<H3><A name=tth_sEc0.8.1>0.8.1</A>&nbsp;&nbsp;Дисплейный генератор</H3></CENTER>
<P>Задача дисплейного генератора - управление X,Y-отклонением и интенсивностью 
луча. Как уже отмечалось, дисплейный файл, хранящий описание изображения, 
представляет собой программу, циклически исполняемую дисплейным процессором. При 
частоте регенерации в 50&nbsp;Гц одно исполнение программы должно занимать 
20&nbsp;мс. Если изображение слишком сложное, то дисплейный процессор не 
успевает его построить за 20 мсек и становится заметным мерцание. Для того, 
чтобы сложное изображение не мерцало требуется высокая скорость записи 
изображения дисплейным генератором, который работает на аналоговых, цифровых или 
смешанном принципах. В настоящее время используются чисто цифровые генераторы. 
Их основные преимущества: большая точность повторения построений (на аналоговых 
устройствах бывает заметен мелкомасштабный дребезг отрезков из-за недостаточной 
точности повторения со временем), температурная стабильность, легкая 
адаптируемость к разрешению и скорости прибора отображения. 
<P>
<CENTER>
<H4>Генератор векторов</H4></CENTER>
<P>Назначение генератора векторов - соединение двух точек отрезком прямой. Все 
вектора картинки должны быть одинаково яркими, если иное не задано специально. 
Это достигается (при неизменном токе луча) за счет одинаковой скорости 
вычерчивания. Кроме задания X,Y-координат должна управляться и интенсивность 
луча для построения видимого отрезка при включенном луче и позиционирования при 
выключенном. Рассмотрим генератор векторов, работающий на принципе ЦДА - 
цифрового дифференциального анализатора (DDA - Digital Differential 
Analyzer).<BR>
<P>
<CENTER>
<H4>Цифровой дифференциальный анализатор</H4></CENTER>
<P>Так как для управления трубкой отклоняющие по X и Y напряжения должны 
формироваться независимо друг от друга, запишем выражение для координат вектора 
в следующей общей форме: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>V(U) = P<SUB>n</SUB> + (P<SUB>k</SUB> - 
            P<SUB>n</SUB>) ·U = P<SUB>n</SUB> + dP ·U 
  </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>где V = [X,Y] и P<SUB>n</SUB>,P<SUB>k</SUB> - точки начала и конца вектора. 
<P>Параметр U имеет k+1 дискретное значение U<SUB>i</SUB> = i/k; i = 0,1,<FONT 
face=symbol>ј</FONT>,k. В этом случае точка V<SUB>i</SUB> = V(U<SUB>i</SUB>) 
есть: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>V<SUB>i</SUB> = P<SUB>n</SUB> + dP ·(i/k) = 
            P<SUB>n</SUB> + i ·(dP/k) 
</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Умножение, путем i-кратного сложения даст: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>V<SUB>i</SUB> = P<SUB>n</SUB> + </TD>
          <TD align=middle noWrap><FONT size=-1></FONT><BR><BR>(dP/k) + <FONT 
            face=symbol>ј</FONT>+ (dP/k)
            <HR>
            <FONT size=-1>i</FONT>&nbsp;<BR></TD>
          <TD noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Начальная точка P<SUB>n</SUB> = V<SUB>0</SUB>, конечная точка P<SUB>k</SUB> = 
V<SUB>k</SUB>.<BR>
<P>Очередная точка вычисляется из соотношения: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>V<SUB>i+1</SUB> = V<SUB>i</SUB> + (dP/k) 
        </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Результат деления dP/k определяется, при представлении k в виде целой степени 
двойки k = 2 <SUP>p</SUP>, путем p-кратного сдвига dP. Вектор получается путем 
2<SUP>p</SUP> кратного прибавления приращения dP/2<SUP>p</SUP> к исходной точке. 
Так как все вектора на экране должны иметь одинаковую яркость, то скорость 
построения должна быть одинаковой. Вследствие того что ЦДА работает с 
определенной тактовой частотой, количество точек должно быть пропорционально 
проекции длины вектора на экран. Для определения длины вектора достаточно 
соотношения: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>L = </TD>
          <TD align=middle noWrap>max<BR></TD>
          <TD noWrap>( <FONT face=symbol>|</FONT> dX <FONT 
            face=symbol>|</FONT>, <FONT face=symbol>|</FONT> dY <FONT 
            face=symbol>|</FONT> ) 
</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Число адресуемых точек обычно выбирается так, что диаметр точки D = 1.41 &times;R, 
где R точно единица растра. Это определяется необходимостью смыкания точек, 
стоящих в противоположных углах по диагонали квадратной растровой сетки. 
<P>Так как вектора на дисплее должны выглядеть непрерывными, то приращение | dP 
|/2<SUP>p</SUP> должно быть меньше чем элемент растра: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap><FONT face=symbol>|</FONT> dX 
                        <FONT face=symbol>|</FONT> / 2<SUP>p</SUP> &lt; 1 
                    </TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 noWrap><FONT 
                        face=symbol>|</FONT> dY <FONT face=symbol>|</FONT> / 
                        2<SUP>p</SUP> &lt; 1 
            </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD>
          <TD align=left><FONT face=symbol>ь<BR>э<BR>ю </FONT></TD>
          <TD align=middle><FONT face=symbol>Ю</FONT> 2<SUP>p</SUP> &gt; 
        L</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Чтобы по возможности уменьшить число сложений, p вычисляется таким образом, 
чтобы выполнялось: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>2<SUP>p</SUP> &gt; L <FONT 
            face=symbol>і</FONT> 2<SUP>p-1</SUP> 
  </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>При положительных относительных координатах dP из этого соотношения легко 
аппаратно определяется p. Для этого сдвигают значения dP в сторону уменьшения, 
пока в обоих регистрах не останутся нули перед двоичной точкой. При этом 
одновременно вычисляются и значения dP/2<SUP>p</SUP>. При отрицательных 
значениях вначале находится двоичнодополнительное число, а затем выполняется 
определение p. 
<P>Для того чтобы можно было отобразить больше векторов без мерцания 
одновременно выполняют построение вектора на экране и определение инкремента 
dP/2<SUP>p</SUP> для следующего. Этим способом можно выполнять в сумматоре без 
помех следующие сложения при начале нового вектора. При обработке коротких 
векторов можно, для повышения скорости вычислений, находить инкремент 
dP/2<SUP>p</SUP> в "барабанном сдвигателе" (это сдвиговый регистр, в котором 
решена проблема перехода через границы слов). При использовании быстрых 
переключающих схем удается достичь времени прорисовки диагонали дисплея за 
20&nbsp;мкс при разрешении 1024&times;1024 (тактовая частота 50&nbsp;МГц). 
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.2">0.8.2</A> приведена 
структурная схема 10-ти разрядного генератора векторов (1024&times;1024 точки). 
Определенные вычислителем 10-ти разрядные значения 2<SUP>p</SUP>, используются 
затем для вычисления 10-ти разрядных же дробных значений dX/2<SUP>p</SUP>, 
dY/2<SUP>p</SUP>. Эти значения прибавляются к дробной части 20-ти разрядных 
сумматоров координат, в целую часть которых в начале построения загружаются 
начальные координаты точки. Результаты суммирований передаются на 
цифро-аналоговые преобразователи (ЦАП'ы) для формирования аналоговых значений 
отклоняющих напряжений. 
<P>Ясно, что при длине слова ЦАП'а равной разрешению дисплея (здесь 10&times;10 бит) 
отдельные фрагменты вектора будут отделены явно видимыми ступеньками в 1 
дискрету. При увеличении разрядности ЦАП'а с захватом разрядов дробной части 
сумматора позиционирование будет более точным. Так при 11-битовых ЦАП'ах 
позиционирование будет с точностью до 1/2 пиксела, а при 12 разрядах - уточнение 
еще на 1/4. Это поясняется в таблицах на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.2">0.8.2</A>, в которых: 
<P>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD>X<SUB>n</SUB> = Y<SUB>n</SUB> = 0,&nbsp; X<SUB>k</SUB> = 
      6,&nbsp;Y<SUB>k</SUB> = 3 </TD>
    <TD>в десятичной системе </TD>
  <TR>
    <TD>dX / 2<SUP>p</SUP> = 0.11 </TD>
    <TD>в двоичной системе </TD>
  <TR>
    <TD>dY / 2<SUP>p</SUP> = 0.011 </TD>
    <TD>в двоичной системе </TD></TD></TR></TBODY></TABLE></CENTER>
<P>Другое улучшение может быть получено использованием округления. Для этого 
перед началом генерации вектора в оба сумматора надо загрузить 0.5. Отклонение 
вычерченной точки от точной позиции будет по максимуму равно половине растрового 
расстояния. 
<P>
<P><A name=tth_fIg0.2></A><A name=p8.2>
<CENTER><BR><IMG alt="Рисунок 46" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0146.gif">
<P>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle></TD>
    <TD>10-бит </TD>
    <TD align=middle>ЦАП </TD>
    <TD></TD>
    <TD align=middle>11-бит </TD>
    <TD>ЦАП </TD>
    <TD align=middle></TD>
    <TD>12-бит </TD>
    <TD align=middle>ЦАП </TD>
  <TR>
    <TD align=middle></TD>
    <TD>X </TD>
    <TD align=middle>Y </TD>
    <TD></TD>
    <TD align=middle>X </TD>
    <TD>Y </TD>
    <TD align=middle></TD>
    <TD>X </TD>
    <TD align=middle>Y </TD>
  <TR>
    <TD align=middle></TD>
    <TD>000. </TD>
    <TD align=middle>000. </TD>
    <TD></TD>
    <TD align=middle>000.1 </TD>
    <TD>000.0 </TD>
    <TD align=middle></TD>
    <TD>000.11 </TD>
    <TD align=middle>000.01 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>001. </TD>
    <TD align=middle>000. </TD>
    <TD></TD>
    <TD align=middle>001.1 </TD>
    <TD>000.1 </TD>
    <TD align=middle></TD>
    <TD>001.10 </TD>
    <TD align=middle>000.11 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>010. </TD>
    <TD align=middle>001. </TD>
    <TD></TD>
    <TD align=middle>010.0 </TD>
    <TD>001.0 </TD>
    <TD align=middle></TD>
    <TD>010.01 </TD>
    <TD align=middle>001.00 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>011. </TD>
    <TD align=middle>001. </TD>
    <TD></TD>
    <TD align=middle>011.0 </TD>
    <TD>001.1 </TD>
    <TD align=middle></TD>
    <TD>011.00 </TD>
    <TD align=middle>001.10 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>011. </TD>
    <TD align=middle>001. </TD>
    <TD></TD>
    <TD align=middle>011.1 </TD>
    <TD>001.1 </TD>
    <TD align=middle></TD>
    <TD>011.11 </TD>
    <TD align=middle>001.11 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>100. </TD>
    <TD align=middle>010. </TD>
    <TD></TD>
    <TD align=middle>100.1 </TD>
    <TD>010.0 </TD>
    <TD align=middle></TD>
    <TD>100.10 </TD>
    <TD align=middle>010.01 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>101. </TD>
    <TD align=middle>010. </TD>
    <TD></TD>
    <TD align=middle>101.0 </TD>
    <TD>010.1 </TD>
    <TD align=middle></TD>
    <TD>101.01 </TD>
    <TD align=middle>010.10 </TD>
  <TR>
    <TD align=middle></TD>
    <TD>110. </TD>
    <TD align=middle>011. </TD>
    <TD></TD>
    <TD align=middle>110.0 </TD>
    <TD>011.0 </TD>
    <TD align=middle></TD>
    <TD>110.00 </TD>
    <TD align=middle>011.00 </TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<CENTER>Рис. 0.1.2: Структура цифрового генератора векторов</CENTER></A>
<P>
<P>В растровых дисплеях ступеньки в одну дискрету возникают обязательно. Их 
устранение возможно не за счет уточнения позиционирования, как в векторных, а за 
счет корректировки изображений пикселов, что приводит к понижению 
пространственного разрешения. Более подробно борьба с лестничным эффектом в 
растровых дисплеях освещена во второй части курса. 
<P>
<CENTER>
<H4>Другие алгоритмы генерации векторов</H4></CENTER>
<P>Описанный выше генератор векторов имеет тот недостаток, что точки могут 
прописываться дважды и поэтому на дисплее с произвольным сканированием могут 
вызывать нежелательные колебания яркости. Кроме того из-за независимого 
вычисления обеих координат нет предпочтительных направлений. 
<P>Субъективно, однако, лучше смотрятся вектора с единичным шагом по большей 
относительной координате (несимметричный ЦДА). Для dX &gt; dY (при dX,dY &gt; 0) 
это означает, что координата по X направлению должна увеличиться на 1 dX раз, а 
координата по Y-направлению должна также dX раз увеличиться, но на dY/dX. Так 
как, как правило, dX не является степенью двойки, то требуется выполнения 
деления, что затруднено при аппаратной реализации. 
<P>Брезенхем предложил алгоритм, исключающий операцию деления, имеющуюся в ЦДА. 
Основная идея алгоритма состоит в том, что если угловой коэффициент прямой 
больше 1/2, то естественно точку, следующую за точкой (0,0), поставить в позицию 
(1,0) (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.3">0.8.3</A>а), а если угловой 
коэффициент больше 1/2, то - в позицию (1,1) (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.3">0.8.3</A>б). Построение 
отрезка из точки (0,0) в точку (4.2,1.7) показано на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.3">0.8.3</A>в). 
<P>Программные реализации алгоритмов ЦДА и несимметричного ЦДА, а также 
алгоритма Брезенхема для генерации отрезков рассмотрен во второй части курса - 
"Основные алгоритмы". 
<P>
<P><A name=tth_fIg0.3></A><A name=p8.3>
<CENTER><BR><IMG alt="Рисунок 47" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0147.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.1.3: Генерация вектора по алгоритму Брезенхема</CENTER></A>
<P>
<P>Разработаны алгоритмы цифрового генератора векторов для окружностей и 
конических сечений. 
<P>Цифровой генератор векторов представляет собой специализированный, легко 
применимый процессор, встраиваемый в современные растровые системы как один из 
функционально-ориентированных процессоров. Его интеграция с приборами вывода 
различной точности и скорости показана на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.4">0.8.4</A>. 
<P>
<P><A name=tth_fIg0.4></A><A name=p8.4>
<CENTER><BR><IMG alt="Рисунок 48" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0148.gif">
<P></CENTER>
<CENTER>Рис. 0.1.4: Варианты использования генератора векторов</CENTER></A>
<P>
<P>
<CENTER>
<H4>Знакогенератор</H4></CENTER>
<P>Знаки (буквы, цифры, значки), наряду с векторами, являются наиболее широко 
употребимыми графическими примитивами. Они в общем представлены в закодированной 
форме, например, ASCII, КОИ-8 и т.д. Эти коды преобразуются знакогенератором в 
координатные значения для представления соответствующих знаков. 
<P>Используются два основных метода - векторный метод и метод матрицы точек. 
<P>
<CENTER>
<H4>Векторный метод</H4></CENTER>
<P>Знаки запомнены в генераторе символов в виде приращений координат. Для 
формирования изображения знака вызывается генератор векторов для построения 
отрезков, составляющих знак. Для повышения эффективности кодирования 
используются короткие векторы в виде отрезков, соединяющих точки специального 
символьного растра. Знак кодируется как последовательность номеров растровых 
точек. Фактические относительные координаты, которые передаются генератору 
векторов, должны перед этим преобразоваться, чтобы, например, сохранить масштаб 
или направление вычерчивания знаков. При этом такое преобразование не влияет на 
качество знака. Генератор знаков, работающий таким образом, имеет высокое 
качество генерации знаков и пригоден для генерации определенных пользователем 
последовательностей символов. 
<P>
<CENTER>
<H4>Метод матрицы точек</H4></CENTER>
<P>При использовании такого метода знаки заданы как последовательности точек 
внутри точечной матрицы (например, 5&times;7 или 16&times;32 точек) и запомнены в генераторе 
знаков. При выводе знака матрица знака сканируется по строкам или по столбцам и 
используется для управления включением/выключением луча. Качество символов 
приемлемое только при отображении 1:1. Координатные преобразования, за 
исключением сдвига и поворота на углы, кратные 90, как правило, невозможны. Так 
как тогда каждая отдельная точка знака должна бы была преобразовываться и 
соответствующим образом выводиться, что приводило бы к затратам времени, 
неприемлемым для большинства приложений. 
<P>Наряду с управлением отклонением включением/выключением луча в некоторых 
реализациях знакогенератор формирует сигналы для управления межсимвольным 
расстоянием в строке. Знакогенераторы с матрицей точек обычно используются в 
дисплеях с растровым сканированием луча. 
<P>
<CENTER>
<H4>Генераторы кривых и плоскостей</H4></CENTER>
<P>Наряду с генераторами векторов и знаков, многие дисплеи имеют генераторы 
кривых и плоскостей. Преимущество их использования в первую очередь состоит 
большей скорости вычерчивания а, кроме того, экономится память для хранения 
картины и требуется меньшее время для ее передачи. В основном, используются 
генераторы дуг окружностей и эллипсов. 
<P>
<CENTER>
<H3><A name=tth_sEc0.8.2>0.8.2</A>&nbsp;&nbsp;Преобразования</H3></CENTER>
<P>Преобразование изображения заключается либо в его геометрическом, 
координатном преобразовании, либо в преобразовании видимости, заключающемся, в 
частности, в отсечении частей полной сцены, невидимых в заданном окне просмотра. 

<P>
<CENTER>
<H4>Координатные преобразования</H4></CENTER>
<P>Дисплеи большой мощности обеспечивают выполнение геометрических 
преобразований (сдвиг, вращение, масштабирование, перспектива) в реальном 
времени с помощью аппаратуры перемножения матриц. При этом используются 
однородные координаты, позволяющие любое преобразование представить как 
умножение координат вектора на матрицу 4&times;4. На преобразование требуется 16 
умножений и 12 сложений. При перспективных преобразованиях дополнительно 
требуются 2 деления. Аппаратура преобразований, в основном, реализуется на СБИС. 
На обычных стандартных чипах достигнуты времена преобразования в 3&nbsp;мкс (без 
делений). 
<P>
<CENTER>
<H4>Отсечение векторов</H4></CENTER>
<P>Если изображение выходит за пределы экрана, то на части дисплеев 
увеличивается время построения за счет того, что изображение строится в "уме". В 
некоторых дисплеях выход за пределы экрана приводит к искажению картины, так как 
координаты просто ограничиваются при достижении ими граничных значений, а не 
выполняется точный расчет координат пересечения (эффект "стягивания" 
изображения). Некоторые, в основном, простые дисплеи просто не допускают выхода 
за пределы экрана. Все это, особенно в связи с широким использованием технологии 
просмотра окнами, требует выполнения отсечения сцены по границам окна видимости. 

<P>Программное исполнение отсечения достаточно медленный процесс, поэтому, 
естественно, в мощные дисплеи встраивается соответствующее оборудование. 
<P>Первое сообщение об аппаратуре отсечения, реализующей алгоритм 
Коэна-Сазерленда для отсечения отрезка на прямоугольном окне в устройстве 
Clipping Diviger, появилось в 1968 г. 
<P>Имеются реализации в СБИС варианта алгоритма Сазерленда-Ходгмана для 
отсечения многоугольника на прямоугольном окне. В этом алгоритме многоугольник 
последовательно отсекается всеми четырьмя сторонами окна. 
<P>Различные алгоритмы отсечения отрезков и многоугольников, в том числе и уже 
упомянутые алгоритмы Коэна-Сазерленда и Сазерленда-Ходгмана, подробно 
рассмотрены во второй части курса - "Основные алгоритмы". 
<P>
<CENTER>
<H3><A name=tth_sEc0.8.3>0.8.3</A>&nbsp;&nbsp;Дисплейный 
контроллер</H3></CENTER>
<P>Из блок-схемы простой графической системы (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.1">0.8.1</A>), после 
рассмотрения работы дисплейного генератора и блока преобразований, ясно 
назначение дисплейного контроллера:<BR><FONT face=symbol>·</FONT>&nbsp;связь с 
компьютером;<BR><FONT face=symbol>·</FONT>&nbsp;управление формированием 
изображения;<BR><FONT face=symbol>·</FONT>&nbsp;обработка графического ввода. 
<P>Специального пояснения обеспечение связи с компьютером повидимому не требует. 

<P>В чем заключается обработка графического ввода будет в основном уяснено при 
рассмотрении различных устройств ввода. 
<P>Здесь требует пояснений лишь функция управления формированием изображений, 
которая зависит от выбранной архитектуры. Если, например, дисплейный файл 
находится в ЦП, то ЦП выставляет стартовый адрес и инициирует контроллер. Когда 
контроллеру требуется следующая команда, то он приостанавливает процессор и 
выполняет доступ к памяти. Полученная команда декодируется и исполняется. Это 
могут быть команды построений, управления атрибутами построения, выполнения 
преобразований, отсечения, задания следующего адреса доступа и т.д. Понятно, что 
в этом случае контроллер отнимает время ЦП, которое могло бы быть использовано 
более полезным образом. С этой целью проанализируем различные построения 
графических системы. 
<P>
<CENTER>
<H3><A name=tth_sEc0.8.4>0.8.4</A>&nbsp;&nbsp;Варианты архитектуры графических 
систем</H3></CENTER>
<P>Здесь мы рассмотрим самые общие соображения по построению графической 
системы, не зависящие от метода формирования изображения (произвольное или 
растровое сканирование луча). 
<P>В общем, цель графической системы - визуализация модели объекта, 
обрабатываемой компьютером. 
<P>Можно представить себе два основных способа представления модели объекта - 
алгоритмический, когда модель объекта вместе с описанием изображения и процесса 
его генерации "размазаны" по некоторому алгоритму. Другой способ - представление 
модели объекта в структуре данных. В этом случае достигается разделение по сути 
дела различных функций - манипулирование моделью (моделирование объекта, сцены и 
т.п.) со стороны прикладной системы и отображение модели в виде картин. 
<P>Ясно, что отображение, хотя временами и очень трудная, но стабильная 
проблема, в то время как моделирование определяется потенциально бесконечным 
количеством приложений. Поэтому, оговорив интерфейс, есть смысл разделять 
моделирование и отображение так чтобы было возможно из независимое развитие. 
<P>Принципиальным моментом в разработке распределенной системы является выбор 
оптимального разделения функций между подсистемами моделирования и отображения. 
Естественно предполагать, что какая-либо граница раздела должна находиться в 
месте полного завершения выполнения некоторой функции. Кроме того, вряд ли 
целесообразно разделять между различными подсистемами некоторый файл данных и 
программу (процессор) его "интенсивной" обработки. Для уяснения задачи 
распределения функций рассмотрим модель графической системы с точки зрения 
процессов преобразования информации при формировании изображения. 
<P>Процесс вывода может быть представлен следующей схемой: 
<P>
<P><A name=tth_fIg0.5></A><A name=p8.6>
<CENTER><BR><IMG alt="Рисунок 49" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0149.gif">
<P></CENTER>
<CENTER>Рис. 0.1.5: Модель процесса вывода в графической системе. БД - база 
данных прикладной программы; ПП - прикладная программа; ГСДФ - генератор 
структурированного дисплейного файла; СДФ - структурированный дисплейный файл; 
ГЛДФ - генератор линейного дисплейного файла; ЛДФ - линейный дисплейный файл; ДП 
- дисплейный процессор; ВЫВ1, ВЫВ2, ВЫВ3, ВЫВ4 - возможные границы разделения 
функций</CENTER></A>
<P>
<P>В этой модели отдана дань традиционному соображению о полезности 
структурированного дисплейного файла, представляющего собой иерархию вложенных 
объектов. Каждый объект, кроме примитивных элементов, может содержать экземпляры 
объектов нижнего уровня. Экземпляр объекта может сопровождаться набором 
совершаемых над ним преобразований. Использование экземпляров объекта 
выполняется либо его копированием, либо ссылкой (аналогично вызову 
подпрограммы). На самом же деле такое описание изображения подразумевает 
иерархичность его структуры, которая действительно имеет место в только ряде 
задач проектирования. 
<P>Итак: ВЫВ1 - подсистема моделирования готовит высокоуровневую информацию для 
построения структурированного дисплейного файла. Подсистема отображения 
формирует его и поддерживает работу с таким файлом, т.е. обмен информацией 
производится на наиболее высоком семантическом уровне. 
<P>ВЫВ2 - подсистема моделирования формирует структурированный дисплейный файл и 
передает его на хранение и интерпретацию в подсистему отображения. Понятно, что 
в этом случае возрастает разнообразие и сложность передаваемых данных, так как 
кроме информации по построению изображения должна передаваться информация, 
связанная с управлением структурой данных. 
<P>ВЫВ3 - подсистема моделирования формирует информацию для построения линейного 
дисплейного файла, возможно сегментированного. Линейный дисплейный файл 
формируется и поддерживается подсистемой отображения. Он является результатом 
выполнения геометрических преобразований, преобразований окно - порт и отсечения 
над полным изображением. 
<P>ВЫВ4 - подсистема моделирования формирует линейный (сегментированный) 
дисплейный файл и в аппаратно-ориентированной форме передает его подсистеме 
отображения, в задачи которой входит лишь поддержка функций приема и 
интерпретации файла в изображение дисплейным контроллером. Требования к 
вычислительной мощности подсистемы отображения и ее программному обеспечению в 
данном случае минимальны. 
<P>Следует отметить, что, так называемая, аппаратно-ориентированная форма для 
современных дисплеев, как правило, весьма высокоуровневая и включает в себя 
типичные наборы примитивов, атрибутов, средств сегментирования и даже 
структурирования. Аппаратность же в основном заключается в использовании 
некоторой вполне определенной формы кодирования, причем обычно наиболее 
компактной. 
<P>Из рассмотренного ясно, что наиболее целесообразны границы раздела ВЫВ1, 
ВЫВ3, ВЫВ4. Причем первые две обеспечивают аппаратную независимость, а последняя 
соответствует минимальным требованиям к подсистеме отображения. 
<P>Естественно полагать, что подсистема моделирования находится в ЦП, а 
подсистема отображения представлена дисплейным процессором. 
<P>Для повышения быстродействия при выполнении преобразований используются 
архитектуры с двойной буферизацией, использующие два дисплейных контроллера и 
два буфера для сохранения изображения. Дисплейный контроллер 1 выполняет 
преобразования и формирует линейный дисплейный файл в одном из буферов. 
Параллельно с этим более простым дисплейный контроллером 2 ведется отображение 
из второго буфера. Затем буфера переключаются. 
<P>
<CENTER>
<H3><A name=tth_sEc0.8.5>0.8.5</A>&nbsp;&nbsp;Области применения векторных 
дисплеев</H3></CENTER>
<P>Основными качествами векторных дисплеев являются: 
<P><FONT face=symbol>·</FONT> векторное представление с высоким разрешением, 
<P><FONT face=symbol>·</FONT> динамическое представление с преобразованиями в 
реальном масштабе времени,<BR>
<P><FONT face=symbol>·</FONT> высокая интерактивность. 
<P>Параметры векторных дисплеев по разрешению, достигнутые уже более десятилетия 
назад, все еще проблематичны для растровых устройств. Так, например, дисплей СМ 
7316 (НИИ периферийного оборудования, Киев, 1982 г.) мог отображать без мерцания 
до 4000-6000 векторов и 4096 символов при разрешении 2048&times;2048. 
<P>Поэтому такие дисплеи хорошо подходят для задач САПР, в которых требуется 
быстрое представление большого числа отрезков и малое время ответа на 
воздействие пользователя. 
<P>Кроме этого векторные дисплеи (их геометрическая часть) могут рассматриваться 
как геометрические процессоры для растровых систем. 
<P>
<CENTER>
<H3><A name=tth_sEc0.9>0.9</A>&nbsp;&nbsp;Растровые дисплеи</H3><A 
name=R_Displ></A></CENTER>
<P>Растровый (телевизионный) принцип формирования изображения заключается в 
разложении изображения на горизонтальные строки, состоящие из отдельных 
элементов. Вывод такого изображения осуществляется независимо от процесса 
построения с одинаковой скоростью последовательным сканированием по строкам в 
направлении сверху-вниз от 25 до 80 раз в секунду. В отличие от векторных 
дисплеев, в силу отделения процесса формирования картины от процесса ее вывода, 
сложность немерцающего изображения не ограничена. 
<P>Хотя телевидение (аналоговое) появилось еще в 30-е годы, использование 
телевизионного построчного представления изображений в компьтерной графике стало 
реально возможным с появлением дешевой полупроводниковой памяти для хранения 
растрового представления и прогрессом в технологии мониторов. 
<P>Растровые дисплеи имеют наиболее широкое распространение, что связано со 
следующими основными свойствами устройств этого класса: 
<P><FONT face=symbol>·</FONT> обеспечивается наивысшее качество при меньшей 
стоимости, 
<P><FONT face=symbol>·</FONT> полные цветовые возможности и легкость 
представления закрашенных поверхностей,<BR>
<P><FONT face=symbol>·</FONT> возможность совместимости с телевидением позволяет 
смешивать синтезированные и естественные изображения и поддерживать новые 
технологии в телекоммуникациях (видеотекст, системы Multimedia),<BR>
<P><FONT face=symbol>·</FONT> интерактивная компьтерная графика и обработка 
изображений могут выполняться в рамках одной системы, 
<P><FONT face=symbol>·</FONT> сложность немерцающего изображения практически 
неограничена, 
<P><FONT face=symbol>·</FONT> телевизор хорошо знаком каждому как привычный 
предмет обихода. 
<P>Основные компоненты растрового дисплея показаны на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.1">0.9.1</A>. Подсистема 
создания изображения формирует растровое представление сцены из описания, 
переданного от компьютера. Это поточечное представление в виде отдельных 
пикселов (от словосочетания picture element, иногда используется "pel" - "пэл") 
заносится видеопамять (кадровый буфер, буфер регенерации, битовая карта). 
Видеопамять непрерывно и независимо от процесса занесения построчно сканируется 
видеоконтроллером, формирующим сигналы для монитора, выдающего картинку. 
<P>Сравнивая с векторными дисплеями (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.1">0.8.1</A>, <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p8.6">0.8.5</A> - ), видим что 
перечисленные компоненты соответствуют позиции дисплейного генератора. 
Назначение и архитектура других компонент графической системы, занимающихся 
геометрическими преобразованиями (если они есть), конечно, подобна, но эти 
компоненты не являются принципиальными при рассмотрении растрового дисплея. 
<P>
<P><A name=tth_fIg0.1></A><A name=p9.1>
<CENTER><BR><IMG alt="Рисунок 50" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0150.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.2.1: Основные компоненты растрового дисплея</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.9.1>0.9.1</A>&nbsp;&nbsp;Видеоконтроллер</H3></CENTER>
<P>Видеоконтроллер формирует изображение на экране монитора путем его 
построчного вывода. При этом точно соблюдает время развертки строки, либо 
соответствующее телевизионным нормам, либо предопределенным параметрам (ширина 
полосы, частота строк и кадров и т.д.). Некоторые мониторы для сокращения полосы 
пропускания используют т.н. чересстрочную развертку (Interlacing), при которой 
две картинки имеют половинное вертикальное разрешение и выдаются на экран по 
двум вложенным в друг друга гребенкам строк (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.2">0.9.2</A>). Вначале 
выдаются строки 1-го полукадра, затем 2-го. Таким образом, при частоте кадров 
50&nbsp;Гц полная смена изображения на экране выполняется с частотой 25&nbsp;Гц. 
Такой способ используется в телевещании. Для синтезированных изображений он мало 
пригоден (при частоте кадров 50&nbsp;Гц), так как одиночные горизонтальные 
линии, занимающие ровно одну строку, неприятно и очень утомляюще мерцают. 
<P>
<P><A name=tth_fIg0.2></A><A name=p9.2>
<CENTER><BR><IMG alt="Рисунок 51" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0151.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.2.2: Чересстрочная развертка</CENTER></A>
<P>
<P>Время, требуемое для вывода картинки на монитор, определяется частотой строк 
и кадров, а также временами обратного хода строчной и кадровой разверток 
(рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.3">0.9.3</A>). 
Например, для телевизионного стандарта в 625 строк длительность строки 
составляет 64&nbsp;мкс, из которых 12&nbsp;мкс (почти 20%) - время обратного 
хода строчной развертки. Из времени картинки должно забираться время на обратный 
ход кадровой развертки. В этом случае длительностью в 25 строк. 
<P>
<P><A name=tth_fIg0.3></A><A name=p9.3>
<CENTER><BR><IMG alt="Рисунок 52" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0152.gif">
<P></CENTER>
<CENTER>Рис. 0.2.3: Потери на обратный ход строчной и кадровой 
разверток</CENTER></A>
<P>
<P>Важнейшим параметром не только для монитора, но и для растровой системы в 
целом является время, требуемое на обработку одного пиксела. Время, требуемое на 
обработку строки аппаратурой дисплея, составляет: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>t<SUB>s</SUB> = </TD>
          <TD align=middle noWrap>1/частота&nbsp;&nbsp;кадров - 
            t<SUB>обратного&nbsp;&nbsp;хода&nbsp;&nbsp;кадровой&nbsp;&nbsp;развертки</SUB>
            <HR noShade>
             
            число&nbsp;&nbsp;видимых&nbsp;&nbsp;строк&nbsp;&nbsp;в&nbsp;&nbsp;картине<BR></TD>
          <TD align=middle 
noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Причем для чересстрочной развертки обратный ход кадровой развертки за полную 
прорисовку картинки выполняется, естественно, дважды. 
<P>Так как часть времени строчной развертки тратится на перемещение луча к 
началу следующей строки (обратный ход строчной развертки, horizontal retrace), 
то время на обработку одного пиксела составит: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>t<SUB>n</SUB> = </TD>
          <TD align=middle noWrap>t<SUB>s</SUB> - 
            t<SUB>обратного&nbsp;&nbsp;хода&nbsp;&nbsp;строчной&nbsp;&nbsp;развертки</SUB>
            <HR noShade>
             число&nbsp;&nbsp;пикселов&nbsp;&nbsp;в&nbsp;&nbsp;строке<BR></TD>
          <TD align=middle 
noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>В таблице <A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>. 
приведены времена для некоторых мониторов. 
<P>
<P><A name=tth_tAb0.9.1>
<CENTER>Таблица 0.9.1: Характерные времена для некоторых мониторов</CENTER></A>
<CENTER>
<P><A name=t9.1>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle></TD>
    <TD align=middle>f </TD>
    <TD align=middle>t полн.</TD>
    <TD align=middle>t обр. </TD>
    <TD align=middle>t обр. </TD>
    <TD align=middle>Черес- </TD>
    <TD align=middle>tп на </TD>
  <TR>
    <TD align=middle>Разрешение </TD>
    <TD align=middle>кадр.</TD>
    <TD align=middle>строки </TD>
    <TD align=middle>строки </TD>
    <TD align=middle>кадров </TD>
    <TD align=middle>строч- </TD>
    <TD align=middle>пиксел </TD>
  <TR>
    <TD align=middle>X&times;Y </TD>
    <TD align=middle>Гц </TD>
    <TD align=middle>мкс </TD>
    <TD align=middle>мкс </TD>
    <TD align=middle>мкс </TD>
    <TD align=middle>ность </TD>
    <TD align=middle>нс </TD>
  <TR>
    <TD align=middle>512&times;512 </TD>
    <TD align=middle>30 </TD>
    <TD align=middle>60.4 </TD>
    <TD align=middle>10.9 </TD>
    <TD align=middle>1203 </TD>
    <TD align=middle>да </TD>
    <TD align=middle>96.7 </TD>
  <TR>
    <TD align=middle>768&times;576 </TD>
    <TD align=middle>50 </TD>
    <TD align=middle>64 </TD>
    <TD align=middle>12 </TD>
    <TD align=middle>1612 </TD>
    <TD align=middle>да </TD>
    <TD align=middle>70.3 </TD>
  <TR>
    <TD align=middle>1024&times;768 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>20.92 </TD>
    <TD align=middle>4 </TD>
    <TD align=middle>600 </TD>
    <TD align=middle>нет </TD>
    <TD align=middle>16.52 </TD>
  <TR>
    <TD align=middle>1024&times;1024 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>15.69 </TD>
    <TD align=middle>4 </TD>
    <TD align=middle>600 </TD>
    <TD align=middle>нет </TD>
    <TD align=middle>11.42 </TD>
  <TR>
    <TD align=middle>1280&times;1024 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>15.69 </TD>
    <TD align=middle>4 </TD>
    <TD align=middle>600 </TD>
    <TD align=middle>нет </TD>
    <TD align=middle>9.13 </TD></TD></TR></TBODY></TABLE></A></CENTER>
<P>
<P>В мониторах используются кинескопы с прямоугольной областью отображения с 
соотношением сторон обычно 4:3, что соответствует особенностям зрения человека. 
Если же для дисплея отношение числа пикселов в строке к числу строк отличается 
от 4:3, например, 512:512, то для занятия под изображение всей поверхности 
экрана потребуется сформировать не квадратные, а прямоугольные пикселы. Чтобы 
картинка выглядела на экране правильно (круг как круг и т.д.) ее потребуется 
предварительно искажать. Поэтому все современные дисплеи либо имеют соотношение 
4:3 (640:480, 768:576, 1280:960 и т.д.), либо занимают под изображение не всю 
поверхность экрана. 
<P>После этих замечаний относительно представления растровых изображений легко 
сформулировать назначение видеоконтроллера: 
<P><FONT face=symbol>·</FONT> адресация и чтение данных из видеопамяти; 
<P><FONT face=symbol>·</FONT> формирование синхроимпульсов разверток по 
горизонтали и вертикали, соответствующих формату изображения. Эти синхроимпульсы 
используются монитором для формирования отклоняющих напряжений; 
<P><FONT face=symbol>·</FONT> управление монитором для задания требуемых цветов 
и интенсивностей, цифро-аналоговое преобразование.<BR>
<P>Кроме этого, из таблицы&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>. видно, что 
времена на обработку пиксела существенно меньше, чем времена доступа к 
динамической полупроводниковой памяти, составляющие 100 нс и более, поэтому 
видеопамять обычно организована специальным образом, так что из нее читается 
сразу не один пиксел. 
<P>Дополнительно заметим, что пикселы строки отображаются на экран строго 
последовательно. Поэтому обычным техническим решением является перепись пикселов 
в быстрый сдвиговый регистр с целью параллельно-последовательного преобразования 
и формирования сигналов управления цветами и интенсивностями по данным из этого 
регистра. 
<P>Таким образом блок-схема простого видеоконтроллера имеет вид: 
<P>
<P><A name=tth_fIg0.4></A><A name=p9.4>
<CENTER><BR><IMG alt="Рисунок 53" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0153.gif">
<P></CENTER>
<CENTER>Рис. 0.2.4: Блок-схема простого видеоконтроллера</CENTER></A>
<P>
<P>
<CENTER>
<H4>Полноцветные дисплеи и дисплеи с таблицей цветности (ТЦ)</H4></CENTER>
<P>Мы, по сути дела, рассмотрели однобитовый растровый дисплей (дисплей с одной 
битовой плоскостью, одним битовым планом). Увеличивая количество плоскостей мы, 
естественно, увеличиваем количество отображаемых цветов. Можно выделить два 
класса цветных растровых дисплеев: 
<P><FONT face=symbol>·</FONT> полноцветные дисплеи, в которых для каждого 
пиксела сразу хранятся значения R, G, B. Обычно полноцветные дисплеи имеют по 1 
байту на цвет. Т.е. объем видеопамяти составит почти 4 Мбайта при полной 
картинке 1280&times;1024 специально организованной, быстрой памяти. В таком дисплее на 
экране одновременно формально может присутствовать до 2<SUP>24</SUP>яцветов 
(более 16 миллионов); 
<P><FONT face=symbol>·</FONT> дисплеи с таблицей цветности (ТЦ) (Look up table - 
LUT), в которых значение считанного пиксела не сразу передается на 
цифро-аналоговое преобразование, а используется как адрес в таблице цветности. 
По этому адресу выбираются значения яркостей по R, G, B и уже они определяют 
цвет точки. Таким образом, имея видеопамять в 1 байт на пиксел и таблицу 
цветности с тремя байтами на элемент, мы можем одновременно отобразить 256 
оттенков из 2<SUP>24</SUP>. Основное свойство этого дисплея, однако, состоит не 
в том, что экономится память, а в том, что изменяя всего 1-3 байта в таблице 
цветности, можно одновременно изменить цвет у всех точек изображения с 
одинаковым кодом пиксела, не изменяя содержимого видеопамяти. С помощью таблицы 
цветности реализуются не только различные динамические визуальные эффекты, но 
может быть реализована произвольная фильтрация, получены любые битовые срезы, 
выполнены преобразования гистограммы без изменения данных в видеопамяти, а также 
гамма-коррекция (см. п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#pgam_cor">0.7.5</A>)<BR>
<P>Использование таблицы цветности поясняется на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.5">0.9.5</A>. 
<P>
<P><A name=tth_fIg0.5></A><A name=p9.5>
<CENTER><BR><IMG alt="Рисунок 54" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0154.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.2.5: Использование таблицы цветности для дисплея с 6-ти битным 
пикселом. В данном примере на экране одновременно может присутствовать 64 
оттенка из полной палитры в 4096 оттенков</CENTER></A>
<P>
<P>
<CENTER>
<H4>Управление плоскостями изображения</H4></CENTER>
<P>В дисплее в N битами на пиксел можно запомнить N черно-белых, бинарных или же 
N/3 RGB картин. Каждая такая картина может отображаться с помощью 
соответствующей загрузки ТЦ. Если требуется, то их можно даже переключать с 
тактовой частотой! В случае черно-белого бинарного изображения ТЦ требуется 
загружать таким образом, чтобы ее элемент, соответствующий 1, содержал значения, 
дающее либо белый, либо черный оттенок. 
<P>Пусть, например, имеем дисплей с шестью битами на пиксел, с нумерацией 
плоскостей от нуля до пяти. Таблица цветности тогда должна иметь 64 элемента. 
Предположим, что надо включить изображение с зеленым цветом для плоскости номер 
ноль, а все остальные выключить. А затем включить красным цветом изображение в 
битовой плоскости номер один. Соответствующие этому раскраски таблицы цветности 
будут иметь вид: 
<P>
<CENTER>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD colSpan=3>Раскраска ТЦ для включения </TD>
    <TD align=middle></TD>
    <TD colSpan=3>Раскраска ТЦ для включения </TD>
  <TR>
    <TD colSpan=3>зеленым цветом изображения </TD>
    <TD align=middle></TD>
    <TD colSpan=3>красным цветом изображения </TD>
  <TR>
    <TD colSpan=3>в плоскости номер 0 </TD>
    <TD align=middle></TD>
    <TD colSpan=3>в плоскости номер 1 </TD>
  <TR>
    <TD colSpan=7></TD>
  <TR>
    <TD align=middle colSpan=2>Код пиксела </TD>
    <TD align=middle>Значение </TD>
    <TD></TD>
    <TD align=middle colSpan=2>Код пиксела </TD>
    <TD align=middle>Значение </TD>
  <TR>
    <TD align=middle>дес. </TD>
    <TD align=middle>двоичный </TD>
    <TD align=middle>элемента ТЦ </TD>
    <TD></TD>
    <TD align=middle>дес. </TD>
    <TD>двоичный </TD>
    <TD align=middle>элемента ТЦ</TD>
  <TR>
    <TD align=middle>0 </TD>
    <TD align=middle>000000 </TD>
    <TD align=middle>0 0 0 </TD>
    <TD></TD>
    <TD align=middle>0 </TD>
    <TD>000000 </TD>
    <TD align=middle>0 0 0 </TD>
  <TR>
    <TD align=middle>1 </TD>
    <TD align=middle>000001 </TD>
    <TD align=middle>0 G 0 </TD>
    <TD></TD>
    <TD align=middle>1 </TD>
    <TD>000001 </TD>
    <TD align=middle>0 0 0 </TD>
  <TR>
    <TD align=middle>2 </TD>
    <TD align=middle>000010 </TD>
    <TD align=middle>0 0 0 </TD>
    <TD></TD>
    <TD align=middle>2 </TD>
    <TD>000010 </TD>
    <TD align=middle>R 0 0 </TD>
  <TR>
    <TD align=middle>3 </TD>
    <TD align=middle>000011 </TD>
    <TD align=middle>0 G 0 </TD>
    <TD></TD>
    <TD align=middle>3 </TD>
    <TD>000011 </TD>
    <TD align=middle>R 0 0 </TD>
  <TR>
    <TD align=middle>4 </TD>
    <TD align=middle>000100 </TD>
    <TD align=middle>0 0 0 </TD>
    <TD></TD>
    <TD align=middle>4 </TD>
    <TD>000100 </TD>
    <TD align=middle>0 0 0 </TD>
  <TR>
    <TD align=middle></TD>
    <TD align=middle>. . . </TD>
    <TD align=middle>. . . </TD>
    <TD></TD>
    <TD align=middle></TD>
    <TD>. . . </TD>
    <TD align=middle>. . . </TD>
  <TR>
    <TD align=middle>62 </TD>
    <TD align=middle>111110 </TD>
    <TD align=middle>0 0 0 </TD>
    <TD></TD>
    <TD align=middle>62 </TD>
    <TD>111110 </TD>
    <TD align=middle>R 0 0 </TD>
  <TR>
    <TD align=middle>63 </TD>
    <TD align=middle>111111 </TD>
    <TD align=middle>0 G 0 </TD>
    <TD></TD>
    <TD align=middle>63 </TD>
    <TD>111111 </TD>
    <TD align=middle>R 0 0 </TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<CENTER>
<H4>Приоритет изображений</H4></CENTER>
<P>Во многих приложениях требуются изображения, объекты которых хотя и размещены 
в пространстве, но не имеют глубины. В этом случае не требуется решение общих 
задач пересечения поверхностей и удаления невидимых граней. Достаточно просто 
упорядочить объекты по глубине. К этому классу относятся, например, изображения 
слоев печатной платы, изображения слоев чертежа, окна системы управления окнами 
и т.д. Это упорядочение или приоритет может быть реализовано с использованием 
битовых плоскостей, закрашенных требуемым образом. Так как это не полное решение 
3D задачи, то часто говорят об 2.5D изображениях. Если хотим получить эффект 
перекрытия отдельных прозрачных изображений, то заданному приоритету следует 
сопоставить соответствующий смешанный цвет в таблице цветности. 
<P>Для простоты рассмотрим трехбитовый дисплей. В старшей битовой плоскости 
разместим изображение А с наибольшим приоритетом, в младшей битовой плоскости - 
изображение В с наименьшим приоритетом. Возможные значения раскраски таблицы 
цветности в зависимости от значений пикселов для слоев, перекрывающихся в 
соответствии с приоритетом и для случая прозрачных слоев приведены ниже: 
<P>
<CENTER>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle></TD>
    <TD>Значение </TD>
    <TD align=right>Содержимое таблицы </TD>
    <TD align=middle>Содержимое таблицы </TD>
  <TR>
    <TD align=middle></TD>
    <TD>пиксела </TD>
    <TD align=right>цветности при </TD>
    <TD align=middle>цветности при </TD>
  <TR>
    <TD align=middle></TD>
    <TD></TD>
    <TD align=right>перекрытии слоев </TD>
    <TD align=middle>прозрачных слоях </TD>
  <TR>
    <TD align=middle></TD>
    <TD>0 0 0 </TD>
    <TD align=right>Цвет фона </TD>
    <TD align=middle>черный </TD>
  <TR>
    <TD align=middle></TD>
    <TD>0 0 1 </TD>
    <TD align=right>Цвет картинки В </TD>
    <TD align=middle>синий </TD>
  <TR>
    <TD align=middle></TD>
    <TD>0 1 0 </TD>
    <TD align=right>Цвет картинки Б </TD>
    <TD align=middle>зеленый </TD>
  <TR>
    <TD align=middle></TD>
    <TD>0 1 1 </TD>
    <TD align=right>Цвет картинки Б </TD>
    <TD align=middle>изумрудный </TD>
  <TR>
    <TD align=middle></TD>
    <TD>1 0 0 </TD>
    <TD align=right>Цвет картинки A </TD>
    <TD align=middle>красный </TD>
  <TR>
    <TD align=middle></TD>
    <TD>1 0 1 </TD>
    <TD align=right>Цвет картинки A </TD>
    <TD align=middle>пурпурный </TD>
  <TR>
    <TD align=middle></TD>
    <TD>1 1 0 </TD>
    <TD align=right>Цвет картинки A </TD>
    <TD align=middle>коричневый </TD>
  <TR>
    <TD align=middle></TD>
    <TD>1 1 1 </TD>
    <TD align=right>Цвет картинки A </TD>
    <TD align=middle>белый </TD>
  <TR>
    <TD align=middle>Картинка: </TD>
    <TD>А Б В </TD>
    <TD align=right>Приоритет А &gt; Б &gt; В </TD>
    <TD align=middle>Прозрачные слои </TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<CENTER>
<H4>Эффекты перемещений с помощью ТЦ</H4></CENTER>
<P>Динамическое изменение соотношений между кодами пикселов и соответствующих им 
цветам с помощью таблицы цветности позволяет моделировать эффекты движения, 
причем выполняемые очень быстро, в темпе разверток, а не в темпе генерации 
примитивов. Например, построим кривую с распределенными вдоль нее значениями 
кодов пикселов. Меняя элементы ТЦ, соответствующие этим кодам мы можем создавать 
эффекты ее постепенного построения, движения вдоль нее, рассыпания и т.д. 
<P>Другой способ - построим несколько раз кривую. Каждую реализацию своим кодом 
пикселов. Меняя содержимое таблицы цветности, может создать впечатление 
перемещения кривой по экрану, в том числе и с оставляемым ею следом. 
<P>
<CENTER>
<H4>Преобразования изображения "на лету"</H4></CENTER>
<P>На уровне видеовывода, кроме цветовых преобразований, могут быть реализованы 
несложные геометрические преобразования в реальном времени причем также без 
изменения данных в видеопамяти. 
<P>При этом жесткое соответствие 1:1 между адресами пикселов в видеопамяти и их 
координатами на экране утрачивается и выполняется преобразование окно просмотра 
в видеопамяти - окно видимости на экране (Widow - Viewport transformation). 
Обычно это преобразование включает в себя масштабирование, сдвиг и иногда 
поворот. Масштабирование обычно выполняется в целое число раз (Zoom) и 
заключается в соответствующем дублировании пикселов в X и Y направлении. 
<P>Для реализации сдвига нужны регистр координат и быстрые компараторы, которые 
сравнивают текущую позицию луча с желаемой новой позицией объекта и управляют 
адресацией для видеопамяти. Аналогичным образом может выполняться отсечение и 
вращение на 90. 
<P>Иное техническое решение для выполнения плавного масштабирования, 
перемещения, переворотов и даже произвольных перестановок строк изображения 
относительно горизонтальной оси и зеркального отображения относительно 
вертикальной оси предложено и реализовано В.Г. Сизыхом в станциях Гамма-4 и 
Гамма-Т [<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#mbib14" 
name=CITEmbib14>10</A>]. Идея состоит в использовании программно загружаемой 
таблицы, устанавливающей соответствие между строками изображения и адресами 
видеопамяти, - т.н. таблицы адресов (ТА). Для каждой строки экрана имеется один 
элемент таблицы, задающий, в частности, адрес видеопамяти, с которого надо 
начать отображение, и масштаб по Х. Увеличение по оси Y формируется повторением 
в очередной строке ТА предыдущего адреса видеопамяти. Уменьшение - пропуском 
очередного адреса. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.6">0.9.6</A> приведен пример 
ТА для видеопамяти 1024&times;1024 при экранном разрешении 768&times;576 и выводе нижних 576 
строк видеопамяти "вверх ногами" со смещением на 10 пикселов по оси X и 
единичными масштабами по осям. Начало видеопамяти - левый верхний угол. 
<P>Плавное, не целочисленное масштабирование выполняется путем 
выбрасывания/дублирования не всех, а части пикселов в строке и строк. 
<P>
<P><A name=tth_fIg0.6></A><A name=p9.6>
<CENTER><BR><IMG alt="Рисунок 55" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0155.gif">
<P></CENTER>
<CENTER>Рис. 0.2.6: Преобразование изображений в темпе разверток c 
использованием таблицы адресов</CENTER></A>
<P>
<P>Также В.Г. Сизыхом предложен и реализован метод однотонной заливки 
многоугольников в темпе видеовывода, позволяющий повысить скорость раскраски по 
максимуму в 768 раз. Для обычных синтезированных сцен повышение скорости более 
чем в 100 раз. Идея состоит в том, что при выполнении видеовывода строки 
отличные от нуля коды пикселов "защелкиваются" на регистре и передаются на вывод 
до тех пока не прийдет код, отличный от установленного. Последовательность 
закраски следующая: 
<P><FONT face=symbol>·</FONT> кадровый буфер очищается (все пикселы получают 
значение 0); 
<P><FONT face=symbol>·</FONT> у однотонно закрашенных многоугольников кодом с 
требуемым цветом строятся только левые ребра;<BR>
<P><FONT face=symbol>·</FONT> крайние правые ребра прорисовываются кодом 
отличным от 0, но цвет, соответствующий данному коду, должен совпадать с цветом 
фона. 
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.07">0.9.7</A> показано 
применение данного метода для закраски на белом фоне многоугольника ADCD красным 
цветом, ADEF - зеленым и EDCG - синим. 
<P>
<P><A name=tth_fIg0.7></A><A name=p9.07>
<CENTER><BR><IMG alt="Рисунок 56" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0156.gif">
<P></CENTER>
<CENTER>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle colSpan=5>Записать элементы ТЦ</TD>
    <TD align=middle>Построить отрезки</TD>
  <TR>
    <TD align=middle>Но-</TD>
    <TD align=middle colSpan=4>Байты ТЦ </TD>
    <TD align=middle>AB кодом 2</TD>
  <TR>
    <TD align=middle>мер</TD>
    <TD align=middle>R </TD>
    <TD align=middle>G </TD>
    <TD align=middle>B </TD>
    <TD>Пояснение </TD>
    <TD align=middle>BC кодом 1</TD>
  <TR>
    <TD align=middle>0 </TD>
    <TD align=middle>255</TD>
    <TD align=middle>255</TD>
    <TD align=middle>255</TD>
    <TD>белый </TD>
    <TD align=middle>CD кодом 4</TD>
  <TR>
    <TD align=middle>1 </TD>
    <TD align=middle>255</TD>
    <TD align=middle>255</TD>
    <TD align=middle>255</TD>
    <TD>белый </TD>
    <TD align=middle>DA кодом 2</TD>
  <TR>
    <TD align=middle>2 </TD>
    <TD align=middle>255</TD>
    <TD align=middle>000</TD>
    <TD align=middle>000</TD>
    <TD>красный </TD>
    <TD align=middle>DE кодом 4</TD>
  <TR>
    <TD align=middle>3 </TD>
    <TD align=middle>000</TD>
    <TD align=middle>255</TD>
    <TD align=middle>000</TD>
    <TD>зеленый </TD>
    <TD align=middle>EF кодом 3</TD>
  <TR>
    <TD align=middle>4 </TD>
    <TD align=middle>000</TD>
    <TD align=middle>000</TD>
    <TD align=middle>255</TD>
    <TD>синий </TD>
    <TD align=middle>FA кодом 3</TD>
  <TR>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD></TD>
    <TD align=middle>CG кодом 1</TD>
  <TR>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD></TD>
    <TD align=middle>GE кодом 1</TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<CENTER>Рис. 0.2.7: Закраска многоугольников "на лету". ADCD - красным, ADEF - 
зеленым и EDCG - синим.</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.9.2>0.9.2</A>&nbsp;&nbsp;Создание изображения</H3></CENTER>
<P>Модуль генерации изображений растрового дисплея (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.1">0.9.1</A>), часто 
называемый в литературе "image creation system" (ICS), имеет то же назначение 
что и дисплейный генератор для векторного дисплея. Важнейшее отличие от 
генератора изображений для векторного дисплея состоит в том, что в растровом 
дисплее генератор изображения в произвольное время заносит его представление в 
видеопамять (т.н. функционально-растровое преобразование). 
<P>Вывод изображения на экран осуществляется независимо работающей подсистемой 
отображения, которая синхронно с разверткой читает строки пикселов и выдает их 
на экран. 
<P>В результате такого разделения сложность изображения на растровом дисплее в 
принципе не ограничена. Фактическое же ограничение - количество пикселов на 
экране составляет для обычных дисплеев сотни тысяч элементов по сравнению с 
первыми тысячами для векторных дисплеев. 
<P>С этим несомненным достоинством связаны два основных недостатка растровых 
дисплеев по сравнению с векторными: 
<P><FONT face=symbol>·</FONT> непосредственное взаимодействие с изображением 
затруднено, так как временного соответствия между "указанием" объекта на экране 
и его генерацией не существует, поэтому в растровых системах используется 
программное моделирование сцены для определения совпадения координат объекта и 
положения того или иного устройства указания; 
<P><FONT face=symbol>·</FONT> динамическое представление "не дергающихся" 
перемещений требует, чтобы скорости генерации и воспроизведения совпадали. Это в 
общем случае возможно только на векторных дисплеях.<BR>
<P>Прогресс в области вычислительных технологий, по-видимому, позволит найти 
приемлемое решение этих проблем, например с использованием рассмотренного ниже 
растрирования в реальном времени. 
<P>Набор команд для растровых дисплеев, соответственно дополнительным 
возможностям, шире. Он включает команды задания яркостей или цвета, определения 
закрашенных поверхностей, команды копирования блоков пикселов, известные как 
Bitblt (Bit Boundary Block Transfer) или RasterOp (растровые операции) и 
выполнения логических операций над кодами пикселов. 
<P>В общем, команда пересылки блока пикселов имеет вид:<BR>приемник:= источник 
<B>ОП</B> приемник,<BR>где <B>ОП</B> - арифметическая или логическая операция 
над кодами пикселов. 
<P>Практически используются следующие операции: 
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD>Очистка </TD>
    <TD>приемник:= константа </TD>
  <TR>
    <TD>Узор </TD>
    <TD>приемник:= постоянный узор </TD>
  <TR>
    <TD>Копирование </TD>
    <TD>приемник:= источник </TD>
  <TR>
    <TD>Инвертирование </TD>
    <TD>приемник:= <B>NOT</B> приемник </TD>
  <TR>
    <TD>Логическое И </TD>
    <TD>приемник:= источник <B>AND</B> приемник </TD>
  <TR>
    <TD>Логическое ИЛИ </TD>
    <TD>приемник:= источник <B>OR</B> приемник </TD>
  <TR>
    <TD>Исключающее ИЛИ </TD>
    <TD>приемник:= источник <B>XOR</B> приемник </TD></TD></TR></TBODY></TABLE>
<P>Особенный интерес представляет операция <B>XOR</B> (Exclusive OR), 
позволяющая после двойного ее применения с одним и тем же источником 
восстановить исходное значение пиксела. В частности, эта операция может 
использоваться для генерации курсоров графического ввода:<BR>(Приемник 
<B>XOR</B> Источник) <B>XOR</B> Источник = <BR>Приемник <B>XOR</B> (Источник 
<B>XOR</B> Источник) = <BR>Приемник <B>XOR</B> 0 = Приемник 
<P>
<CENTER>
<H4>Кодирование данных в видеопамяти</H4></CENTER>
<P>До сих пор рассматривались растровые дисплеи, у которых один пиксел 
соответствует одному элементу видеопамяти (т.н. Bit-Map дисплеи). Очевидно, что 
при этом требуются большие размеры видеопамяти, так для изображения 1024&times;1024 
пикселов при одном байте на пиксел требуется видеопамять в 1 Мбайт. Во многих 
случаях отличие двух соседних пикселов в строке и двух соседних строк мало, что 
в принципе позволяет сэкономить память. Мы здесь рассмотрим два наиболее простых 
способа кодирования - кодирование длин серий, заключающееся учете повторения 
кодов пикселов вдоль строки и клеточное кодирование, представляющее изображение 
разбитым на отдельные фрагменты.<BR>
<P>
<CENTER>
<H4>Кодирование длин серий</H4></CENTER>
<P>К одному из простейших методов кодирования относится кодирование длин серий 
(run length encoding), заключающееся в том, что группа повторяющихся значений 
пикселов кодируется в виде пар из значения пиксела и числа его повторений. 
<P>С помощью такого кодирования достигается сокращение занимаемого объема в 10 и 
более раз. Так в задачах численного моделирования (см. п.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#IntCAD">*</A>) средняя степень 
сжатия составляла 29 раз. Но для некоторых случаев возможно и увеличение объема, 
например, если изображение имеет вид шахматного поля из отдельных пикселов. 
<P>Ясно, что при таком способе кодирования утрачивается соответствие между 
координатой пиксела на экране и адресом в памяти изображения. Доступ к строкам 
возможен путем их последовательного просмотра. Для сокращения времени доступа 
можно использовать списочную структуру, как это показано на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.8">0.9.8</A>. 
<P>
<P><A name=tth_fIg0.8></A><A name=p9.8>
<CENTER><BR><IMG alt="Рисунок 57" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0157.gif">
<P></CENTER>
<CENTER>Рис. 0.2.8: Кодирование изображения длинами серий в виде 
списка</CENTER></A>
<P>
<P>Легко видеть, что у метода кодирования длинами серий, особенно при 
интерактивной работе, имеются следующие недостатки: 
<P><FONT face=symbol>·</FONT> объем занимаемой памяти сильно зависит от 
изображения и резко возрастает при сокращении длины повторения;<BR>
<P><FONT face=symbol>·</FONT> изменение изображения требует исключения и 
создания элементов списка; 
<P><FONT face=symbol>·</FONT> определение длины серии требует просмотра. Для 
каждой строки нужно все описание картины для определения возможного вклада.<BR>
<P>В целом, этот метод кодирования используется не для интерактивной работы, а 
для хранения изображения на диске или для передачи. В частности, кодирование 
длин серий используется в описании изображения для растровых дисплеев фирмы 
Tektronix, и в графическом редакторе Paintbrusch на IBM&nbsp;PC для оперативного 
хранения изображения. 
<P>Понятно, что искажение значения кодового слова при кодировании длин серий 
может привести к распространению искажения до конца строки или даже картины. Для 
защиты от этого в реально используемых схемах кодирования применяется 
периодическая вставка т.н. абсолютных кодов - незакодированных значений 
пикселов. 
<P>
<CENTER>
<H4>Клеточное кодирование</H4></CENTER>
<P>В таком дисплее экран разбит на прямоугольные ячейки (знакоместа). Содержимое 
ячейки кодируется и размещается в видеопамяти по адресу знакоместа. Сокращение 
занимаемого объема памяти достигается за счет меньшей длины кодового слова, по 
сравнению с количеством пикселов в ячейке. Этот метод пригоден для 
алфавитно-цифровых дисплеев и примитивной графики. Так, например, при размере 
ячейки 8&times;8 и 8-ми битовом кодовом слове для дисплея со знакоместами достигается 
восьмикратная экономия памяти по сравнению с Bit-Map дисплеем. Наряду с 
символами и знаками в таком дисплее можно представлять и элементарные вектора. 
Функционально-растровое преобразование для векторов в таком дисплее выполняется 
подбором подходящей комбинации знакомест. 
<P>Такое представление используется в настоящее время только для 
алфавитно-цифровых режимов, так как в одном знакоместе может быть представлен 
либо один знак, либо отрезок и так как цвет и другие параметры отображения 
задаются сразу для всех пикселов знакоместа. 
<P>Использование знакомест для простого текстового дисплея разрешением 512&times;512 
точек при размере знакоместа 8&times;8 и размере матрицы символа 5&times;7 показано на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.9">0.9.9</A>. 
Такая матрица символов позволяет представить три вида шрифта:<BR><FONT 
face=symbol>·</FONT>&nbsp;большие + маленькие символы латиницы,<BR><FONT 
face=symbol>·</FONT>&nbsp;большие + маленькие символы кириллицы,<BR><FONT 
face=symbol>·</FONT>&nbsp;большие символы латиницы + кириллицы. 
<P>
<P><A name=tth_fIg0.9></A><A name=p9.9>
<CENTER><BR><IMG alt="Рисунок 58" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0158.gif">
<P></CENTER>
<CENTER>Рис. 0.2.9: Простой текстовый дисплей. Выдается строка из трех символов 
СНГ. Луч находится на 5-й строке развертки очередной строки символов. Значки · 
отмечают возможные позиции пикселов. Значки <FONT face=symbol>*</FONT> отмечают 
позиции требуемых пикселов.</CENTER></A>
<P>
<P>Кроме аппаратного использования для алфавитно-цифровых режимов, этот метод 
кодирования используется и в программной реализации для сокращения объема 
изображения при передаче или запоминании на диске. В частности, клеточное 
представление изображения используется в растровых дисплеях фирмы Tektronix и 
графических стандартах GKS (Graphical Kernel System) и CGI (Computer Graphics 
Interface). 
<P>
<CENTER>
<H4>Повышение быстродействия подсистемы визуализации</H4></CENTER>
<P>Одним из возможных методов повышения быстродействия системы визуализации 
является растрирование в реальном времени, при котором, как и в векторных 
дисплеях, промежуточное хранение изображения в видеопамяти отсутствует. В этом 
случае для каждого пиксела экрана требуется просканировать описание всего 
изображения, чтобы определить вклад различных объектов картины. Насколько трудна 
эта задача видно из таблицы&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>, когда для 
дисплеев с разрешением 1024&times;768 это надо проделать за 16.5 нс! При введении 
буфера строки на обработку описания сцены требуется уже 20.9 мкс, что все равно 
слишком мало. 
<P>В какой-то мере решить эту задачу можно распараллеливанием. Можно усмотреть 
два способа распараллеливания: 
<P><FONT face=symbol>·</FONT> "процессор на геометрический элемент" - 
распараллеливание на уровне объектов, когда каждому примитиву описания 
изображения соответствует свой генератор (генераторы для векторов, кривых, 
поверхностей и т.д.),<BR>
<P><FONT face=symbol>·</FONT> "процессор на пиксел" - распараллеливание на 
уровне пикселов, когда описание сцены "пропускается" сквозь пикселы и они решают 
что и как видимо.<BR>
<P>В высококлассных, дорогостоящих графических системах в определенной мере 
используются оба способа, причем "процессор на пиксел" использовался только в 
экспериментальных дисплеях. Обычно же специализированный растровый процессор 
обслуживает полосу пикселов. 
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.10">0.9.10</A> приведен 
сравнительный анализ методов распараллеливания. 
<P>
<P><A name=tth_fIg0.10></A><A name=p9.10>
<CENTER><BR><IMG alt="Рисунок 59" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0159.gif">
<P>
<TABLE>
  <TBODY>
  <TR>
    <TD>Объекты : </TD>
    <TD>Параллельно </TD>
    <TD>Последовательно </TD>
  <TR>
    <TD>Пикселы : </TD>
    <TD>Последовательно </TD>
    <TD>Параллельно </TD>
  <TR>
    <TD>Больше объектов : </TD>
    <TD>Больше процессоров </TD>
    <TD>Ускорение процессоров </TD>
  <TR>
    <TD>Больше пикселов : </TD>
    <TD>Ускорение процессоров </TD>
    <TD>Больше процессоров </TD>
  <TR>
    <TD>Пример : </TD>
    <TD>Системы реального </TD>
    <TD>Системы с Z-буфером.</TD>
  <TR>
    <TD></TD>
    <TD>времени </TD>
    <TD></TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<CENTER>Рис. 0.2.10: Сравнение двух подходов к 
мультипроцессированию</CENTER></A>
<P>
<P>При использовании мультипроцессоров главная проблема возникает не при 
преобразовании и разложении картины и не при вычислении пикселов, а при 
формировании полной картины из пикселов, которые сформированы из отдельных 
частей картины. Она должна решаться таким же образом, как и проблема перекрытия 
фрагментов, возникающая при реалистичном представлении трехмерных сцен. 
<P>
<CENTER>
<H3><A name=tth_sEc0.9.3>0.9.3</A>&nbsp;&nbsp;Видеопамять</H3></CENTER>
<P>В ныне существующих растровых дисплеях одной из важнейших компонент, 
обеспечивающих взаимодействие подсистем генерации и отображения, является 
видеопамять. Каждая из подсистем должна иметь свой доступ к видеопамяти и 
большой ширины. Причем доступ от подсистемы отображения для обеспечения 
немерцающего изображения жестко синхронизован с развертками монитора. А доступ 
со стороны подсистемы генерации для достижения высокой интерактивности и больших 
скоростей перемещения объектов желательно исполнять в произвольный момент 
времени. 
<P>Важность специального внимания к разработке видеопамяти проиллюстрируем 
несложным примером. Очевидно, что при попытке одновременного доступа к 
видеопамяти со стороны подсистемы генерации изображения и со стороны 
видеоконтроллера возникает конфликт. В ранних дисплеях, таких как, например, 
система Pericolor 2000, конфликт разрешался простейшим образом: цикл памяти 
отдавался генератору изображения, так как если отдать его видеоконтроллеру, то 
информация в память не будет занесена и картинка исказится. При этом, 
естественно, некоторые точки изображения видеоконтроллером пропускались, так как 
развертка идет непрерывно. Это приводило к характерным помехам в виде "снега" на 
экране. После завершения записи в память снег, конечно, пропадал. Один из 
простых способов решения этой проблемы - разрешение доступа генератору 
изображений во времена обратного хода разверток, когда изображение на экране не 
формируется. Это резко снижало быстродействие системы. 
<P>Видеопамять, как правило, строится на микросхемах динамической памяти с 
произвольным доступом (DRAM - Dinamic Random Access Memory), обладающих большим 
объемом и обычно имеющих организацию N&times;1 разряд (однобитовая память). В 
дальнейшем изложении для упрощения анализа и почти без уменьшения общности, если 
иное не будет оговорено специально, будем рассматривать видеопамять наиболее 
распространенной, т.н. послойной архитектуры. В этом случае видеопамять 
организована в виде индивидуально управляемых битовых слоев с 1 битом на пиксел. 
Увеличение числа бит на пиксел достигается аппаратным комплексированием 
отдельных слоев. Для некоторых областей приложений, таких как, например, 
обработка изображений, более естественна архитектура "в глубину", когда 
видеопамять организована с требуемым числом байт на пиксел. 
<P>Обычные микросхемы памяти имеют время цикла порядка первых сотен наносекунд. 
Из сравнения с таблицей&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A> видно, что это 
заметно превышает время на пиксел, требуемое разверткой. В этой связи память 
организуется таким образом, чтобы за один доступ одновременно считывается 
многобитное слово памяти (16, 32, 64 бита). Следует отметить, что число 
микросхем памяти, требуемое для организации широкого доступа, обычно дает 
суммарный объем памяти больший, чем требуется из соображений разрешения. 
Рассмотрим, например, память для дисплея 1024&times;768 пикселов в суммарным объемом в 
786&nbsp;432 бит. Требуемое время доступа к пикселу составляет 16.52 нс (см. 
таблицу <A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>). 
Используя микросхемы памяти организации 64К&times;1 бит с временем доступа 340 нс, 
получаем, что для достижения требуемого времени доступа надо одновременно 
запустить не менее 21 микросхемы. Суммарный объем памяти составит 21&times;64&times;1024 = 
1&nbsp;376&nbsp;256 бит, что почти в два раза больше чем надо. На самом деле еще 
хуже, так как обычно ширину доступа выбирают их ряда 8, 16, 24 и т.д. Тогда 
получим суммарный объем памяти 24&times;64&times;1024 = 1&nbsp;572&nbsp;864 бита, что ровно 
в 2 раза больше. 
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.11">0.9.11</A> показан простой 
вариант для дисплея 512&times;512&times;1 бит с 16 корпусами 16К&times;1 400 нс динамической 
памяти с произвольным доступом (см. таблицу&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>). Под управлением 
тактового генератора все микросхемы одновременно читаются и со скоростью <FONT 
face=symbol>»</FONT> 10.3 мегапикселов/с загружают данные в 16-ти разрядный 
сдвиговый регистр. Видно что память двухпортовая, т.е. шины данных, адреса и 
управления подключаются и от видеоконтроллера и от генератора изображений. 
<P>
<P><A name=tth_fIg0.11></A><A name=p9.11>
<CENTER><BR><IMG alt="Рисунок 60" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0160.gif">
<P></CENTER>
<CENTER>Рис. 0.2.11: Простейший растровый дисплей</CENTER></A>
<P>
<P>При одновременном доступе ко всем 16 микросхемам выдаются 16 пикселов, чем 
обеспечивается время отображения порядка 1600&nbsp;нс. Так как цикл памяти в 
400&nbsp;нс, то видеоконтроллеру требуется только около 25% от имеющегося в 
наличии суммарного времени доступа. Остаток, включая и время обратного хода, 
может быть использован подсистемой генерации изображения для записи в 
видеопамять. 
<P>
<P><A name=tth_fIg0.12></A><A name=p9.12>
<CENTER><BR><IMG alt="Рисунок 61" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0161.gif">
<P></CENTER>
<CENTER>Рис. 0.2.12: Распределение цикла памяти между видеоконтроллером и 
генератором изображения для системы 512&times;512&times;1, c 16&times;16К&times;1 DRAM</CENTER></A>
<P>
<P>Замена этих 16 микросхем памяти на 4 микросхемы 64К&times;1 не улучшит, а ухудшит 
показатели системы. Ширина доступа станет 4 пиксела, т.е. обеспечится время 
отображения в 400&nbsp;нс, а время цикла памяти остается порядка 400&nbsp;нс, 
так что на доступ от генератора изображений останется только время обратного 
хода. 
<P>Таким образом, задачу увеличения разрешения дисплея применением микросхем 
большего объема решить нельзя. Будет требоваться все увеличивающаяся ширина 
доступа, так как цикл динамической памяти становится много большим времени 
отображения пиксела (см. таблицу <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.1">0.9.1</A>). С другой 
стороны, как было ранее показано в примере для дисплея 1024&times;768, объем памяти, 
определяемый шириной доступа становится все больше объема, требуемого 
разрешением. 
<P>Требуются иные технические решения. 
<P><U><I>A.&nbsp;Использование статической памяти.</U></I> Радикальное и 
дорогостоящее решение. Времена доступа к статической памяти в 3-7 раз меньше, 
чем у динамической, энергопотребление в 1.3-5.5 раз больше, корпуса б\'ольших 
размеров, стоимость выше. Не требуется регенерации памяти. При некоторых 
эксплуатационных требованиях, например, повышенной радиационной стойкости, это 
единственное решение. Для иллюстрации в таблице&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t9.2">0.9.2</A> приведены 
некоторые параметры нескольких микросхем памяти одинакового объема. 
<P>
<P><A name=tth_tAb0.9.2>
<CENTER>Таблица 0.9.2: Параметры некоторых микросхем памяти</CENTER></A>
<CENTER>
<P><A name=t9.2>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD></TD>
    <TD align=middle>Тип </TD>
    <TD align=middle>Объем </TD>
    <TD align=middle>Время </TD>
    <TD align=middle>Мощн. </TD>
    <TD align=middle>Кор- </TD>
    <TD align=middle>Цена </TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle>бит </TD>
    <TD align=middle>нс </TD>
    <TD align=middle>мвт </TD>
    <TD align=middle>пус </TD>
    <TD align=middle></TD>
  <TR>
    <TD>К565РУ5 </TD>
    <TD align=middle>Динамич. </TD>
    <TD align=middle>64Кх1 </TD>
    <TD align=middle>240-450 </TD>
    <TD align=middle>360/30 </TD>
    <TD align=middle>16 </TD>
    <TD align=middle></TD>
  <TR>
    <TD>К132РУ10А </TD>
    <TD align=middle>Статич. </TD>
    <TD align=middle>64Кх1 </TD>
    <TD align=middle>75 </TD>
    <TD align=middle>460/165 </TD>
    <TD align=middle>22 </TD>
    <TD align=middle></TD>
  <TR>
    <TD>К537РУ17 </TD>
    <TD align=middle>Статич. </TD>
    <TD align=middle>8Кх8 </TD>
    <TD align=middle>200 </TD>
    <TD align=middle>470/22 </TD>
    <TD align=middle>18 </TD>
    <TD align=middle></TD></TD></TR></TBODY></TABLE></A></CENTER>
<P>
<P><U><I>Б.&nbsp;&nbsp;Использование двойной буферизации.</U></I> Также 
недешевое, технически сложное решение. Используется два комплекта видеопамяти. В 
то время как идет отображение из одного буфера, второй буфер целиком отдается 
генератору изображений. Во время обратного хода кадровой развертки буфера 
меняются местами. 
<P><U><I>В.&nbsp;Использование микросхем иной организации памяти.</U></I> Взамен 
микросхем побитовой организации nKx1, используются микросхемы nKxt, например, 
16Кx4, 32Кx8. Эти микросхемы можно использовать двояко: 
<P>1.&nbsp;В одном слове микросхемы размещаются t пикселов. Очевидно, что 
сокращение времени доступа для видеовывода пропорционально длине слова. 
Недостаток - отдельная точка не может адресоваться индивидуально. Запись точки 
будет заключаться в вычислении адреса слова памяти, в которой она содержится; в 
определении позиции точки в слове; чтении слова; модификации требуемых разрядов; 
записи слова. 
<P>2.&nbsp;Одно слово микросхемы отводится под 1 пиксел, соответствующей 
глубины. До сих пор рассматривали дисплеи "послойной" организации, в которых для 
получения требуемой глубины пиксела набирается требуемое число слоев. Этот же 
поход - построение видеопамяти "в глубину". Рассмотрим реализацию видеопамяти 
1024&times;1024&times;4. Для такого объема требуется 64 микросхемы 64К&times;1. Полагая, что из 
соотношения между длительностью обработки пиксела и временем цикла микросхемы 
следует одновременно запускать 16 микросхем получим, что при использовании 
микросхем 64К&times;1 за один доступ к памяти запрашивается 16 пикселов по 4 бита 
каждый, в то время как при использовании микросхем 16К&times;4 того же самого объема в 
64 Кбит будет запрошено уже 64 пиксела по 4 бита. Таким образом будет достигнуто 
лучшее соотношение между временами доступа видеоконтроллера и генератора 
изображений. Относительным недостатком такого подхода можно считать 
невозможность индивидуальной адресации отдельной битовой плоскости. Но такая 
возможность и не нужна для многих приложений. Для тех же приложений где это 
требуется отдельные слои могут защищаться с помощью программно загружаемой 
маски, как это, например, было сделано в дисплеях Гамма-4 и Гамма-Т [<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#mbib14" name=CITEmbib14>10</A>]. 
Если разряды, разрешенные к модификации в регистре маски отмечаются 1, то его 
использование можно представить следующим образом: 
<P>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD align=right>V:=</TD>
    <TD>((V&nbsp;<B>OR</B>&nbsp;M)&nbsp;<B>XOR</B>&nbsp;M)</TD>
    <TD><B>OR</B></TD>
    <TD>(N&nbsp;<B>AND</B>&nbsp;M)</TD>
  <TR>
    <TD align=right></TD>
    <TD><FONT face=symbol>|</FONT> <FONT face=symbol>|</FONT> </TD>
    <TD></TD>
    <TD><FONT face=symbol>|</FONT> <FONT face=symbol>|</FONT></TD>
  <TR>
    <TD align=right></TD>
    <TD>Зачистка разрядов в </TD>
    <TD></TD>
    <TD>Вырезание по </TD>
  <TR>
    <TD align=right></TD>
    <TD>пикселе видеопамяти </TD>
    <TD></TD>
    <TD>маске разрядов в </TD>
  <TR>
    <TD align=right></TD>
    <TD></TD>
    <TD></TD>
    <TD>заносимом пикселе</TD></TD></TR></TBODY></TABLE></CENTER>
<P>где V - значение пиксела в видеопамяти, N - заносимый пиксел, <BR>M - регистр 
маски. 
<P><U><I>Г.&nbsp;Использование VRAM.</U></I> VRAM (Video Random Access Memory) 
[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#mbib19" 
name=CITEmbib19>15</A>] была разработана для решения проблемы конкуренции за 
циклы памяти между видеорегенерацией и модификацией изображения при их 
одновременном выполнении. 
<P>VRAM представляет собой двухпортовую динамическую память, имеющую с своем 
составе:<BR><FONT face=symbol>·</FONT>&nbsp;собственно массив памяти 256&times;256&times;1 
(64К&times;1) или 256&times;256&times;4;<BR><FONT face=symbol>·</FONT>&nbsp;256 или 1024-битовый 
сдвиговый регистр. 
<P>Каждая из этих двух частей имеет собственные сигналы ввода/вывода и 
управления. Сдвиговый регистр загружается строкой из массива памяти за один 
цикл. После загрузки сдвиговый регистр независим от массива памяти и может 
тактироваться с максимальной частотой до 25 МГц. После требования всего одного 
цикла для записи 256 или 1024 бит VRAM готова одновременно и для 
видеорегенерации и для обновления изображения. Время на доступ для отображения 
составляет менее 1.5% времени доступа. В системах же базирующихся на DRAM эти 
затраты достигают до 60%. 
<P>На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.13">0.9.13</A> представлена 
структура VRAM микросхемы TMS4161 фирмы Texas Instruments. 
<P>
<P><A name=tth_fIg0.13></A><A name=p9.13>
<CENTER><BR><IMG alt="Рисунок 62" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0162.gif">
<P></CENTER>
<CENTER>Рис. 0.2.13: Структура VRAM</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.10>0.10</A>&nbsp;&nbsp;Другие типы дисплеев</H3></CENTER>
<P>В данном разделе рассмотрено некоторые другие, менее распространенные типы 
дисплеев - дисплеи на запоминающей трубке, дисплеи на плазменной панели, дисплеи 
с жидкокристаллическим индикатором, электролюминисцентные дисплеи и дисплеи с 
эмиссией полем. 
<P>В дальнейшем планируется включить разделы по новым, уже появляющимся на рынке 
технологиям, таким как органические электролюминисцентные дисплеи и дисплеи с 
поверхностным эммитированием заряда (surface conduction emitter displays). 
<P>
<CENTER>
<H3><A name=tth_sEc0.10.1>0.10.1</A>&nbsp;&nbsp;Дисплеи на запоминающей 
трубке</H3><A name=StorageTube></A></CENTER>
<P>Как было отмечено во введении, запоминающие электронно-лучевые трубки - ЗЭЛТ 
(рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p10.01">0.10.1</A>) 
(Direct View Storage Tube - DVST) появились в конце 60-х годов. Основное их 
свойство - возможность сохранения изображения прямо на экране достаточно 
длительное время (до одного часа). Электронный луч от записывающего прожектора 
строит изображение на запоминающей сетке, представляющей собой мелкую 
проволочную сетку, покрытую диэлектриком. 
<P>
<P><A name=tth_fIg0.1></A><A name=p10.01>
<CENTER><BR><IMG alt="Рисунок 63" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0163.gif">
<P></CENTER>
<CENTER>Рис. 0.3.1: Схема запоминающей электронно-лучевой трубки</CENTER></A>
<P>
<P>Перед началом нового построения старое изображение стирается для чего 
запоминающая сетка равномерно отрицательно заряжается подачей на нее импульса 
длительностью около 0.5 с. При этом экран неприятно вспыхивает. 
<P>Изображение записывается высокоскоростными электронами записывающего 
прожектора, которые выбивают из запоминающей сетки электроны, захватываемые 
положительно заряженным коллектором. В результате на запоминающей сетке 
создается скрытое изображение в виде областей относительного положительного 
заряда. Скорость перемещения записывающего луча с сохранением эффекта 
запоминания не превышает 200 м/с. Т.е. диагональ обычного дисплея 
прорисовывается за время <FONT face=symbol>»</FONT> 2 мс, что в 100 медленнее 
чем на векторных дисплеях. 
<P>Воспроизведение запомненного изображения осуществляется с помощью потока 
несфокусированных низкоскоростных проявляющих электронов. Пластины коллиматора 
изгибают траектории проявляющих электронов таким образом, чтобы они подходили к 
запоминающей сетке под прямым углом. Попадая на участки относительного 
положительного заряда сетки, проявляющие электроны проходят сквозь сетку и 
вызывают свечение люминофора. Остальные проявляющие электроны отталкиваются и 
попадают на коллектор. 
<P>При уменьшении энергии записывающего луча возможно отображение без 
запоминания, когда луч возбуждает люминофор, но не изменяет распределение заряда 
на запоминающей сетке. Это используется, в основном, с вспомогательными целями - 
для вывода перемещающегося курсора, для отображения поясняющих надписей и 
рисунков. 
<P>Итак, основные виды работ ЗЭЛТ следующие:<BR>1. Стирание изображения.<BR>2. 
Запись изображения.<BR>3. Воспроизведение запомненного изображения.<BR>4. 
Отображение без запоминания. 
<P>Достоинства ЗЭЛТ:<BR><FONT face=symbol>·</FONT>&nbsp;большое разрешение (до 
4096&times;4096 при 19 дюймах),<BR><FONT face=symbol>·</FONT>&nbsp;отсутствие 
мерцания,<BR><FONT face=symbol>·</FONT>&nbsp;низкие требования к скорости 
отклоняющей системы,<BR><FONT face=symbol>·</FONT>&nbsp;малая стоимость. 
<P>Недостатки ЗЭЛТ:<BR><FONT face=symbol>·</FONT>&nbsp;обычно невозможно 
выборочное стирание,<BR><FONT face=symbol>·</FONT>&nbsp;мал контраст 
изображения,<BR><FONT face=symbol>·</FONT>&nbsp;обычно черно-белое 
изображение,<BR><FONT face=symbol>·</FONT>&nbsp;небольшая скорость работы. 
<P>Дисплеи на ЗЭЛТ представляют собой упрощенную модель векторного дисплея. Так 
как запоминающая трубка - устройство непосредственного хранения изображения, то 
не требуется периодического воспроизведения (регенерации) изображения. 
Достаточно однократного построения картинки. Вместе с тем скорости построения 
существенно ниже, однако следует заметить, что фактическое разрешение дисплеев 
на запоминающей трубке до 4096&times;4096 не достигнуто пока ни каким другим дисплеем. 

<P>
<CENTER>
<H3><A name=tth_sEc0.10.2>0.10.2</A>&nbsp;&nbsp;Дисплеи с плазменный 
панелью</H3><A name=PlasmaPanel></A></CENTER>
<P>Дисплеи с плазменной панелью (Plasma Display Panels - PDP) используют явление 
свечения при разряде в газе. Как показано на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p10.02">0.10.2</A>, первые 
плазменные панели состояли из параллельных покрывающих прозрачных пластин, 
пространство между которыми заполнено газом (на основе неона) под атмосферным 
давлением. Между покрывающими пластинами находится стеклянная пластина с 
отверстиями (маска), разделяющая газ на растр из маленьких ячеек. На покрывающих 
пластинах с их внутренних сторон нанесены группы прозрачных полосок параллельных 
проводников, находящихся напротив отверстий в маске. Проводники на одной 
пластине перпендикулярны проводникам на другой пластине. Таким образом каждая 
ячейка представляет собой нечто вроде маленькой неоновой лампочки (на самом деле 
- тиратрона). 
<P>
<P><A name=tth_fIg0.2></A><A name=p10.02>
<CENTER><BR><IMG alt="Рисунок 64" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0164.gif">
<P></CENTER>
<CENTER>Рис. 0.3.2: Схема плазменной панели</CENTER></A>
<P>
<P>Если для незажженной ячейки между проводниками нарастает напряжение, то при 
достижении напряжения зажигания U<SUB>з</SUB> (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#pdp_vax">0.10.3</A>) ячейка 
загорается. Газ в ячейке ионизируется, в ячейке возникает плазменный столбик, 
ток через нее заметно увеличивается, а напряжение падает до напряжения горения 
U<SUB>г</SUB>, заметно меньшего, чем напряжение загорания. При уменьшении 
приложенного напряжения до напряжения потухания U<SUB>п</SUB> разряд в ячейке 
прекращается и она гаснет за время порядка 20 мкс, за которое все ионы попадут 
на отрицательный электрод. 
<P>
<P><A name=tth_fIg0.3></A><A name=pdp_vax>
<CENTER><BR><IMG alt="Рисунок 65" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0165.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.3: Вольтамперная характеристика разряда в газе</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.4></A><A name=pdp_time>
<CENTER><BR><IMG alt="Рисунок 66" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0166.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.4: Временная диаграмма работы плазменной ячейки</CENTER></A>
<P>
<P>В зависимости от приложенного напряжения, ячейки панели могут находиться в 
трех состояниях: 
<P><FONT face=symbol>·</FONT> отображение содержимого панели. Поддерживающее 
напряжение между проводниками покрывающих пластин равно среднему напряжению 
горения U<SUB>c</SUB> (см. рис&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#pdp_vax">0.10.3</A>). В этом 
случае горящие ячейки продолжают гореть и образуют светящиеся точки на 
изображении, а не горящие не зажигаются;<BR>
<P><FONT face=symbol>·</FONT> включение точки. К поддерживающему напряжению 
между проводниками, пересекающимися над требуемой ячейкой, добавляется такой 
импульс поджига, что достигается напряжение зажигания U<SUB>з</SUB> и ячейка 
загорается (если она еще не горела); 
<P><FONT face=symbol>·</FONT> стирание точки. К поддерживающему напряжению между 
проводниками, пересекающимися над требуемой ячейкой, добавляется такой импульс 
гашения, что достигается напряжение потухания U<SUB>п</SUB> и ячейка выключается 
(если она горела).<BR>
<P>Более поздние плазменные панели не содержат маски и растровых анодов. Она 
также состоят из двух параллельных стеклянных пластин, на внутренних 
поверхностях которых нанесены взаимно перпендикулярные группы проводников, 
формирующие растровые ячейки панели. Проводники покрыты диэлектрической пленкой 
и между ними приложено высокочастотное напряжение, недостаточное для зажигания, 
но достаточное для горения (поддерживающее напряжение). При высокочастотном 
питании газ ведет себя так, как будто он разделен на отдельные ячейки. Частота 
питающего напряжения такова, что хотя разряд при малых напряжениях и 
прекращается, но ионы не успевают рекомбинировать, поэтому при возрастании 
напряжения разряд возобновляется и создается впечатление непрерывного свечения 
точки. 
<P>Для включения негорящей ячейки к поддерживающему напряжению добавляется 
импульс поджига, достаточный для зажигания. 
<P>Для выключения горящей ячейки к поддерживающему напряжению добавляется такой 
импульс, что до достижения очередного максимума напряжение будет таково, что 
ионы успеют рекомбинировать и ячейка не загорится. 
<P>Известны и другие конструкции плазменных панелей, например, для вывода 
цветных полутоновых изображений. В таких панелях отдельный пиксел представляет 
собой триаду газоразрядных тиратронов, имеющих общий электрод для поддержания 
разряда в смеси редких газов типа He и Xe (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#pdp_cell">0.10.5</A>). 
Возникающее при этом ультрафиолетовое (UV) излучение возбуждает люминофоры, 
которыми покрыты торцы тиратронов. Эти люминофоры имеют соответствующие 
фотолюминесцентные характеристики и излучают красный, зеленый и синий цвета. 
Эффект изменения яркости моделируется за счет зажигания/поджигания разряда с 
требуемой (не слишком большой) частотой. 
<P>
<P><A name=tth_fIg0.5></A><A name=pdp_cell>
<CENTER><BR><IMG alt="Рисунок 67" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0167.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.5: Ячейка цветного дисплея с плазменной панелью</CENTER></A>
<P>
<P>Дисплеи на плазменной панели в некотором смысле идеальные устройства. Имеются 
все важнейшие качества, вплоть до цветовых возможностей: 
<P><FONT face=symbol>·</FONT> большой угол наблюдения (до 160<SUP><FONT 
face=symbol>°</FONT></SUP>), так как свет излучается во всех направлениях,<BR>
<P><FONT face=symbol>·</FONT> изображение может запоминаться, выборочно 
стираться и строиться снова,<BR>
<P><FONT face=symbol>·</FONT> поточечная адресация позволяет использовать как 
векторные, так и растровые принципы построения изображения,<BR>
<P><FONT face=symbol>·</FONT> панель плоская, поэтому дисплей может иметь много 
меньшие размеры, чем дисплей на электронно-лучевой трубке,<BR>
<P><FONT face=symbol>·</FONT> картинка, независимо от ее сложности и структуры 
полностью лишена мерцания,<BR>
<P><FONT face=symbol>·</FONT> информация от внешних источников изображений, 
например, слайдов или фильмов может проецироваться сквозь этот дисплей, 
обеспечивая таким способом простое смешение с картинками, сформированными 
компьютером.<BR>
<P>К сожалению соотношение цена/возможности хуже, чем у дисплеев на 
электронно-лучевых трубках. Это в особенности касается разрешения, так как 
разрядные ячейки не могут быть сделаны особенно малыми, что обычно приводит к 
шагу пиксела порядка 1 мм. Предельное значение шага - до 25 ячеек на сантиметр. 
Это создает проблемы при использовании PDP в ТВВЧ и в качестве мониторов рабочих 
станций. В отличие от этого ЭЛТ, жидкокристаллические дисплеи и дисплеи с 
эмиссией полем могут иметь шаг пиксела всего 0.2 мм. Другие недостатки - 
относительно большое время включения/выключения - порядка 20 мкс/точку, 
относительно высокое напряжения питания - десятки вольт и эффективность, так 
40-дюймовый PDP обычно потребляет приблизительно 300 Вт, в то время как пиковая 
яркость - только 1/3 таковой от ЭЛТ, потребляющей около 150 Вт. 
<P>В настоящее время дисплеи на плазменной панели в основном используются либо в 
особых условиях применения (высокие вибрации, низкие температуры) либо в 
качестве экранов коллективного просмотра. Лидерами в серийном производстве PDP 
являются фирмы Фуджицу и Хитачи параметры некоторых дисплеев этих фирм приведены 
в табл.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#pdp_tbl">0.10.1</A>. 
<P>
<P><A name=tth_tAb0.10.1>
<CENTER>Таблица 0.10.1: Параметры дисплеев с плазменной панелью</CENTER></A>
<CENTER><A name=pdp_tbl>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD>Параметр</TD>
    <TD align=middle colSpan=2>Хитачи</TD>
    <TD align=middle colSpan=2>Фуджицу</TD>
  <TR>
    <TD>
  <TR>
    <TD>Диагональ </TD>
    <TD>25" </TD>
    <TD>41" </TD>
    <TD>21" </TD>
    <TD>42" </TD>
  <TR>
    <TD>Разрешение </TD>
    <TD>1024&times;768</TD>
    <TD>1024&times;768 </TD>
    <TD>640&times;480 </TD>
    <TD>852&times;480 </TD>
  <TR>
    <TD>Шаг пикселов, </TD>
    <TD></TD>
    <TD>0.27 (гориз.)</TD>
    <TD></TD>
    <TD></TD>
  <TR>
    <TD>мм </TD>
    <TD></TD>
    <TD>0.81 (верт.) </TD>
    <TD></TD>
    <TD></TD>
  <TR>
    <TD>Оттенков </TD>
    <TD></TD>
    <TD>262&nbsp;144 </TD>
    <TD>262&nbsp;144 </TD>
    <TD>16.7млн </TD>
  <TR>
    <TD>Бит R&times;G&times;B </TD>
    <TD></TD>
    <TD>6&times;6&times;6 </TD>
    <TD>6&times;6&times;6</TD>
    <TD>8&times;8&times;8</TD>
  <TR>
    <TD>Контраст </TD>
    <TD></TD>
    <TD>300:1 </TD>
    <TD></TD>
    <TD></TD>
  <TR>
    <TD>Яркость, кд/м<SUP>2</SUP> </TD>
    <TD></TD>
    <TD></TD>
    <TD>180 </TD>
    <TD>300 </TD>
  <TR>
    <TD>Угол обзора, <SUP><FONT face=symbol>°</FONT></SUP></TD>
    <TD>160<SUP><FONT face=symbol>°</FONT></SUP></TD>
    <TD>160<SUP><FONT face=symbol>°</FONT></SUP> </TD>
    <TD>160<SUP><FONT face=symbol>°</FONT></SUP></TD>
    <TD>160<SUP><FONT face=symbol>°</FONT></SUP></TD>
  <TR>
    <TD>Стандарты </TD>
    <TD>XGA, SVGA, </TD>
    <TD>XGA </TD>
    <TD>VGA, </TD>
    <TD>видео и </TD>
  <TR>
    <TD></TD>
    <TD>VGA, видео </TD>
    <TD></TD>
    <TD>видео </TD>
    <TD>данные </TD>
  <TR>
    <TD>Экран, мм </TD>
    <TD>508&times;381 </TD>
    <TD>976&times;796 </TD>
    <TD>422&times;314 </TD>
    <TD>920&times;518 </TD>
  <TR>
    <TD>Толщина, мм </TD>
    <TD>80 </TD>
    <TD>150 </TD>
    <TD>32 </TD>
    <TD>75 </TD>
  <TR>
    <TD>Вес </TD>
    <TD>15 кг </TD>
    <TD>37 кг </TD>
    <TD>10.6 lbs </TD>
    <TD>40 lbs </TD>
  <TR>
    <TD>Электропитание </TD>
    <TD></TD>
    <TD>100 Вт </TD>
    <TD></TD>
    <TD></TD></TD></TR></TBODY></TABLE></A></CENTER>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.10.3>0.10.3</A>&nbsp;&nbsp;Дисплеи с жидкокристаллическим 
индикатором</H3><A name=LiquidCrystal></A></CENTER>
<P>Австрийский ботаник Friedrich Reinitzer открыл жидкие кристаллы в 1888 г. В 
1963 г. Williams в фирме RCA исследовал поляризационные эффекты в жидких 
кристаллах. В 1973 г. был разработан первый дисплей на жидких кристаллах (EL 
8025) для переносной ЭВМ. 
<P>Жидкие кристаллы находятся в некотором числе фаз, промежуточных между твердым 
и жидким состояниями. Молекулы ЖК являются стрежнеобразными органическими 
соединениями (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lc_formu">0.10.6</A>) и находятся 
в различных ориентациях в этих фазах (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lc_phases">0.10.7</A>). 
<P>
<P><A name=tth_fIg0.6></A><A name=lc_formu>
<CENTER><BR><IMG alt="Рисунок 68" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0168.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.6: Структурная формула жидкого кристалла</CENTER></A>
<P>
<P>В изоторопической фазе, которая является жидкой фазой при повышении 
температуры, и позиция и ориентация молекул случайны. 
<P>Если температура понижается, то в ЖК совершаются переходы через различные 
фазы, одна из которых - так называемая нематическая фаза используется в дисплеях 
(twisted nematic liquid crystal displays - дисплеи на закрученных нематических 
жидких кристаллах). В этой фазе позиции молекул все еще случайны, но все они 
ориентированы в одном направлении. 
<P>Если температура понижается далее, то молекулы получают периодическую 
упорядоченность в слоях (смектическая фаза). Таким образом при понижении 
температуры в ЖК увеличивается упорядоченность и в конце концов наступает 
твердое состояние. 
<P>
<P><A name=tth_fIg0.7></A><A name=lc_phases>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=middle><IMG alt="Рисунок 69" 
      src="Учебное пособие Вводный курс компьютерной графики_files/kg0169.gif">
      <P>Изотропическая фаза</P></TD>
    <TD align=middle><IMG alt="Рисунок 70" 
      src="Учебное пособие Вводный курс компьютерной графики_files/kg0170.gif">
      <P>Нематическая фаза</P></TD>
    <TD align=middle><IMG alt="Рисунок 71" 
      src="Учебное пособие Вводный курс компьютерной графики_files/kg0171.gif">
      <P>Смектическая фаза</P></TD></TR></TBODY></TABLE>
<CENTER>Рис. 0.3.7: Фазы жидкого кристалла</CENTER></A>
<P>
<P>Вследствие оптической и электрической анизотропии ЖК-молекул коэффициент 
преломления зависит от направления поляризации света относительно оси молекулы. 
Это свойство используется для поворота поляризации при прохождении света через 
закрученную ЖК-структуру. 
<P>Известно, что свет не проходит через два скрещенных поляризатора 
(рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#polariz">0.10.8</A>). 
<P>
<P><A name=tth_fIg0.8></A><A name=polariz>
<CENTER><BR><IMG alt="Рисунок 72" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0172.gif">
<P>
<P></CENTER>
<CENTER><BR><IMG alt="Рисунок 73" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0173.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.8: Прохождение неполяризованного света через 
поляризаторы</CENTER></A>
<P>
<P>Молекулы в нематической фазе принудительно закручиваются за счет их помещения 
между двумя стекляными пластинами, каждая из которых имеет линейчатую 
гравировку, перпендикулярную к другой. На поверхности стекла молекулы вынужденно 
размещаются вдоль гравировки, а так как гравировки взаимно перпендикулярны, то 
между пластинами формируются перекрученные цепочки ЖК-молекул (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lc_orien">0.10.9</A>). 
<P>
<P><A name=tth_fIg0.9></A><A name=lc_orien>
<CENTER><BR><IMG alt="Рисунок 74" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0174.gif">
<P></CENTER>
<CENTER>Рис. 0.3.9: Закрученный нематический жидкий кристалл</CENTER></A>
<P>
<P>Расстояние между пластинами составляет порядка 10 мкм. В зависимости от 
расстояния между пластинами и типа ЖК-кристалла закрученность составляет обычно 
90<SUP><FONT face=symbol>°</FONT></SUP> или 270<SUP><FONT 
face=symbol>°</FONT></SUP> (twisted nematics и super-twisted nematics, TN и 
STN). 
<P>При приложении электрического поля молекулы, вследствие их анизотропии, 
ориентируются вдоль поля. В этом случае цепочки раскручиваются и пропадает 
возможность поворота плоскости поляризации (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#lc_switc">0.10.10</A>). 
<P>
<P><A name=tth_fIg0.10></A><A name=lc_switc>
<CENTER><BR><IMG alt="Рисунок 75" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0175.gif">
<P></CENTER>
<CENTER>Рис. 0.3.10: Электронно-оптическое переключение жидким 
кристаллом</CENTER></A>
<P>
<P>ЖК-дисплеи имеют два таких перекрещенных поляризатора с перекрученным жидким 
кристаллом между ними (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p10.03">0.10.11</A>). Благодаря 
вращению плоскости поляризации ЖК-цепочками свет проходит и дисплей становится 
ярким. При приложении электрического поля к взаимноперпендикулярным прозрачным 
электродам, нанесенных на внутренние стороны пластин, эффект поворота плоскости 
поляризации пропадает и соответствующий пиксел становится темным. 
<P>
<P><A name=tth_fIg0.11></A><A name=p10.03>
<CENTER><BR><IMG alt="Рисунок 76" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0176.gif">
<P></CENTER>
<CENTER>Рис. 0.3.11: Схема жидкокристаллического индикатора</CENTER></A>
<P>
<P>При выключении напряжения кристалл за время порядка от первых десятков до 
сотен миллисекунд возвращается в исходное состояние. 
<P>Важной особенностью жидких кристаллов является то, что при протекании 
постоянного тока кристалл подвергается электролитической диссоциации и теряет 
свои свойства, поэтому жидкокристаллические индикаторы запитываются переменным 
напряжением, с постоянной составляющей не более десятков милливольт. 
<P>В простых индикаторах (с пассивной матрицей) ячейки растра, составляющие 
изображение, запитываются последовательно. Для этого на проводники, 
пересекающиеся над нужной точкой подают напряжение. В результате точка 
подсвечивается. Благодаря большому времени релаксации и достаточно высокой 
частоте сканирования ( <FONT face=symbol>»</FONT> 1 мс на строку) изображение не 
мерцает. Естественно, что такие индикаторы медленны. Цветные ЖК-индикаторы 
используют три ячейки растра для формирования пиксела. Яркость свечения для 
каждой из компонент опреределяет цветовой оттенок. 
<P>Для решения проблемы быстродействия были разработаны ЖК-дисплеи с активной 
матрицей, в которых каждый пиксел снабжается независимо управляемым 
тонкопленочным транзистором (thin-film transistor, TFT). Такие дисплеи 
значительно более быстродействующие, но и имеют большую стоимость, так как для 
цветного дисплея 800&times;600 надо иметь 1&nbsp;440&nbsp;000 бездефектных 
транзисторов. Однако современные достижения в технологии позволили довести цену 
ЖК-дисплея с активной матрицей до $600. 
<P>В целом ЖК-индикаторы имеют следующие основные характеристики:<BR><FONT 
face=symbol>·</FONT>&nbsp;толщина <FONT face=symbol>~ </FONT>1/6 ЭЛТ,<BR><FONT 
face=symbol>·</FONT>&nbsp;вес <FONT face=symbol>~ </FONT>1/5 ЭЛТ,<BR><FONT 
face=symbol>·</FONT>&nbsp;энергопотребление &lt; 1/4 ЭЛТ,<BR><FONT 
face=symbol>·</FONT>&nbsp;отсутствует мерцание,<BR><FONT 
face=symbol>·</FONT>&nbsp;отсутствуют геометрические искажения,<BR><FONT 
face=symbol>·</FONT>&nbsp;отсутствует паразитное излучение,<BR><FONT 
face=symbol>·</FONT>&nbsp;цена <FONT face=symbol>~ </FONT>3&times;ЭЛТ,<BR><FONT 
face=symbol>·</FONT>&nbsp;небольшая контрастность изображения <FONT 
face=symbol>~ </FONT>1:100),<BR><FONT face=symbol>·</FONT>&nbsp;небольшая 
яркость <FONT face=symbol>~ </FONT>200 cd/m<SUP>2</SUP>,<BR><FONT 
face=symbol>·</FONT>&nbsp;малый угол просмотра <FONT face=symbol>~ 
</FONT>50<SUP><FONT face=symbol>°</FONT></SUP>,<BR><FONT 
face=symbol>·</FONT>&nbsp;небольшая скорость работы,<BR><FONT 
face=symbol>·</FONT>&nbsp;ограниченный температурный диапазон работы.<BR>
<P>Следует ожидать, что с развитием технологии недостатки будут устраняться. 
<P>
<CENTER>
<H3><A name=tth_sEc0.10.4>0.10.4</A>&nbsp;&nbsp;Дисплеи с электролюминисцентным 
индикатором</H3><A name=ElectroLuminisc></A></CENTER>
<P>В 1937 г. был открыт эффект электроминисценции, заключающийся в излучении 
света легированного марганцем ZnS под воздействием электрического поля высокой 
напряженности (<FONT face=symbol> ~ </FONT>10<SUP>6</SUP> в/см). 
<P>В 1981 г. началось практическое использование электролюминисцентных 
индикаторов. Они обеспечивают очень высокие контрастность и яркость при малых 
инерционности и толщине и высокой прочности. Срок их службы - более 120&nbsp;000 
часов, диапазон рабочих температур от -45<SUP><FONT face=symbol>°</FONT></SUP>C 
до +65<SUP><FONT face=symbol>°</FONT></SUP>C, угол обзора до 160<SUP><FONT 
face=symbol>°</FONT></SUP>. 
<P>Панель электролюминисцентного индикатора состоит из стеклянной пластины, 
прозрачных проводников из окиси олова, чередующихся слоев изолятора и люминофора 
и темных проводников, перпендикулярных прозрачным (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p10.04">0.10.12</A>). 
<P>Люминофор светится под воздействием переменного напряжения, прикладываемого к 
электродам строк и столбцов. Это переменное напряжение возбуждает свободные 
электроны в кристаллической структуре люминофора. Возбужденные свободные 
электроны, сталкиваясь с атомами примеси, переводят их электроны на более 
высокие энергетические уровни. При возврате в свое обычное состояние они 
испускают фотоны в видимом спектре. 
<P>Люминофор, применяемый в электролюминисцентных индикаторах, требует довольно 
высокого напряжения (170-210&nbsp;В), что требует применения более дорогостоящих 
микросхем управления, чем для жидкокристаллических индикаторов. 
<P>
<P><A name=tth_fIg0.12></A><A name=p10.04>
<CENTER><BR><IMG alt="Рисунок 77" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0177.gif">
<P></CENTER>
<CENTER>Рис. 0.3.12: Схема электролюминисцентного индикатора</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.10.5>0.10.5</A>&nbsp;&nbsp;Дисплеи с эмиссией полем</H3><A 
name=FieldEmission></A></CENTER>
<P>Дисплеи с эмиссией полем (FED) - плоские дисплеи, которые по принципу работы 
подобны обычным ЭЛТ. Но в отличие от обычной ЭЛТ, в которой имеется одна (три) 
электронных пушки, в данных дисплеях каждый пиксел имеет собственный, независимо 
адресуемый источник электронов. Электроны генерируются из холодных катодов, 
имеющих форму очень острых микроигл, которых на каждый пиксел может иметься до 
нескольких тысяч (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#fed">0.10.13</A>). Приложение 
электрического поля между прозрачным анодом экрана и катодом приводит к очень 
высоким напряженностям электрического поля из-за заостренности микроигл. 
Микроиглы изготавливаются из высокотемпературного материала, типа молибдена для 
того, чтобы при очень большой плотности тока, характерной для центров эмиссии, 
не возникало разбрызгивание металла и затупление игл. Электроны затем ускоряются 
и фокусируются на люминофор и свет испускается таким же образом как в ЭЛТ. 
<P>
<P><A name=tth_fIg0.13></A><A name=fed>
<CENTER><BR><IMG alt="Рисунок 78" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0178.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.3.13: Схема индикатора с эмиссией полем</CENTER></A>
<P>
<P>Дисплеи с эмиссией полем представляются весьма перспективными из-за небольших 
габаритов, широкого угла наблюдения (почти 180<SUP><FONT 
face=symbol>°</FONT></SUP>), малого энергопотребления (несколько ватт для 
дисплея размером с записную книжку), хорошего воспроизведения цветов (люминофор 
ЭЛТ), высокой скорости работы (в принципе той же что и ЭЛТ). 
<P>Применение люминофоров ЭЛТ требует использования высокого ускоряющего 
напряжения, что заставляет электроны расходиться от прямой линии. При этом 
пикселы становятся менее точно определенными, т.е. изображение размывается. Для 
компенсации дефокуировки требуются дополнительные электроды, усложняющие 
конструкцию. Кроме этого, так как данный дисплей - вакуумное устройство, то 
наличие остаточных газов в сочетании с высоким напряжением вызывает 
разрушительную ионную бомбардировку микроигл катодов. По этим причинам в 
настоящее время среди разработчиков ведется дискуссия о целесообразности 
использования люминофоров ЭЛТ. 
<P>Дисплеи данного типа (в основном пятидюймовые одноцветные дисплеи для 
приборов) в настоящее время серийно в промышленных масштабах производит PixTech 
(консорциум компаний в Европе, США и Японии). 
<P>Компания Candescent Сан-Хосе, Калифорния объявила о планируем выпуске таких 
дисплеев размером с записную книжку. 
<P>Однако успехи в крупносерийном производстве ЖК индикаторов с активной 
матрицей, по-видимому, не дадут возможности дисплеям с эмиссией полем получить 
широкий рынок. 
<P>
<CENTER>
<H3><A name=tth_sEc0.11>0.11</A>&nbsp;&nbsp;Дисплейные подсистемы 
IBM&nbsp;PC</H3></CENTER>
<P>Дисплеи для IBM&nbsp;PC относятся к растровым дисплеям. Их специальное 
рассмотрение делается в связи с тем, что в настоящее время они наиболее 
распространенны, хотя вряд ли могут служить примером изящных технических 
решений. 
<P>Дисплейная подсистема IBM&nbsp;PC состоит из двух основных 
компонент:<BR><FONT face=symbol>·</FONT>&nbsp;видеоадаптера,<BR><FONT 
face=symbol>·</FONT>&nbsp;монитора. 
<P>В свою очередь и видеоадаптеры и мониторы разделяются на несколько различных 
типов. Допускаются определенные (не произвольные) их комбинации. 
<P>
<CENTER>
<H3><A name=tth_sEc0.11.1>0.11.1</A>&nbsp;&nbsp;Видеоадаптеры</H3></CENTER>
<P>Первоначально IBM&nbsp;PC выпускались с черно-белым адаптером MDA (Monochrome 
Display Adapter). Максимальное разрешение составляло 640&times;350 точек, графические 
возможности отсутствовали. Следующим был также черно-белый видеоадаптер 
"Геркулес", выпущенный фирмой Hercules Computer Technology, Inc. Этот адаптер 
обеспечивает разрешение 720&times;350 с графическими возможностями. 
<P>Первым цветным видеоадаптером фирмы IBM стал CGA (Color Graphics Adapter). 
Разрешение его мало (320&times;200), цветов мало (до 4), программирование 
противоестественное. Максимальное разрешение составляет 640&times;200. 
<P>Затем был выпущен видеоадаптер EGA - (Enhanced Graphics Adapter). Он 
обеспечивает разрешение 640&times;200 при 16 цветах из 64. Максимальное разрешение 
640&times;350. 
<P>Первым видеоадаптером со сравнительно приемлемыми характеристиками стал VGA 
(Video Graphics Array) с максимальным разрешением до 800&times;600 при 256 цветах. 
<P>Затем фирма IBM разработала видеоадаптер 8514/A, имевшего параметры более 
соответствующие сложившимся потребностям - 1024&times;768 при 256 цветах. 
<P>Последняя разработка фирмы IBM - видеоадаптер XGA (eXtended Graphics Array) с 
не самыми современными возможностями 1024&times;768 при 256 цветах. Он на уровне 
регистров совместим с VGA. 
<P>Многие фирмы выпускают улучшенные версии VGA под названиями Super VGA и Ultra 
VGA, но общий стандарт отсутствует. 
<P>Фирма Texas Instruments предложила стандарт на программный интерфейс с 
интеллектуальными видеоадаптерами, использующими графические процессоры 
TMS&nbsp;340xx (TIGA-стандарт, Texas Instruments Graphics Architecture). В 
настоящее это самые мощные видеоадаптеры для IBM PC. 
<P>Сводка основных параметров упомянутых видеоадаптеров приведена в таблице <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t11.1">0.11.1</A>. 
<P><A name=t11.1></A>
<P><A name=tth_tAb0.11.1>
<CENTER>Таблица 0.11.1: Характеристики видеоадаптеров IBM PC</CENTER></A>
<CENTER>
<P>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD>Адап- </TD>
    <TD align=middle>Подклю- </TD>
    <TD align=middle>Разре- </TD>
    <TD align=middle colSpan=2>Развертки</TD>
    <TD align=middle>Цве-</TD>
  <TR>
    <TD>тер </TD>
    <TD align=middle>чение </TD>
    <TD align=middle>шение </TD>
    <TD align=middle>Кадр., </TD>
    <TD align=middle>Строчн.,</TD>
    <TD align=middle>тов </TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle>Гц </TD>
    <TD align=middle>кГц </TD>
    <TD align=middle></TD>
  <TR>
    <TD>MDA </TD>
    <TD align=middle>TTL </TD>
    <TD align=middle>720&times;350 </TD>
    <TD align=middle>50 </TD>
    <TD align=middle>18.43 </TD>
    <TD align=middle>- </TD>
  <TR>
    <TD>HGC </TD>
    <TD align=middle>TTL </TD>
    <TD align=middle>720&times;348 </TD>
    <TD align=middle>50 </TD>
    <TD align=middle>18.43 </TD>
    <TD align=middle>- </TD>
  <TR>
    <TD>CGA </TD>
    <TD align=middle>RGB/TTL</TD>
    <TD align=middle>640&times;200 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>15.75 </TD>
    <TD align=middle>4 </TD>
  <TR>
    <TD>EGA </TD>
    <TD align=middle>RGB/TTL</TD>
    <TD align=middle>640&times;350 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>21.85 </TD>
    <TD align=middle>16 </TD>
  <TR>
    <TD>EGA+ </TD>
    <TD align=middle>RGB/TTL</TD>
    <TD align=middle>640&times;480 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>30.50 </TD>
    <TD align=middle>16 </TD>
  <TR>
    <TD>VGA </TD>
    <TD align=middle>RGB </TD>
    <TD align=middle>640&times;480 </TD>
    <TD align=middle>60/70 </TD>
    <TD align=middle>31.47 </TD>
    <TD align=middle>16 </TD>
  <TR>
    <TD></TD>
    <TD align=middle>аналог </TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD>8514/A</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1024&times;768 </TD>
    <TD align=middle>87 </TD>
    <TD align=middle>35.50 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD></TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
    <TD align=middle>черес.</TD>
    <TD align=middle></TD>
    <TD align=middle></TD>
  <TR>
    <TD>XGA </TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1024&times;768 </TD>
    <TD align=middle>72 </TD>
    <TD align=middle>37.50 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>SVGA-1</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>800&times;600 </TD>
    <TD align=middle>56 </TD>
    <TD align=middle>35.20 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>SVGA-2</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>800&times;600 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>37.80 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>SVGA-3</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>800&times;600 </TD>
    <TD align=middle>72 </TD>
    <TD align=middle>48.30 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>UVGA-1</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1024&times;768 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>48.40 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>UVGA-2</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1024&times;768 </TD>
    <TD align=middle>70 </TD>
    <TD align=middle>56.50 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>UVGA-3</TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1280&times;960 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>64.00 </TD>
    <TD align=middle>256 </TD>
  <TR>
    <TD>TIGA </TD>
    <TD align=middle>-<FONT face=symbol>|</FONT><FONT face=symbol>|</FONT>- 
</TD>
    <TD align=middle>1280&times;1024 </TD>
    <TD align=middle>60 </TD>
    <TD align=middle>64.00 </TD>
    <TD align=middle>64 млн</TD></TD></TR></TBODY></TABLE></CENTER>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.11.2>0.11.2</A>&nbsp;&nbsp;Мониторы</H3></CENTER>
<P>Для отображения текста и графики используется несколько типов мониторов: 
<P><FONT face=symbol>·</FONT> композитный монитор, на вход которого подается 
композитный сигнал системы NTSC (National Television System Committee), 
применяемой в телевидении. Используется с видеоадаптером CGA; 
<P><FONT face=symbol>·</FONT> цифровой монитор, на вход которого по N проводам 
подается сигнал в цифровой форме. Цифро-аналоговое преобразование выполняется 
монитором. На таком дисплее можно получить до 2<SUP>N</SUP> оттенков. 
Используется с видеоадаптерами CGA, EGA. Первоначально выпускался CD (Color 
Display) - простой 16-ти цветный (4 провода), затем ECD (улучшенный цветной 
дисплей) с 16-ю оттенками из 64, затем многочастотный цифровой, позволяющий 
работать с различными частотами кадров, и отображающий 16 оттенков из 64. 
Используется с видеоадаптерами EGA, VGA; 
<P><FONT face=symbol>·</FONT> аналоговый дисплей, на вход которого подаются 
готовые RGB-сигналы, сформированные видеоадаптером. Используется с 
видеоадаптерами VGA, SVGA, XGA. 
<P>
<CENTER>
<H3><A name=tth_sEc0.11.3>0.11.3</A>&nbsp;&nbsp;Замечание об адресации в 
IBM&nbsp;PC</H3></CENTER>
<P>Это замечание предназначено для тех, кто не знаком с обозначением адресов для 
IBM&nbsp;PC, так как при рассмотрении видеоадаптеров будет применяться именно 
оно. 
<P>Микропроцессор, используемый в IBM&nbsp;PC, может адресовать до 1 Мбайта 
памяти (2<SUP>20</SUP> байт). Вместе с тем 16-ю разрядами можно адресовать 
только 64 Кбайт (2<SUP>16</SUP>), поэтому используются два типа адресов: 
физический и логический. Физический адрес - 20-битное значение от 0h до FFFFFh. 
Аппаратура при передаче информации между процессором и памятью использует 
физический адрес. Память разбита на логические сегменты, имеющими длину до 64 
Кбайт (FFFFh байт). Каждому сегменту программно назначается базовый адрес, 
являющийся адресом первого байта в сегменте. Эти адреса кратны 16. Других 
ограничений на размещение сегментов нет. Логический адрес байта состоит из 
сегментного значения и значения относительного адреса в сегменте. Записывается 
логический адрес в виде: BBBB:OOOO. Где BBBB - базовый адрес сегмента, деленный 
на 16, а OOOO - относительный адрес в сегменте. Физический адрес генерируется 
сдвигом влево на 4 разряда базового адреса и сложением его со значением 
относительного адреса. 
<P>
<CENTER>
<H3><A name=tth_sEc0.11.4>0.11.4</A>&nbsp;&nbsp;Архитектура 
видеоадаптеров</H3></CENTER>
<P>Все видеоадаптеры содержат в себе видеопамять и видеоконтроллер (см. 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p9.1">0.9.1</A>). 
Видеопамять доступна процессору как обычная оперативная память и, в зависимости 
от типа видеоадаптера, занимает или часть или всю память, отводимую в адресном 
пространстве IBM&nbsp;PC под экранный буфер (128 Кбайт от адреса A000:0000 до 
B000:FFFF). 
<P>Предусмотрено две группы взаимоисключающих режимов работы видеоадаптеров - 
символьные и графические. 
<P>В символьных режимах видеопамять интерпретируется как последовательность 
байт, содержащая байты коды отображаемых знаков и байты атрибутов, задающих 
цвета. 
<P>В графических режимах видеопамять интерпретируется самым различным образом, в 
основном, как некоторым образом упорядоченная последовательность битовых 
значений. Начало экрана - точка (0,0) расположена в левом верхнем углу. 
X-координата нарастает слева-направо, а Y-координата - сверху-вниз. 
<P>
<CENTER>
<H3><A name=tth_sEc0.11.5>0.11.5</A>&nbsp;&nbsp;Видеоадаптер CGA</H3></CENTER>
<P>Содержит 16 Кбайт видеопамяти, начинающейся с адреса B800:0000, и контроллер 
электронно-лучевой трубки. 
<P>В символьных режимах отображается 25 строк по 40 или 80 символов. Для 
кодирования каждого знакоместа экрана используется 2 байта. 1-й байт - код 
отображаемого знака, второй байт - байт атрибута, задающий цвета символа и фона, 
мерцание. Размер знакоместа 8&times;8, таблица знакогенератора "зашита" в ПЗУ и, 
следовательно, не может быть изменена. 
<P>В графических режимах видеопямять интерпретируется или как последовательность 
двухбитовых значений при разрешении 320&times;200 с четырьмя цветами, или как 
последовательность однобитовых значений при разрешении 640&times;200 и черно-белом 
изображении. Видеопамять делится на две части: в первой половине, начинающейся с 
адреса B800:0000, содержатся описания всех нечетных строк, во второй, 
начинающейся с адреса B800:2000. Левому верхнему углу экрана отвечают два 
старших бита начального байта видеопамяти при разрешении 320&times;200 и старший бит - 
при разрешении 640&times;200. Структура видеопамяти CGA проиллюстрирована на 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.1">0.11.1</A>. 
<P>
<P><A name=tth_fIg0.1></A><A name=p11.1>
<CENTER><BR><IMG alt="Рисунок 79" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0179.gif">
<P></CENTER>
<CENTER>Рис. 0.4.1: Структура видеопамяти для CGA</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.11.6>0.11.6</A>&nbsp;&nbsp;Видеоадаптеры 
EGA/VGA</H3></CENTER>
<P>Видеоадаптеры EGA и VGA - более совершенные устройства, более напоминаюшие 
уже рассмотренные нами растровые дисплеи. На рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.2">0.11.2</A> показана 
блок-схема, общая для этих двух адаптеров, на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.3">0.11.3</A> - блок схема, 
демонстрирующая отличия для VGA, связанные с использованием не цифрового, а 
аналогового дисплея. 
<P>Графический контроллер обеспечивает обмен между центральным процессором и 
видеопамятью, которая так же как и в CGA находится в адресном пространстве для 
экранного буфера. 
<P>Видеопамять имеет объем, как правило 256 Кбайт, но для EGA может быть и 64 
Кбайт. Видеопамять разбита на 4 банка (цветовых слоя). Банки занимают одно 
адресное пространство таким образом, что по каждому адресу расположено сразу 4 
байта по одному байту в каждом слое. Можно запрещать или разрешать запись в 
отдельные слои памяти при помощи регистра разрешения записи цветового слоя. Для 
операции чтения в каждый данный момент времени может быть доступен только один 
слой, задаваемый с помощью регистра выбора читаемого слоя. В большинстве режимов 
работы видеопамять разделена несколько страниц. При этом одна из них активна и 
отображается на экране. Запись информации возможна как на активную, так и на 
неактивные страницы. 
<P>Преобразователь последовательности выбирает данные из памяти, требуемым для 
того или иного режима образом, и формирует последовательный поток бит, 
передаваемый контроллеру атрибутов. 
<P>Контроллер атрибутов, используя таблицу цветности, преобразует информацию о 
цветах, полученную из видеопамяти, в информацию для ЭЛТ. 
<P>Контроллер ЭЛТ генерирует синхроимпульсы управления ЭЛТ. 
<P>Тактовый генератор управляет временными параметрами видеоадаптера и доступом 
от процессора в слоям видеопамяти. 
<P>Показанный на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.3">0.11.3</A> ЦАП преобразует 
цифровые сигналы яркостей в аналоговые значения, необходимые аналоговому 
монитору. 
<P>Большое количество различных регистров у адаптеров позволяет гибко 
регулировать режимы работы, управлять сигналами синхронизации, определять формат 
экрана и т.д. 
<P>
<P><A name=tth_fIg0.2></A><A name=p11.2>
<CENTER><BR><IMG alt="Рисунок 80" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0180.gif">
<P></CENTER>
<CENTER>Рис. 0.4.2: Блок-схема видеоадаптеров EGA/VGA</CENTER></A>
<P>
<P>
<P><A name=tth_fIg0.3></A><A name=p11.3>
<CENTER><BR><IMG alt="Рисунок 81" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0181.gif">
<P></CENTER>
<CENTER>Рис. 0.4.3: Блок-схема видеоадаптера VGA</CENTER></A>
<P>
<P>
<CENTER>
<H4>Текстовый режим</H4></CENTER>
<P>В текстовом режиме можно вывести на экран 25 строк по 40 или 80 символов. 
Перепрограммировав некоторые регистры адаптера можно получить для EGA до 43 
строк, а для VGA - до 50. 
<P>Также как для CGA для кодирования символа используется два байта. Первый из 
них содержит код символа и заносится в нулевой цветовой слой, второй байт 
содержит атрибут символа и заносится во второй цветовой слой. 
<P>Таблицы знакогенератора, задающие внешний вид символов, размещаются во втором 
слое видеопамяти. Всего может быть загружено 4 таблицы для EGA и 8 - для VGA. 
Одновременно могут быть активными две таблицы, что дает возможность отобразить 
на экране до 512 различных конфигураций знакомест одновременно. Возможные 
размеры символов приведены в таблице <A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#t11.1">0.11.1</A>. 
<P>Байт атрибута задает цвета символа и фона, мерцание и одну из двух активных 
таблиц знакогенератора. 
<P>
<CENTER>
<H4>Графические режимы</H4></CENTER>
<P>Имеется большой набор графических режимов. В режимах, совместимых с CGA 
используется только 0-й слой памяти, распределение которого по адресному 
пространству и интерпретация значений бит такая же как и для CGA (см. 
рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.1">0.11.1</A>). 
<P>В части графических режимов память интерпретируется как послойная с 
использованием одного, двух или всех четырех слоев. Если используется, например, 
4 слоя, то изображение будет с 4-мя битами на пиксел - по биту из каждого слоя. 
В этом случае имеется 16 оттенков одновременно. При использовании одного слоя, 
естественно, получаем черно-белое изображение. В режиме с двумя слоями 
поддерживается три уровня черно-белого (черный, белый, ярко-белый) и мерцание. 
<P>В одном из режимов, применимом только для VGA, память интерпретируется как 
линейная последовательность всех четырех слоев (см. рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p11.4">0.11.4</A>). Это режим с 
разрешением 320&times;200 с байтом на пиксел, т.е. с 256 градациями. 
<P>
<P><A name=tth_fIg0.4></A><A name=p11.4>
<CENTER><BR><IMG alt="Рисунок 82" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0182.gif">
<P></CENTER>
<CENTER>Рис. 0.4.4: Структура видеопамяти для VGA-режима 
320&times;200&times;256</CENTER></A>
<P>
<P>
<CENTER>
<H4>Графические акселераторы</H4></CENTER>
<P>Для повышения быстродействия графических подсистем IBM&nbsp;PC выпускаются 
специальные типы адаптеров - графические акселераторы. Графические акселераторы 
содержат собственные процессоры, которые специализированы для выполнения 
графических преобразований, поэтому изображения обрабатываются быстрее, чем с 
использованием универсального ЦП ПЭВМ. 
<P>Акселераторы, кроме типа и возможностей графического процессора, различаются 
по следующим основным параметрам: 
<P><FONT face=symbol>·</FONT> памятью для сохранения изображений. В некоторых 
случаях используется обычная динамическая память DRAM, но обычно используется 
специализированная видеопамять VRAM; 
<P><FONT face=symbol>·</FONT> используемой шиной. В настоящее время обычно 
используется PCI; 
<P><FONT face=symbol>·</FONT> шириной регистров. Чем шире регистр, тем большее 
число пикселов можно обработать за олну команду. В настоящее время обычная 
ширина - 64 бита. В ближайшее время на рынке появятся акселераторы с шириной 
регистров в 128 бит. 
<P>
<CENTER>
<H3><A name=tth_sEc0.12>0.12</A>&nbsp;&nbsp;Устройства ввода</H3></CENTER>
<P>
<CENTER>
<H3><A name=tth_sEc0.12.1>0.12.1</A>&nbsp;&nbsp;Клавиатуры 
(Keyboards)</H3></CENTER>
<P>Естественным и единственным устройством ввода текста является клавиатура. Для 
обнаружения нажатия клавиши используется несколько различных способов: 
механическое замыкание контактов, изменение емкости, изменение магнитного поля, 
прерывание луча света и т.д. Важными свойствами клавиатуры являются кодировка, 
используемая для идентификации нажатия клавиши - ASCII (American Standard Code 
for Infomation Interchange), КОИ-7, КОИ-8 (ГОСТ), MIC (Болгария) и т.д., 
количество клавиш редактирования текста, возможности расширения кодировки за 
счет нажатия дополнительных клавиш - верхнего и нижнего регистров (Shift), 
клавиш для задания управляющих символов и кодов (Ctrl, Alt). Существенными 
являются и эргономические свойства - размеры и расположение клавиш, наличие 
тактильной обратной связи при нажатии и ощущение контакта при полностью нажатой 
клавише. 
<P>
<CENTER>
<H3><A name=tth_sEc0.12.2>0.12.2</A>&nbsp;&nbsp;Кнопки (Buttons)</H3></CENTER>
<P>Программируемые функциональные кнопки обычно служат для задания какого-либо 
определенного воздействия, связанного с нажатием, отпусканием или удержанием 
кнопки (ввод команды, выбор параметра). Конструктивно кнопки устроены аналогично 
кнопкам текстовой клавиатуры. Чаше всего они объединены с текстовой клавиатурой, 
но иногда выделены в виде отдельного блока. Другой разновидностью функциональной 
клавиатуры являются кнопки на зондах планшетов или на "мышке". 
<P>Основное отличие кнопочного устройства от текстового состоит в том, что 
клавиш на клавиатуре всегда ограниченное количество и с ними жестко связаны 
определенные метки (коды клавиш). Клавиши же кнопочного устройства не имеют 
заранее определенного значения и их число может меняться от одной до нескольких 
десятков. 
<P>По сути дела текстовая клавиатура просто разновидность кнопочной, но так как 
она нашла большое распространение, то обычно выделяется в отдельный класс 
устройств. 
<P>Во многих компьютерных системах за счет написания собственного драйвера можно 
превратить текстовую клавиатуру в программируемую функциональную и наоборот. 
<P>
<CENTER>
<H3><A name=tth_sEc0.12.3>0.12.3</A>&nbsp;&nbsp;Световое перо 
(Lightpen)</H3></CENTER>
<P>Световое перо (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.1">0.12.1</A>) служит для 
непосредственного указания элементов изображения на экране. При аналоговой 
генерации векторов (символов) можно идентифицировать конкретный вектор (символ). 
При цифровой генерации векторов можно идентифицировать "рассматриваемую" точку 
изображения. Из-за нечеткой оптики светового пера и трудностей позиционирования 
в точку на экране эта возможность практически не нужна. Чаще световое перо 
используется для указания всего элемента изображения. В каждом случае 
используется временное соответствие светового сигнала и сиюминутного состояния 
обработки команд построения. На векторном дисплее таким образом устанавливается 
однозначное соответствие между текущей командой, отрабатываемой дисплейным 
генератором, и элементом изображения, от которого пришел световой импульс. 
<P>Для идентификации некоторого сложного элемента картинки как целого, например, 
изображения микросхемы, используется техника "идентификаторов указания". 
Идентификатор указания представляет собой неграфический, комментирующий элемент 
дисплейного файла. При аппаратной обработке идентификаторов указания дисплейный 
процессор запоминает их последовательность, в общем случае иерархическую. Для 
идентификации объекта при поступлении импульса от светового пера достаточно 
просмотреть запомненные идентификаторы указания. 
<P>Пример дисплейного файла с двумя указуемыми объектами 
<P>
<CENTER>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD align=middle>Команда</TD>
    <TD align=middle>Смысл </TD>
    <TD align=middle>Стек picid</TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>любые дислейные команды </TD>
    <TD align=middle>пусто</TD>
  <TR>
    <TD>picid 001 </TD>
    <TD>идентификатор указания 001</TD>
    <TD align=middle>001 </TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>графические команды </TD>
    <TD align=middle>001 </TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>построения элемента 001 </TD>
    <TD align=middle>001 </TD>
  <TR>
    <TD>end_picid </TD>
    <TD>конец указуемой группы </TD>
    <TD align=middle>пусто</TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>любые дислейные команды </TD>
    <TD align=middle>пусто</TD>
  <TR>
    <TD>picid 002 </TD>
    <TD>идентификатор указания 002</TD>
    <TD align=middle>002 </TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>графические команды </TD>
    <TD align=middle>002 </TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>построения элемента 002 </TD>
    <TD align=middle>002 </TD>
  <TR>
    <TD>end_picid </TD>
    <TD>конец указуемой группы </TD>
    <TD align=middle>пусто</TD>
  <TR>
    <TD>. . . . . .</TD>
    <TD>любые дислейные команды </TD>
    <TD align=middle>пусто</TD>
  <TR>
    <TD>endpic </TD>
    <TD>конец дисплейного файла </TD>
    <TD align=middle>пусто</TD></TD></TR></TBODY></TABLE></CENTER>
<P>В данном примере имеется два не вложенных указуемых элемента. До отработки 
команды picid 001 стек идентификаторов указания пуст. После ее отработки и до 
первой команды end_picid в стеке будет находится 001. После отработки end_picid 
стек идетификаторов указания очищается и до команды picid 002 остается пустым. 
<P>В растровых дисплеях отклонение луча не зависит от обрабатываемого 
изображения. В этом случае информация о указании дает позицию на экране. Для 
идентификации элемента картинки с помощью светового пера в растровых дисплеях 
требуется "прокрутка в уме" всего видимого изображения для определения 
принадлежности точки некоторому объекту (объектам). При этом также может 
использоваться программно реализованная техника идентификаторов указания. Для 
ускорения интерпретации изображения часто используются так называемые 
графические оболочки - обычно прямоугольники, иногда окружности, объемлющие 
элементы изображения. Если точка, указанная световым пером, находится вне 
графической оболочки, то интерпретацию объекта можно пропустить. 
<P>В качестве эха светового пера обычно используют сверхподсветку выделенного 
элемента изображения. В векторных дисплеях сверхподсветка примитивного элемента 
(вектор, символ) реализуется аппаратно. 
<P>В целом это устройство применяется все реже не только из-за того, что оно 
более применимо на векторных дисплеях, но, в основном, из-за того что длительная 
работа с ним весьма утомительна - рука всегда "на весу". 
<P>
<P><A name=tth_fIg0.1></A><A name=p12.1>
<CENTER><BR><IMG alt="Рисунок 83" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0183.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.1: Схема работы светового пера. 1 - усилитель, 2 - 
фотоприемник, 3 - оптическая система</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.12.4>0.12.4</A>&nbsp;&nbsp;Планшеты 
(Tabletts)</H3></CENTER>
<P>Планшеты являются устройствами ввода с непосредственным заданием координат 
(локаторы). Это одно из важнейших устройств ввода. Пользователь может вводить 
информацию в компьютер привычным образом, как при использовании карандаша и 
бумаги. 
<P>Позиции задаются перемещением зонда планшета (визира или карандаша) по 
рабочей поверхности. Координата текущего положения зонда определяется с частотой 
от 200 до 500 раз в секунду. Этим обеспечивается что даже при быстрых 
перемещениях зонда вдоль какой-нибудь кривой она будет вводиться достаточно 
гладко. Из-за большой частоты опроса генерируется много данных, поэтому в 
большинстве случаев они подвергаются дальнейшей обработке для сокращения объема. 
Обычно используемый способ - выдача новой координатной пары при достижении 
заданного отклонения от последней зафиксированной. 
<P>В общем планшеты работают в различных режимах: 
<P><FONT face=symbol>·</FONT> точечном, когда генерируется координата при 
нажатии кнопки зонда; 
<P><FONT face=symbol>·</FONT> непрерывном, когда последовательность координат 
генерируется непрерывно при нахождении зонда в рабочей области планшета (при 
этом может производиться сокращение объема передаваемых данных так, как это 
описано выше);<BR>
<P><FONT face=symbol>·</FONT> переключаемом непрерывном, когда генерируется 
непрерывная последовательность координат при нажатии кнопки зонда; 
<P><FONT face=symbol>·</FONT> приращений, когда формируются приращения к 
последней выданной позиции. 
<P>Имеется много различных способов определения координат зонда на планшете. 
Далее будут рассмотрены основные из них. 
<P>
<CENTER>
<H4>Потенциометрический (градиентный) планшет</H4></CENTER>
<P>Поверхность планшета представляет собой резистивное покрытие (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.2">0.12.2</A>). По границам к 
этому покрытию подводится ток попеременно по X и Y направлениям. Зонд планшета 
имеет гальванический контакт с резистивным покрытием. Координата определяется по 
падению напряжения в точке контакта. Для устранения искажений поля, вызываемого 
взаимным влиянием контактных шин, питающие напряжения подводят через диоды. 
Основные проблемы при разработке таких планшетов: 
<P><FONT face=symbol>·</FONT> материал покрытия должен быть достаточно 
высокоомным, чтобы обеспечить простоту и точность измерения; 
<P><FONT face=symbol>·</FONT> материал покрытия должен обладать однородной 
проводимостью, чтобы обеспечить линейность ввода координат;<BR>
<P><FONT face=symbol>·</FONT> материал покрытия должен быть достаточно прочным, 
чтобы выдержать постоянный контакт с наконечником планшета.<BR>
<P>
<P><A name=tth_fIg0.2></A><A name=p12.2>
<CENTER><BR><IMG alt="Рисунок 84" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0184.gif">
<P></CENTER>
<CENTER>Рис. 0.5.2: Устройство потенциометрического планшета</CENTER></A>
<P>
<P>Предлагаются и иные конструкции градиентных планшетов, не требующие 
гальванического контакта зонда с поверхностью. Например, планшет в котором 
резистивный слой из окиси олова находится между двух стеклянных пластин. 
Высокочастотное питание подводится через контактные шины по краям планшета. 
Используются различные частоты для X и Y напряжений питания. Зонд планшета 
воспринимает фазы сигналов, различные для различных точек на планшете. Так как 
используется высокочастотный сигнал, то возможно значительное удаление зонда от 
поверхности - более 10 мм. Измерение амплитуды сигнала позволяет получить 
информацию о высоте подъема зонда. 
<P>
<CENTER>
<H4>Акустический планшет</H4></CENTER>
<P>В таком планшете разрядник в зонде излучает ультразвуковой сигнал, который 
принимается ленточными микрофонами, расположенными на двух смежных сторонах 
планшета (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.3">0.12.3</A>а). Акустические 
планшеты с тремя группами микрофонов (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.3">0.12.3</A>б) могут 
выдавать трехмерную координатную информацию. 
<P>
<P><A name=tth_fIg0.3></A><A name=p12.3>
<CENTER><BR><IMG alt="Рисунок 85" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0185.gif">
<P></CENTER>
<CENTER>Рис. 0.5.3: Устройство акустического планшета</CENTER></A>
<P>
<P>По времени прихода звука к микрофонам определяется точное положение зонда. В 
связи с большой скоростью распространения звука в воздухе <FONT 
face=symbol>@</FONT> 330 м/с эти измерения не представляют трудностей. 
Акустический планшет позволяет определять координаты и при значительном удалении 
от поверхности планшета, но с ошибкой, как это пояснено на рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.4">0.12.4</A>a). 
<P>
<P><A name=tth_fIg0.4></A><A name=p12.4>
<CENTER><BR><IMG alt="Рисунок 86" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0186.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.4: Причина ошибки в акустическом планшете</CENTER></A>
<P>
<P>Это свойство планшета позволяет определять 3D координаты с помощью плоского 
планшета, имеющего по микрофону на каждой стороне. При стороне планшета = 2а и 
измерении координат x и y относительно центра планшета из рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.4">0.12.4</A>б) можно 
написать следующие выражения для z: 
<P>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap></TD>
          <TD noWrap>
            <TABLE align=left border=0>
              <TBODY>
              <TR>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>z<SUP>2</SUP> 
                  </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>= </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>d<SUB>1</SUB><SUP>2</SUP> - 
                        (x+a)<SUP>2</SUP>,</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap></TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>= </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>d<SUB>2</SUB><SUP>2</SUP> - 
                        (x-a)<SUP>2</SUP>,</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap></TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>= </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>d<SUB>3</SUB><SUP>2</SUP> - 
                        (y+a)<SUP>2</SUP>,</TD></TR></TBODY></TABLE></TD></TR>
              <TR>
                <TD align=middle colSpan=0 noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap></TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle noWrap>= </TD></TR></TBODY></TABLE></TD>
                <TD align=middle noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=0 
                        noWrap>d<SUB>4</SUB><SUP>2</SUP> - 
                    (y-a)<SUP>2</SUP>.</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
          <TD noWrap></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Из этого легко находятся: 
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>x = (d<SUB>1</SUB><SUP>2</SUP> - 
            d<SUB>2</SUB><SUP>2</SUP>)&nbsp;&nbsp;/&nbsp;&nbsp;4a;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>y = (d<SUB>3</SUB><SUP>2</SUP> - 
            d<SUB>4</SUB><SUP>2</SUP>)&nbsp;&nbsp;/&nbsp;&nbsp;4a;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE align=center border=0>
  <TBODY>
  <TR>
    <TD>
      <TABLE align=left>
        <TBODY>
        <TR>
          <TD align=middle noWrap>4z<SUP>2</SUP> = (d<SUB>1</SUB><SUP>2</SUP> 
            + d<SUB>2</SUB><SUP>2</SUP> + d<SUB>3</SUB><SUP>2</SUP> + 
            d<SUB>4</SUB><SUP>2</SUP>) + 2x<SUP>2</SUP> + 2y<SUP>2</SUP> + 
            4a<SUP>2</SUP>.</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>Основным недостатком акустического планшета является сильная зависимость от 
окружающей среды, особенно влажности. 
<P>
<CENTER>
<H4>Емкостные планшеты</H4></CENTER>
<P>В таких планшетах под непроводящей рабочей поверхностью генерируется 
электромагнитное поле с помощью взаимно перпендикулярных групп проводников 
(рис.&nbsp;<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.5">0.12.5</A>). 
Проводники в каждой группе должны быть точно параллельны и находиться на 
одинаковых расстояниях друг от друга. Эти проводники служат передающими 
антеннами. На передающие антенны поочередно подается высокочастотное напряжение. 
Сигнал принимается емкостным датчиком зонда. Пусть датчик находится между двумя 
проводниками, тогда вначале будет получен сигнал от одной антенны, затем от 
другой. По соотношению амплитуд сигналов можно узнать точное расположение между 
антеннами. 
<P>Недостатком этого планшета является то, что зонд должен находиться либо 
непосредственно на рабочей поверхности, либо на малых расстояниях от нее (на 
толщину нескольких листов бумаги). 
<P>
<P><A name=tth_fIg0.5></A><A name=p12.5>
<CENTER><BR><IMG alt="Рисунок 87" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0187.gif">
<P></CENTER>
<CENTER>Рис. 0.5.5: Устройство планшета с емкостным съемом 
информации</CENTER></A>
<P>
<P>Примером такого устройства может служить планшет, разработанный в ИЯФ'е и 
выпускавшийся рядом организаций. Рабочее поле планшета 380&times;380 мм, проводники 
расположены на двухсторонней печатной плате с довольно большим шагом - 5мм. 
Частота высокочастотного генератора - 625 КГц. Время коммутации 200 мкс. 
Датчиком служит незамкнутая круглая проволочная петля. Встроенный в планшет 
микропроцессор за 7 мс рассчитывает и выдает координату с довольно высокой 
точностью - 0.1 мм. 
<P>
<CENTER>
<H4>Магнитоэлектрические планшеты</H4></CENTER>
<P>В таких планшетах катушка в зонде и проводники под рабочей поверхностью 
планшета могут рассматриваться как первичная и вторичная обмотки трансформатора. 
Если приемная катушка находится на зонде, то конструктивно этот планшет подобен 
емкостному планшету. Существенно большее разрешение достигается при 
использовании обмотки зонда как передатчика, но в этом случае катушка зонда 
должна иметь много витков, чтобы сгенерировать достаточно мощное поле. 
Большинство далее упоминаемых кодировщиков, используемых для ввода чертежей, 
работает на этом принципе. 
<P>
<CENTER>
<H4>Магнитострикционные планшеты</H4></CENTER>
<P>Магнитострикционные планшеты используют магнитострикционные проволоки как 
носители сигнала, которые под воздействием внешнего магнитного поля 
незначительно изменяют свою форму (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.6">0.12.6</A>). Магнитное 
поле, вызываемое передающими катушками на краю планшета и перпендикулярное 
магнитострикционным проволокам, генерирует изменение их длин. Это изменение 
длины распространяется вдоль проволоки как волна механического напряжения со 
скоростью около 5000 м/с. Волна, попадая в приемную катушку, расположенную в 
зонде планшета, из-за изменения потока формирует в катушке импульс напряжения. 
Время прихода волны пропорционально расстоянию от передающей катушки на краю 
планшета до зонда. Так как расстояние всегда измеряется вдоль проволоки, то не 
требуется, чтобы проволоки были абсолютно параллельны. Не требуется располагать 
проволоки так часто, как это следовало бы из разрешения прибора. Более того 
достаточно их расположить на расстоянии в 2-3 мм все равно при этом на планшете 
гарантируется достаточное изменение потока. Этот принцип имеет относительно 
высокую точность (0.01 мм), широко используется в робототехнике и в большинстве 
планшетов. 
<P>Bit&nbsp;Pad&nbsp;One фирмы Summagraphics работает на магнитострикционном 
принципе. Размер его рабочей области 300&times;300 мм. На подложке под рабочей 
поверхностью планшета с шагом <FONT face=symbol>»</FONT> 3 мм расположены по 96 
проволок для каждой из осей. Разрешение по координате составляет 0.1 мм. 
<P>Стандартом на рынке для PC является планшет Bit Pad Two, имеющий разрешение в 
0.05 мм и точность в 0.5 мм. 
<P>
<P><A name=tth_fIg0.6></A><A name=p12.6>
<CENTER><BR><IMG alt="Рисунок 88" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0188.gif">
<P>
<P></CENTER>
<CENTER>Рис. 0.5.6: Устройств магнитострикционного планшета</CENTER></A>
<P>
<P>
<CENTER>
<H3><A name=tth_sEc0.12.5>0.12.5</A>&nbsp;&nbsp;"Мышь" (Mouse), трекбол 
(Treckball), джойстик (Joystick)</H3></CENTER>
<P>Не прямой ввод графической информации, как правило, основан на перемещении 
пользователем по экрану графического курсора. 
<P>Имеется три основных метода позиционирования курсора: статический абсолютный, 
статический относительный и динамический. В первом случае устройство ввода 
выдает координаты точек, которые определяются текущей позицией устройства ввода. 
Во втором случае используются приращения координат, соответствующие изменению 
позиции устройства ввода. В третьем случае выдается последовательность координат 
для перемещения курсора, направление и скорость перемещения которого задаются 
установкой устройства ввода, например, направление перемещения задается 
направлением отклонения рычага, а скорость перемещения - величиной угла 
отклонения.<BR>
<P>
<CENTER>
<H4>"Мышь"</H4></CENTER>
<P>Под "мышкой" понимается небольшое ручное устройство ввода, выдающее 
приращения координат при перемещении "мышки" по рабочей поверхности (по рабочему 
столу для механических "мышек" и по специальной пластине для оптических 
"мышек"). При перемещении механической "мышки" по столу движение передается 
одним (двумя) шарами на пару потенциометров или датчиков угла поворота, 
соответствующих перемещениям по двум взаимно-перпендикулярным направлениям. 
Обычно в качестве датчика угла используется диск с нанесенными непрозрачными 
радиальными полосками (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#p12.7">0.12.7</A>). Комплект из 
двух пар светодиод-фотодиод позволяет определить направление поворота. 
Вследствие произвольного и не слишком точного перемещения "мышки" наилучшим 
методом ее использования является статический относительный. 
<P>
<P><A name=tth_fIg0.7></A><A name=p12.7>
<CENTER><BR><IMG alt="Рисунок 89" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0189.gif">
<P></CENTER>
<CENTER>Рис. 0.5.7: Устройство механической мышки</CENTER></A>
<P>
<P>
<CENTER>
<H4>Трекбол</H4></CENTER>
<P>Представляет собой перевернутую "мышку" с одним большим шаром, приводимым в 
действие рукой. Для обеспечения медленных перемещений масса шара должна быть 
сравнительно большой. Это затрудняет большие и быстрые перемещения. Для 
облегчения задания больших перемещений используют различные сложные конструкции 
вплоть до подвески шара на воздушной подушке. Так как имеется хорошая тактильная 
обратная связь, то для управления курсором может использоваться не только 
координата, но и угол поворота шара, кроме того, так как шар достаточно тяжелый, 
то можно использовать и величину начального импульса шара. Т.е. трекбол, в 
отличие от "мышки", применим для всех трех способов позиционирования курсора - 
статического абсолютного, статического относительного и динамического. В 
практическом использовании трекбол заменяется "мышкой". 
<P>
<CENTER>
<H4>Джойстик</H4></CENTER>
<P>Джойстик представляет собой вертикально стоящий рычаг, который на нижнем 
конце установлен в кардане и удерживается пальцами в среднем - начальном 
состоянии. Джойстик является идеальным "рычагом управления курсором", так как он 
может отклоняться требуемым образом одновременно по двум осям. Основная область 
применений - динамический метод позиционирования, однако он применим и для 
статического абсолютного очень быстрого, но неточного позиционирования. 
Перемещения джойстика передаются на два потенциометра, соответствующих X и Y 
направлениям и выдающих напряжения для каждой их координат. Очень простая и 
дешевая конструкция джойстика использует жестко закрепленный жезл, к которому 
прикреплены датчики растяжения, например, пьезоэлектрические. 
<P>
<CENTER>
<H3><A name=tth_sEc0.12.6>0.12.6</A>&nbsp;&nbsp;Потенциометр</H3></CENTER>
<P>Потенциометр с аналого-цифровым преобразователем обеспечивает быстрый ввод 
точных числовых значений с контролем значения выводом на дисплей. Используются 
потенциометры вращения и ползунковые. Для задания значений углов наиболее 
подходят потенциометры вращения. 
<P>
<CENTER>
<H3><A name=tth_sEc0.12.7>0.12.7</A>&nbsp;&nbsp;Растровый сканер</H3></CENTER>
<P>Сканеры используются для растрового ввода изображений с последующей их 
обработкой и/или документированием. 
<P>Одна из важных областей применения сканеров - ввод текстов. При этом 
обработка введенного изображения выполняется с программного обеспечения 
распознавания текстов (Optical Character Recognition - OCR). 
<P>В САПР сканеры используются для автоматизации ввода ранее подготовленной 
конструкторской документации. В этом случае проблема заключается в том, что 
данные от сканера представлены в растровой, а не векторной форме и требуется 
выполнение обратного преобразования растр-вектор. Эта задача сложна и далека от 
решения (необходимо распознавать различные изображения и тексты в том числе 
рукописные, учитывать, что изображение представляется поточечно, причем одна и 
та же линия может получить при сканировании не только различную ширину, но и 
дырки и т.д.). 
<P>Сканеры работают в один или три прохода, большинство сканеров работает в один 
проход. 
<P>Простейшие сканеры - ручные с шириной сканирования до 127 мм (5 дюймов). 
Например, сканер швейцарской фирмы Logitech Internatiohal S.A. Ширина 
сканирования 106 мм, разрешение 100, 200, 300 или 400 точек на дюйм. Встроенный 
источник подсветки оригинала - красный или желто-зеленый. 
<P>Более точные сканеры - стационарные. Имеется три основных варианта 
стационарных сканеров: 
<OL type=1>
  <P>
  <LI>Оригинал перемещается относительно неподвижной линейки фотоприемников 
  (сканеры с полистовой подачей и барабанные сканеры для больших форматов). 
  <LI>Линейка фотоприемников перемещается относительно оригинала (планшетные 
  сканеры). 
  <LI>Проекционные сканеры, в которых изображение неподвижного оригинала 
  проецируется на матрицу фотоприемников, установленных в фокусе объектива. 
  Объектив же перемещается для выбора нужного фрагмента с нужным увеличением. 
  </LI></OL>
<P>Цвет подсветки в стационарных сканерах обычно белый. Сканирование цветных 
изображений обеспечивается сменой светофильтров. В некоторых сканерах смена 
производится вручную. 
<P>Аппаратное разрешение стационарных сканеров от 300&times;300 точек на дюйм (dot per 
inch - dpi) до 1200&times;1200 dpi. С использованием интерполяции разрешение достигает 
от 4800&times;4800 dpi до 10000&times;10000 dpi. 
<P>Поддержка цветов в стационарных сканерах - либо серая шкала, либо 24 
бита/пиксел ( &gt; 16 миллионов), либо 30 бит/пиксел ( &gt; 1 миллиарда) и до 36 
бит/пиксел ( &gt; 68 миллиардов). 
<P>Выходные форматы растровых файлов - TIF, GIF, BMP, PCX и т.д. Интерфейс для 
подключения к ПЭВМ - либо параллельный порт, либо SCSI. Обычно сканеры имеют 
встроеннный буфер для сохранения изображения объемом от 32 К до 2 М. Сканеры с 
полистовой подачей обеспечивают ввод и сканирование от 3 до 8 листов в минуту 
(при одном проходе). 
<P>
<CENTER>
<H3><A name=tth_sEc0.12.8>0.12.8</A>&nbsp;&nbsp;Кодировщик</H3></CENTER>
<P>Кодировщик (по ГОСТ'у - графоповторитель) - устройство автоматического и/или 
полуавтоматического ввода. В автоматических кодировщиках выполняется 
сканирование вводимого документа (чертежа, графика, карты), определение и 
считывание элементов документа. 
<P>В более распространенных полуавтоматических кодировщиках оператор вручную 
перемещает рабочий орган по поверхности, распознает элементы документа (линии, 
отметки, знаки и т.п.) и идентифицирует их с помощью клавиатуры. Небольшая 
функциональная клавиатура обычно размещается непосредственно на рабочем органе, 
а дополнительные - на рабочей поверхности. Определение координат происходит 
автоматически по положению рабочего органа. Для повышения точности ввода 
координат рабочие органы (визиры) изготавливаются так, что допускают 
прецизионную установку в заданную точку. Если координаты расположены в узлах 
некоторой сетки, то точность обеспечивается округлением до ближайшего узла 
сетки. 
<P>Обычно в полуавтоматических кодировщиках используется два основных режима 
работы: 
<P><FONT face=symbol>·</FONT> дискретный, когда оператор устанавливает зонд в 
требуемую точку и выдает команду определения координаты; 
<P><FONT face=symbol>·</FONT> непрерывный, когда оператор перемещает зонд вдоль 
некоторой линии, а устройство автоматически генерирует последовательность 
координат. Координаты генерируются либо через заданные интервалы времени, либо 
по удовлетворению некоторого критерия, например, при достижении заданной 
разности координат текущей и последней зафиксированной точки.<BR>
<P>По сути дела полуавтоматический кодировщик - просто большой планшет с 
достаточными размерами и разрешением, оснащенный так или иначе выполненной 
клавиатурой (в простейших случаях в качестве клавиатуры используется часть 
рабочей поверхности). 
<P>Автоматические кодировщики - комбинация планшетного графопостроителя и 
планшета. Известны и реализации, использующие сканер с последующей программной в 
той или иной мере интерактивной обработкой документа. Основные проблемы в этом 
случае - преобразование растр - вектор и недостаточные форматы вводимых 
документов, что требует решения задачи "сшивки" отдельно введенных фрагментов. 
<P>
<CENTER>
<H3><A name=tth_sEc0.13>0.13</A>&nbsp;&nbsp;Нетрадиционные 
устройства</H3></CENTER>
<P>Имеется много разновидностей нетрадиционных устройств, например, "аккордная" 
клавиатура, представляющая собой комплект программируемых кнопок в виде тонких 
рояльных клавиш. Основное свойство такой клавиатуры - возможность одновременного 
нажатия сразу нескольких клавиш. Если клавиш 5 шт. (как и пальцев на руке), то 
можно получить 32 различных комбинации. 
<P>Более распространенным устройством указания является сенсорная панель, 
позволяющая рукой указывать объекты на экране. 
<P>Прогресс в полупроводниковой индустрии сделал реально применимыми и 
устройства речевого диалога. 
<P>С точки зрения средств вывода в системах виртуальной реальности используются 
по сути дела обычные растровые дисплеи в сочетании с механизмами отслеживания 
положения головы и направления взгляда для управления формированием сцены. 
<P>Кроме уже рассмотренных обычных устройств ввода в системах виртуальной 
реальности используются устройства ввода с тремя и шестью степенями свободы 
(перемещения вдоль трех осей и вращения вокруг них), а также устройства для 
обеспечения тактильной и силовой обратной связи, имитирующие ощущения 
прикосновения и "податливость" в ответ на воздействие. 
<P>
<CENTER>
<H3><A name=tth_sEc0.13.1>0.13.1</A>&nbsp;&nbsp;Сенсорная панель (Touch 
Screen)</H3></CENTER>
<P>Сенсорная панель - устройство ввода невысокой точности, используемое, в 
основном, для ручного (пальцем) указания объектов на экране дисплея. Простейшая 
сенсорная панель представляет собой рамку, размещаемую между экраном, на который 
выдаются объекты указания, и пользователем. На двух сторонах рамки размещается 
некоторое количество светодиодов, а на противоположных к ним - фотоприемники. 
Координаты указания определяются по перекрытию лучей от светодиодов. 
<P>Более сложные сенсорные панели используют прозрачную (стеклянную) 
поверхность, покрытую прозрачным проводящим слоем окиси олова. Факт указания 
определяется по изменению сопротивления. 
<P>Известны сенсорные панели и с другими принципами определения координаты 
прикосновения пальца, например, с использованием поверхностных акустических 
волн. 
<P>
<CENTER>
<H3><A name=tth_sEc0.13.2>0.13.2</A>&nbsp;&nbsp;Речевой диалог</H3></CENTER>
<P>В общем случае система речевого диалога осуществляет распознавание, смысловую 
интерпретацию и синтез речевых сигналов и обеспечивает устный диалог человека с 
ЭВМ либо на формализованных, либо на усеченных естественных языках. В такого 
сорта системах можно выделить две основные компоненты - средства распознавания 
речи и средства синтеза речи. 
<P>Для надежного распознавания как отдельно произносимых слов так и слитной речи 
в реальном масштабе времени требуется производительность порядка 10 млн оп/с. 
<P>Появились коммерческие системы речевого ввода, распознающие порядка 1000 
слов. Слова определяются как отдельные высказывания, отделенные достаточно 
длительными промежутками от других слов во фразе. Для целей диалога 
распознаватели речи используются в составе вспомогательных средств подачи 
отдельных простых команд. На графических рабочих местах такие системы могут 
освобождать пользователя от необходимости задания команд с помощью клавиатуры 
или меню, например, при вводе графической информации с помощью планшетов, когда 
подача команд с помощью обычных средств диалога нарушает так называемую 
тактильную непрерывность диалога. 
<P>Синтез речи обычно производится по формантному методу. Сначала текст 
переводится в последовательность фонем, затем по ней рассчитывается динамика 
управления формантным синтезатором, который генерирует и выдает сообщение. 
<P>
<CENTER>
<H3><A name=tth_sEc0.13.3>0.13.3</A>&nbsp;&nbsp;Средства диалога для систем 
виртуальной реальности</H3></CENTER>
<P>В системах виртуальной реальности, в отличие от обычных приложений 
компьютерной графики, как правило, требуется вывод и ввод трехмерной 
координатной информации, как для управления положениями синтезируемых объектов, 
так и для определения координат частей тела оператора и направления его взгляда. 

<P><B>Space ball</B>. Одним из первых появилось устройство спейсбол (space 
ball), представляющее собой конструктивное объединение мышки и небольшого 
трекбола. Мышка перемещается оператором по столу и обеспечивает ввод двух 
координат. Ввод третьей координаты обеспечивается вращением шарика трекбола 
большим пальцем руки. 
<P>Для манипулирования объектами в трехмерном пространстве часто используется 
техника виртуальной сферы. Управляемый объект окружается (воображаемой) сферой. 
Для перемещения сферы используется мышь, а вращение сферы и заключенного в нее 
объекта обеспечивается вращением шарика трекбола. 
<P><B>Head Mounted Display</B>. В системах виртуальной реальности используются 
устройства вывода в виде монтируемых на голове дисплеев (Head Mounted Display - 
HMD) с бинокулярным всенаправленным монитором (Binocular Omni-Orientation 
Monitor - BOOM) со средствами отслеживания положения головы (head tracking) и 
даже отслеживанием положения глаза (eye tracking). Это требуется для создания 
эффекта "погружения" со стереоскопическим изображением и оперативным изменением 
сцены при поворотах головы и/или глаз. 
<P>Используемые в HMD жидкокристаллические дисплеи обычно невысокого разрешения 
(до 417&times;277 пикселов). Сравните это с 1280&times;1024 и 1600&times;1200 для настольных 
систем или с разрешением монитором для телевидения высокой четкости (ТВВЧ) - 
1920&times;1035 и 1920&times;1135. Поэтому ведутся интенсивные исследования по созданию 
средств отображения для систем виртуальной реальности, обладающих высоким 
разрешением при приемлемых значениях электромагнитных наводок. Одна из таких 
систем, использующих миниатюрные монохромные прецизионные электронные трубки и 
жидкокристаллические затворы, обеспечивает разрешение до 2000&times;2000. Интересное 
решение заключается в формировании изображения лазером непосредственно на 
сетчатке, но эти предложения пока далеки от коммерческой реализации. 
<P>Отслеживание положения головы обеспечивается либо механическими рычажными 
системами, либо комплектом инфракрасных или электромагнитных датчиков. 
<P><B>Power Glove, Date Glove, Date Suit</B>. Непосредственный ввод 
геометрической информации о положении частей тела с поддержкой тактильной и даже 
силовой обратной связи обеспечивается перчатками и костюмами данных. 
<P>Дешевая перчатка данных - Power&nbsp;Glove, используемая для игр, 
обеспечивает только четыре уровня данных. 
<P>В более продвинутой перчатке данных Date Glove фирмы VPL (рис.&nbsp;<A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#DataGlove">0.13.1</A>) для 
определения углов сгибания пальцев используются оптические волокна. Для 
обеспечения тактильной обратной связи используются пневматические активаторы. 
<P><A name=DataGlove>
<CENTER><BR><IMG alt="Рисунок 90" 
src="Учебное пособие Вводный курс компьютерной графики_files/kg0190.gif">
<P><BR></CENTER>
<CENTER>Рис. 0.6.1: Перчатка данных фирмы VPL</CENTER></A>
<P>
<P>Были эксперименты обеспечения тактильной обратной связи за счет вибрации 
пьезокристаллов. 
<P>Более точный ввод координатной информации обеспечивают системы с 
использованием механического рычажного экзоскелета руки (Exos Dexterous 
Handmaster) и датчиками углов сгибания пальцев на основе эффекта Холла. Это 
позволяет достигнуть точности <FONT face=symbol>±</FONT>0.5<SUP><FONT 
face=symbol>°</FONT></SUP>. Системы с экзоскелетом позволяют обеспечить и 
силовую обратную связь. 
<P>Более простой прибор, использующий силовую обратную связь, был разработан 
фирмой Digital и представляет собой рукоятку, подобную рукоятке газа в 
мотоцикле, которая может менять свое сопротивление скручиванию. 
<P>Проблема в обеспечении тактильной и силовой обратной связи состоит в том, что 
пользователь реагирует на воздействия и вносит изменения быстрее, чем система 
сможет среагировать. Для хорошего ощущения объекта система тактильной обратной 
связи должна обеспечивать скорость порядка 100-300&nbsp;Гц, что почти на порядок 
выше обычной скорости перезаписи визуальной информации. 
<P>Пиджак данных (Date Suit) по принципам работы подобен перчатке данных и 
отличается только количеством датчиков. 
<P>
<H3><A name=tth_bib>СПИСОК ЛИТЕРАТУРЫ</A></H3>
<DL compact>
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib1" 
  name=mbib1>1</A>]
  <DD>Ньюмен У., Спрулл Р. Основы интерактивной машинной графики. Пер. с англ. 
  М.: Мир, 1976. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib2" 
  name=mbib2>2</A>]
  <DD>Роджерс Д. Алгоритмические основы машинной графики. Пер. с англ. М.: Мир, 
  1989. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib3" 
  name=mbib3>3</A>]
  <DD>Фоли Дж., вэн Дэм А. Основы интерактивной машинной графики: В 2-х книгах. 
  Пер. с англ. М.: Мир, 1985. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib4" 
  name=mbib4>4</A>]
  <DD>Encarnacao J. Einfuerung in die Graphische Datenverarbeiterung// 
  Eurographics '89. Tutorial Notes 1. Hamburg, FRG, September 4-8, 1989. 122 s. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib5" 
  name=mbib5>5</A>]
  <DD>Антонофф Майкл, Линдерхолм Оуэн. Лазерные принтеры// Компьютер Пресс, 
  сборник N 1, 1989, с. 3-8. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib6" 
  name=mbib6>6</A>]
  <DD>Винцюк Т.К. Системы речевого диалога// Материалы пятой школы-семинара 
  "Интерактивные системы" (Кутаиси, 2-10 апреля 1983 г.). Тбилиси: Мецниереба, 
  1983, с. 16-22. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib7" 
  name=mbib7>7</A>]
  <DD>Печатающие устройства персональных ЭВМ: Справочник// Под редакцией проф. 
  И.М.Витенберга. М.: Радио и связь, 1992. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib8" 
  name=mbib8>8</A>]
  <DD>Лисицин Б.Л. Низковольтные индикаторы: Справочник. М.: Радио и связь, 
  1985. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib9" 
  name=mbib9>9</A>]
  <DD>Справочник по машинной графике в проектировании/ В.Е.Михайленко, 
  В.А.Анпилогова, Л.А.Кириевский и др.: Под ред. В.Е.Михайленко. А.А.Лященко. 
  Киев: Будiвельник, 1984. 184 с. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib10" 
  name=mbib10>10</A>]
  <DD>Мячев А.А, Степанов В.Н. Персональные ЭВМ и микроЭВМ. Основы организации: 
  Справочник/ Под ред. А.А.Мячева. М.: Радио и связь, 1991. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib11" 
  name=mbib11>11</A>]
  <DD>Новаковский С.В. Цвет в цветном телевидении. М.: Радио и связь, 1988. 288 
  с. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib12" 
  name=mbib12>12</A>]
  <DD>Павлидис Т. Алгоритмы машинной графики и обработки изображений. Пер. с 
  англ. М.: Радио и связь, 1986. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib13" 
  name=mbib13>13</A>]
  <DD>Роджерс Д., Адамс Дж. Математические основы машинной графики Пер. с англ. 
  М.: Машиностроение, 1980. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib14" 
  name=mbib14>14</A>]
  <DD>Сизых В.Г. Растровые дисплеи ряда Гамма. Новосибирск, 1985. 26 с. 
  (Препринт ВЦ СО АН СССР; 607). 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib15" 
  name=mbib15>15</A>]
  <DD>Ткаченко А.П. Цветное телевидение. Минск: Беларусь, 1981. 253 с. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib16" 
  name=mbib16>16</A>]
  <DD>Фролов А.В., Фролов Г.В. Программирование видеоадаптеров CGA, EGA, VGA. 
  M.: Диалог-МИФИ, 1992. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib17" 
  name=mbib17>17</A>]
  <DD>Joseph Hans, Mehl Max. Computer Graphics Hardware: Introduction and State 
  of the Art// Eurographics '91. Tutorial Note 9. Viena, 2.-6. September 1991. 
  Austria, Viena. 29 p. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib18" 
  name=mbib18>18</A>]
  <DD>Fontenier Guy and Gros Pascal. Architectures of Graphic Processors for 
  Interactive 2D Graphics// Computer Graphics Forum 7 (1988) 78-89. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib19" 
  name=mbib19>19</A>]
  <DD>Pinkman R., Novak M., Guttag K. Video-RAM exels at fast graphics// 
  Electronics Design, pp. 161-171 (August 18 1983). 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib20" 
  name=mbib20>20</A>]
  <DD>Seidel H.-P. PC Graphics Hardware // Eurographics '88. Tutorial/Cours 
  8.-Nice, 12.-16. September 1988. France, Nice. 44 p. 
  <DT>[<A href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#CITEmbib21" 
  name=mbib21>21</A>]
  <DD>Stralunsfreier Flacbildschirm. MC, Die MikrocomputerZeitschrift. 8, 1989, 
  s. 66. </DD></DL>
<P>
<CENTER>
<H3><A name=tth_sEc0.14>0.14</A>&nbsp;&nbsp;Приложение 1. Преобразование моделей 
цветов</H3></CENTER>
<P>В данном приложении приведены процедуры перевода из RGB в HSV и наоборот и 
процедуры перевода из RGB в HLS и наоборот, соответствующие процедурам из 
[Род89] и [Фол85]. В процедурах используется вещественная арифметика. Переход на 
целочисленную арифметику, более подходящую для реальных применений, может быть 
выполнен определением констант для максимальных значений координат цвета - 
R,G,B, оттенка (hue), насыщенности (saturation), светлоты (value или lightness) 
и соответствующей модификацией текстов процедур. 
<P><PRE>/*==================================================== RGB_HSV
 * Преобразования из модели HSV в RGB и наоборот
 */

#include &lt;stdio.h&gt;

#define UNDEFINED -1.0  /* Неопределенное значение для Hue */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.1>0.14.1</A>&nbsp;&nbsp;V_HSVRGB - перевод из HSV в 
RGB</H3></CENTER>
<P><PRE>/*--------------------------------------------------- V_HSVRGB
 * Переводит из модели HSV в модель RGB
 *
 * void V_HSVRGB (float *r,  float *g,  float *b,
 *                float hue, float sat, float val)
 *
 * Вход:
 * 0 &lt;= hue &lt;= 360 градусов - оттенок. Основные цвета:
 *                        0 - красный,  60 - желтый,
 *                      120 - зеленый, 180 - голубой
 *                      240 - синий,   300 - пурпурный
 *                     Остальные цвета между ними
 * 0.0 &lt;= sat &lt;= 1.0 - Saturation - насыщенность
 * 0.0 &lt;= val &lt;= 1.0 - Value - светлота
 *
 * Выход:
 * 0.0 &lt;= r,g,b &lt;= 1.0 - значения красного, зеленого, синего
 * V_HSVRGB= 0 - норма
 *           1/2/3 - ошибка в hue/ошибка в sat/ошибка в val
 */

int  V_HSVRGB (r, g, b, hue, sat, val)
float *r, *g, *b, hue, sat, val;
{  int  ii, otw;
   float c1, c2, c3, fr;

   otw= 0;
   if (sat == 0.0) {            /* Ахроматический цвет */
      *r= val;  *g= val;  *b= val;
      if (hue != UNDEFINED) ++otw;
   } else {                     /* Хроматический цвет  */
      hue-= (ii= (int)(hue/360.0)) * 360.0;
      if (ii &lt; 0) hue= -hue;
      ii= (int)(hue /= 60.0);
      fr= hue - ii;
      c1= val*(1.0 - sat);
      c2= val*(1.0 - sat*fr);
      c3= val*(1.0 - sat*(1.0 - fr));
      switch (ii) {
         case 0: *r= val; *g= c3;  *b= c1;  break;
         case 1: *r= c2;  *g= val; *b= c1;  break;
         case 2: *r= c1;  *g= val; *b= c3;  break;
         case 3: *r= c1;  *g= c2;  *b= val; break;
         case 4: *r= c3;  *g= c1;  *b= val; break;
         case 5: *r= val; *g= c1;  *b= c2;  break;
      }
   }
   return (otw);
}  /* V_HSVRGB */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.2>0.14.2</A>&nbsp;&nbsp;V_RGBHSV - перевод из RGB в 
HSV</H3></CENTER>
<P><PRE>/*--------------------------------------------------- V_RGBHSV
 * Переводит из модели RGB в модель HSV
 *
 * void V_RGBHSV (float r,  float g,  float b,
 *                float *hue, float *sat, float *val)
 *
 * Вход:
 * 0.0 &lt;= r,g,b &lt;= 1.0 - значения красного, зеленого, синего
 *
 *
 * Выход:
 * 0 &lt;= hue &lt;= 360 градусов - оттенок. Основные цвета:
 *                       0 - красный,  60 - желтый,
 *                     120 - зеленый, 180 - голубой
 *                     240 - синий,   300 - пурпурный
 *                     Остальные цвета между ними
 * 0.0 &lt;= sat &lt;= 1.0 - Saturation - насыщенность
 * 0.0 &lt;= val &lt;= 1.0 - Value - светлота
 *
 * V_RGBHSV= 0 - норма
 *           1/2/3 - ошибка в r/ошибка в g/ошибка в b
 */

int  V_RGBHSV (r, g, b, hue, sat, val)
float r, g, b, *hue, *sat, *val;
{  int  otw;
   float minc, maxc, h, s, v, dmax, rc, gc, bc;

   otw= 0;
   if (r &lt; 0.0 || r &gt; 1.0) ++otw;    /* Проверки значений   */
   if (g &lt; 0.0 || g &gt; 1.0) otw= 2;
   if (b &lt; 0.0 || b &gt; 1.0) otw= 3;
   if (!otw) {
      if ((maxc= r) &lt; b) maxc= b;    /* Поиск макс значения */
      if (maxc &lt; g) maxc= g;
      if ((minc= r) &gt; b) minc= b;    /* Поиск мин  значения */
      if (minc &gt; g) minc= g;
      s= 0.0;                        /* Насыщенность        */
      if (maxc != 0.0) s= (maxc-minc)/maxc;
      if (s == 0.0) h= UNDEFINED;    /* Ахроматический цвет */
      else {                         /* Хроматический  цвет */
         dmax= maxc-minc;
         rc= (maxc-r)/dmax;          /* rc - удаленность    */
         gc= (maxc-g)/dmax;          /* цвета от красного   */
         bc= (maxc-b)/dmax;
         if (r == maxc) h= bc-gc; else   /* Цвет между жел- */
                                         /* тым и пурпурным */
         if (g == maxc) h= 2+rc-bc; else /* Цвет между голу-*/
                                         /* бым и желтым    */
         h= 4+gc-rc;                     /* Цвет между пур- */
                                         /* пурным и голубым*/
         if ((h*= 60.0) &lt; 0.0) h+= 360.0;
      }
      *hue= h;  *sat= s;  *val= maxc;
   }
   return (otw);
}  /* V_RGBHSV */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.3>0.14.3</A>&nbsp;&nbsp;Тест процедур V_HSVRGB и 
V_RGBHSV</H3></CENTER>
<P><PRE>/*----------------------------------------------- MAIN RGB_HSV
 * Тестовая программа проверки прдпрограмм
 * преобразований из системы HSV в RGB и наоборот.
 */

void main(void)
{  int  ii;
   float r, g, b, r1, g1, b1, hue, sat, val;

   r= 0.0;  g= 0.0;  b= 0.0;  hue= 0.0;

m0:printf ("HSV r,g,b= (%f %f %f) ? ", r,g,b);
   scanf  ("%f%f%f", &amp;r, &amp;g, &amp;b);
   ii= V_RGBHSV (r, g, b, &amp;hue, &amp;sat, &amp;val);
   printf ("V_RGBHSV: otw=%d hue=%f sat=%f val=%f\n",
                      ii, hue, sat, val);
   ii= V_HSVRGB (&amp;r1, &amp;g1, &amp;b1, hue, sat, val);
   printf ("V_HSVRGB: otw=%d r=%f g=%f b=%f\n",
                      ii, r1, g1, b1);
   goto m0;
}

/*==================================================== RGB_HLS
 * Преобразования из модели HLS в RGB и наоборот
 */

#include &lt;stdio.h&gt;

#define UNDEFINED -1.0  /* Неопределенное значение для Hue */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.4>0.14.4</A>&nbsp;&nbsp;V_HLSRGB - перевод из HLS в 
RGB</H3></CENTER>
<P><PRE>/*--------------------------------------------------- V_HLSRGB
 * Переводит из модели HLS в модель RGB
 *
 * void V_HLSRGB (float *r,  float *g,  float *b,
 *                float hue, float sat, float lig)
 *
 * Вход:
 * 0 &lt;= hue &lt;= 360 градусов - оттенок. Основные цвета:
 *                       0 - красный,  60 - желтый,
 *                     120 - зеленый, 180 - голубой
 *                     240 - синий,   300 - пурпурный
 *                     Остальные цвета между ними
 * 0.0 &lt;= sat &lt;= 1.0 - Saturation - насыщенность
 * 0.0 &lt;= lig &lt;= 1.0 - Value - светлота
 *
 * Выход:
 * 0.0 &lt;= r,g,b &lt;= 1.0 - значения красного, зеленого, синего
 * V_HLSRGB= 0 - норма
 *           1/2/3 - ошибка в hue/ошибка в sat/ошибка в lig
 */

static float VAL_RGB (n1, n2, hue)
float n1, n2, hue;
{  float otw;
   if (hue &lt; 0)     hue+= 360.0;
   hue= hue - ((int)(hue/360.0)) * 360.0;
   if (hue &lt; 60.0)  otw= n1+(n2-n1)*hue/60.0; else
   if (hue &lt; 180.0) otw= n2;                  else
   if (hue &lt; 240.0) otw= n1+(n2-n1)*(240.0-hue)/60.0; else
   otw= n1;
   return (otw);
}  /* VAL_RGB */


int  V_HLSRGB (r, g, b, hue, sat, lig)
float *r, *g, *b, hue, sat, lig;
{  int   otw;
   float m1, m2;

   otw= 0;
   if (sat == 0.0) {            /* Ахроматический случай */
      if (hue == UNDEFINED) {
         *r= lig;  *b= lig;  *g= lig;
      } else ++otw;
   } else {                     /* Хроматический случай */
      if ((m2= lig) &gt; 0.5) m2= 1.0 - lig;
      m2= lig + sat*m2;
      m1= 2*lig - m2;
      *r= VAL_RGB (m1, m2, hue+120.0);
      *g= VAL_RGB (m1, m2, hue);
      *b= VAL_RGB (m1, m2, hue-120.0);
   }
   return (otw);
}  /* V_HLSRGB */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.5>0.14.5</A>&nbsp;&nbsp;V_RGBHLS - перевод из RGB в 
HLS</H3></CENTER>
<P><PRE>/*--------------------------------------------------- V_RGBHLS
 * Переводит из модели RGB в модель HLS
 *
 * void V_RGBHLS (float r,  float g,  float b,
 *                float *hue, float *sat, float *lig)
 *
 * Вход:
 * 0.0 &lt;= r,g,b &lt;= 1.0 - значения красного, зеленого, синего
 *
 *
 * Выход:
 * 0 &lt;= hue &lt;= 360 градусов - оттенок. Основные цвета:
 *                       0 - красный,  60 - желтый,
 *                     120 - зеленый, 180 - голубой
 *                     240 - синий,   300 - пурпурный
 *                     Остальные цвета между ними
 * 0.0 &lt;= sat &lt;= 1.0 - Saturation - насыщенность
 * 0.0 &lt;= lig &lt;= 1.0 - Value - светлота
 *
 * V_RGBHLS= 0 - норма
 *           1/2/3 - ошибка в r/ошибка в g/ошибка в b
 */

int  V_RGBHLS (r, g, b, hue, sat, lig)
float r, g, b, *hue, *sat, *lig;
{  int  otw;
   float minc, maxc, h, s, l, dm, rc, gc, bc;

   otw= 0;
   if (r &lt; 0.0 || r &gt; 1.0) ++otw;
   if (g &lt; 0.0 || g &gt; 1.0) otw= 2;
   if (b &lt; 0.0 || b &gt; 1.0) otw= 3;
   if (!otw) {
      if ((maxc= r) &lt; b) maxc= b;
      if (maxc &lt; g) maxc= g;
      if ((minc= r) &gt; b) minc= b;
      if (minc &gt; g) minc= g;
      l= (maxc + minc) / 2;     /* Светлота */
      if (maxc == minc) {       /* r=g=b - ахроматический */
         s= 0.0;                /* случай */
         h= UNDEFINED;
      } else {                  /* Хроматический случай */
         dm= maxc-minc;
         s= (l &lt; 0.5) ? dm/(maxc+minc) : dm/(2-maxc-minc);
         rc= (maxc-r)/dm;       /* Вычисление тона */
         gc= (maxc-g)/dm;       /* rc задает удаленность */
         bc= (maxc-b)/dm;       /* цвета от красного     */
         if (r == maxc) h= bc-gc;   else /* Цвет между жел- */
                                         /* тым и пурпурным */
         if (g == maxc) h= 2+rc-bc; else /* Цвет между голу-*/
                                         /* бым и желтым    */
         h= 4+gc-rc;                     /* Цвет между пур- */
                                         /* пурным и голубым*/
         if ((h*= 60.0) &lt; 0.0) h+= 360.0;
      }
      *hue= h;  *sat= s;  *lig= l;
   }
   return (otw);
}  /* V_RGBHLS */
</PRE>
<P>
<CENTER>
<H3><A name=tth_sEc0.14.6>0.14.6</A>&nbsp;&nbsp;Тест процедур V_HLSRGB и 
V_RGBHLS</H3></CENTER>
<P><PRE>/*----------------------------------------------- MAIN RGB_HLS
 * Тестовая программа проверки подпрограмм
 * преобразований из системы HLS в RGB и наоборот.
 */

void main(void)
{  int  ii;
   float r, g, b, r1, g1, b1, hue, sat, lig;

   r= 0.0;  g= 0.0;  b= 0.0;  hue= 0.0;

m1:printf ("HLS r,g,b= (%f %f %f) ? ", r,g,b);
   scanf  ("%f%f%f", &amp;r, &amp;g, &amp;b);
   ii= V_RGBHLS (r, g, b, &amp;hue, &amp;sat, &amp;lig);
   printf ("V_RGBHLS: otw=%d hue=%f sat=%f lig=%f\n",
                      ii, hue, sat, lig);
   ii= V_HLSRGB (&amp;r1, &amp;g1, &amp;b1, hue, sat, lig);
   printf ("V_HLSRGB: otw=%d r=%f g=%f b=%f\n",
                      ii, r1, g1, b1);
   goto m1;
}
</PRE>
<DIV align=center>
<H3><FONT color=#0000ff face=""><A 
href="http://ermak.cs.nstu.ru/kg_rivs/kg01.htm#top" title="В начало ...">В 
начало документа</A> , <A href="http://ermak.cs.nstu.ru/kg_rivs/home.htm#top" 
title=Домой>На основную страничку</A></FONT></H3>
<H3><FONT color=#ff0000 face=""></FONT></H3></DIV></BODY></HTML>
